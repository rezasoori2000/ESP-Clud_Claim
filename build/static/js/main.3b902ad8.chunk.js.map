{"version":3,"sources":["components/controls/VerticalStepper.jsx","components/DrawerContainer.js","pages/Performance.jsx","components/controls/ESPSelect.jsx","components/controls/ESPTextField.jsx","components/controls/ESPCheckbox.jsx","pages/AdminSettings/AdminSettingsPage.jsx","components/logics/Helper.jsx","pages/AdminSettings/AdminSettingsContainer.jsx","components/controls/IosSwitch.jsx","components/controls/ItemsList.jsx","components/controls/FullScreenDialog.jsx","pages/loading.js","pages/ProductionBoard/ProductionBoardPage.jsx","pages/ProductionBoard/ProductionBoardContainer.jsx","components/controls/Styles.jsx","pages/Claim/Login.jsx","components/controls/CircularProgressWithLabel.jsx","components/logics/ClaimLogic.jsx","pages/Claim/WorkTypes.jsx","pages/Claim/JobItems.jsx","components/controls/Barchart.jsx","pages/Claim/Summary.jsx","pages/Claim/DividedJobs.jsx","pages/Claim/Jobs.jsx","pages/Claim/Start.jsx","components/logics/Login.jsx","components/controls/FormDialog.jsx","pages/Claim/ClaimContainer.jsx","pages/SignIn.jsx","pages/UserManagement/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","backgroundColor","color","fontSize","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","getLabel","label","text","length","getLabels","p","index","adminJon","texts","VerticalStepper","props","classes","steps","step","className","Stepper","activeStep","orientation","map","isAdmin","Step","StepLabel","Typography","style","StepContent","Paper","square","elevation","DrawerContainer","drawerWidth","menuSize","createStyles","listItemText","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","background","menuButton","toolbar","mixins","drawerPaper","content","flexGrow","link","textDecoration","whiteColor","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","Cookies","height","Divider","List","textAlign","src","alt","isSystemAdmin","to","ListItem","ListItemIcon","ListItemText","primary","Button","variant","size","onClick","set","path","document","cookie","window","location","reload","href","mainRoute","startIcon","ShowProductionBoard","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Grid","container","item","lg","Hidden","only","changeMenuSize","fontWeight","textShadow","paddingLeft","process","smUp","implementation","Drawer","anchor","open","onClose","paper","ModalProps","keepMounted","xsDown","Performance","ESPSelect","name","helptext","onPropertyChange","items","FormControl","fullWidth","Select","labelId","id","value","filter","x","Selected","Value","onChange","type","MenuItem","e","Text","FormHelperText","ESPTextField","OutlinedInput","ESPCheckbox","memo","checked","row","FormControlLabel","control","Checkbox","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","AdminSettingsPage","minWidth","flexWrap","textField","bullet","margin","transform","title","pos","saveBtn","saveBtnTop","useEffect","scrollTo","undefined","adminSettings","Groups","Card","CardHeader","subheader","avatar","Avatar","onSave","CardContent","TextField","disabled","placeholder","helperText","ServerAddress","InputLabelProps","shrink","Username","DatabaseName","Password","Factories","onSelectChange","AllowClaimingOutOfFactoryWork","IncrementPercentage","ShowingCode","TrackLateLogin","LateAllowance","multiple","i","onGroupsSelectChange","input","renderValue","selected","join","JobListOrdering","TrackEarlyLeave","EarlyLeaveAllowance","ShowStandardTime","NoClaimAllowance","HidePreProductionJobs","DividJobs","TrackNotLoggedOut","PBShowProductionBoard","PBHideOutOfFactoryWorkTypes","ClaimOnPB","PBTitleColumn","PBCustomerColumn","PBHourColumn","PBDueDateColumn","ShowRework","ShowColour","ShowQty","ShowSalesPerson","ShowEstimator","PBJobOrders","Z2A","PSShowPerformanceStates","PSStatisticChart","PSEnableIndividual","PSStatisticGroup","PSPerformanceChart","mx","Helper","getLocalToken","get","user_t","setAsyncApiToken","username","password","route","a","grant_type","withCredentials","data","Object","keys","key","encodeURIComponent","headers","axios","post","apiPost","url","errorName","defaults","Authorization","Accept","apiGet","alert","timeConvert","num","hours","rhours","Math","floor","toString","minutes","rminutes","round","Component","AdminSettingsContainer","handelPropertyChange","event","adSettings","state","target","changes","push","setState","newSelectedId","newValues","includes","Disabled","Group","n","getGroupsByAPI","apiRoute","captureIPAddress","fetch","method","then","res","ip","oid","response","oldAdminSettings","JSON","parse","catch","err","getAdminSettingsByAPI","onChangeSettings","saveAdminSettingsByAPI","history","user","this","changeStep","IOSSwitchMain","styled","Switch","focusVisibleClassName","disableRipple","transitionDuration","palette","mode","opacity","border","grey","boxSizing","borderRadius","transition","transitions","create","duration","IOSSwitch","maxWidth","inline","ItemsList","alignItems","ListItemAvatar","Author","Resource","secondary","Fragment","component","Date","IsBold","Comment","flex","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","StyledTableCell","withStyles","head","common","black","white","body","TableCell","StyledTableRow","action","hover","TableRow","handleClose","Dialog","fullScreen","TransitionComponent","header","uls","textList","TableContainer","sm","xs","Table","table","TableHead","TableBody","scope","align","Name","Std","Phy","Loading","ProductionBoardPage","openDialog","setOpenDialog","note","setNote","searchVal","setsearchVal","jobs","setJobs","wt","setWt","pie","setPie","createMuiTheme","overrides","MuiTooltip","tooltip","defaultLabelStyle","fontFamily","beginTr","code","wts","chuncked","myArray","chunk_size","arrayLength","tempArray","myChunk","slice","chunkArray","htd","trs","element","section","j","Progress","Tooltip","ChartObj","t","placement","radius","PieChart","defaultProps","segmentsShift","dataEntry","labelStyle","InputLabel","htmlFor","float","sx","InputBase","ml","txt","filterJobs","Title","toLowerCase","Code","Customer","md","logoutFromPB","s","settings","WorkTypes","w","Comments","TitleBackgroundColor","TitleColor","Hours","Due","UnitQty","SalesPerson","Estimator","Colour","verticalAlign","r","claimOnPB","Oid","JobLevel","paddingRight","colSpan","ProductionBoardContainer","getProductionBoardInfoByAPI","loaded","jid","wid","jl","jobCode","gridSearchStyles","search","shape","fade","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","bolding","cursor","zIndex","boxBolding","boxShadow","borderBottom","borderRight","Login","logoutChecked","logout","useHistory","personList","loggingOut","IsLoggedIn","IsOnLeave","LastClaimTime","setTimeout","goBackToStart","fromPB","paddingTop","pathname","alignContent","Input","startAdornment","InputAdornment","searchNames","Box","bgcolor","handleLogin","OId","CircularProgressWithLabel","CircularProgress","top","left","bottom","right","CircularStatic","progress","Loginlogics","getJobItemsFromApi","jobId","worktypeId","workerId","WorkTypeId","message","getJobsOfWorkerFromApi","jobStage","siteWork","submitClaimInAPI","jobItems","groupPercent","comment","submitFullJobClaimInAPI","submitAdminJobClaimInAPI","claimingOId","GetClaimedByAPI","worktypId","GetPerfStatByAPI","from","Worktypes","workTypes","setSearchItems","setSearcVal","handleWorktypeNoteClicked","ClaimLogic","handleBack","menuIsOpen","claimingName","primaryWorktypeIds","sort","b","CategoryOrder","CategoryName","handleWorkTypeClick","clickable","stopPropagation","secondaryWorktypeIds","AirbnbSlider","thumb","active","track","valueLabel","rail","Slider","AirbnbThumbComponent","JobItems","mainJobItems","checkChange","Progress100","Main_Progress100","handleChange","val","inx","parseInt","changed","groupSliderValue","handleBtn","roundNumber","handleComplete","searchItems","jItems","clearSearch","some","totalProgress","v","g","ceil","btn","reduce","allItemsV6","StdTime","valuetext","handleSave","jobLevel","finishedItems","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","m","marginButtm","marginButtom","ThumbComponent","getAriaValueText","aria-labelledby","valueLabelDisplay","marks","min","max","onChangeCommitted","handleGroupedChanged","handleChanged","ItemNumber","CardActions","withTheme","Root","flexDirection","restProps","Label","whiteSpace","Barchart","Columns","valueField","argumentField","rootComponent","labelComponent","textarea","overflow","resize","minHight","lineHeight","Summary","setComment","changedItems","claimingItems","totalminute","totalPhyCalimgMinutes","chartData","space","String","fromCharCode","isFullJob","isAdminJob","handleSubmit","jobName","worktypeName","mainPercent","country","actual","std","TextareaAutosize","rowsMin","DividedJobs","defaultExpanded","loading","JobStageOrder","activeButton","JobStageName","handleJobClick","Note","Jobs","prototype","addDays","days","date","valueOf","setDate","getDate","IsSitWorkGroup","setactiveButton","setSiteJobs","loadedJobs","setLoadedJobs","setLoading","perfstat","setPerfstat","setPerfstatReady","dateFrom","setDateFrom","dateTo","setDateTo","setChartData","primaryJobs","setPrimaryJobs","secondaryJobs","setSecondaryJobs","ExampleCustomInput","getPerfStatAPI","fromBtn","toLocaleDateString","result","PointName","Actual","divideJobs","pj","sj","handleJobsButtonClicked","jobType","values","Item1","handleJobLoaded","handleLogOut","HidePostProductionJobs","adminJobs","customInput","Start","justify","minHeight","backgroundImage","backgroundPosition","backgroundRepeat","start","getListOfWorkersFromApi","mainWorkersList","saveLoginInAPI","saveLogoutAPI","getAsyncSettingsApi","authStr","worker","trackLateLogin","lateLoginTrack","currentTime","tempTime","StartTime","startTime","setMinutes","getMinutes","trackEarlyLeave","earlyLeaveAllowance","EndTime","endTime","FormDialog","allow","setAllow","doSaving","onCommentSave","DialogTitle","DialogContent","DialogContentText","autoFocus","placeholer","onKeyDown","DialogActions","CalimContainer","getPBJobItems","labelText","LabelText","WorkType","workTypeName","canClaimWholeJob","page","JobTitle","pageId","loadWorkersList","workersList","find","loggedInWorkerClick","console","log","login","dialogOpen","Skills","Primary","Secondary","claimingUser","claiminWorker","IsSitework","workTypeId","goToJobsPage","sid","isOnLeave","dialogHeader","dialogText","dialogSave","setClaimingId","checkWorkerLateLogin","logoutClicked","LastDayNotLoggedOut","Successful","Message","findIndex","checkWorkerEarlyLeave","newJobs","stateJobs","mainStateJobs","mainJobs","obj","setWorkerLOgout","clearSearchWorkTypes","mainWorkTypes","workType","searchJobs","mainAdminJobs","handleFullJob","Item2","selectedAdminJob","adminWorkType","selectedJob","selectedJobCode","handleSaveClaim","changedClaimingItems","handleSubmitClaim","role","public","handleFullSubmitClaim","claimingFullJob","prejobs","postjobs","renderConditionaly","Copyright","Link","getFullYear","main","form","submit","SignIn","email","setEmail","setPassword","handleSignInClicked","handleSignIn","Container","noValidate","required","autoComplete","emailChange","onKeyUp","keyCode","passwordChange","mt","UserManagement","usermanagementInitData","loginUsers","model","Email","EspUsers","IsAdmin","IsPublic","IsDisabled","EspUserId","LoginId","changePassword","Id","NewPassword","ConfirmPassword","UserId","onChangePassword","espUser","WorkerId","espInx","indexOf","splice","App","setSettings","loggedIn","getServerSettings","claims","claimingId","access_token","pa","stringify","status","pbWorkTypeId","pbJobId","joblevel","FadingRoute","rest","render","routeProps","isPublic","workerName","localSettings","json","ClaimContainer","isUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppWithRouter","withRouter","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3b902ad8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport StepContent from \"@material-ui/core/StepContent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: \"#3a3d57\",\r\n    color: \"#fff!important\",\r\n    fontSize: \"0.7rem\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"Start\",\r\n    \"Login\",\r\n    \"Job Selection\",\r\n    \"WorkType Selection\",\r\n    \"Claiming\",\r\n    \"Finish\",\r\n  ];\r\n}\r\n\r\n// function getStepContent(index, p) {\r\n//   return \"\";\r\n//   switch (index) {\r\n//     case 0:\r\n//       return \"\";\r\n//     case 1:\r\n//       return \"\";\r\n//     case 2:\r\n//       return ``;\r\n//     default:\r\n//       return \"\";\r\n//   }\r\n// }\r\nfunction getLabel(label, text) {\r\n  if (text && text.length > 1) return `(${text})`;\r\n  //return label;\r\n}\r\nfunction getLabels(p, label, index, adminJon) {\r\n  switch (index) {\r\n    case 1:\r\n      return getLabel(label, p.texts[0]);\r\n    case 2:\r\n      return getLabel(label, p.texts[1]);\r\n    case 3:\r\n      return getLabel(label, p.texts[2]);\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nconst VerticalStepper = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    props.step > 0 && (\r\n      <div className={classes.root}>\r\n        <Stepper\r\n          activeStep={props.step - 1}\r\n          orientation=\"vertical\"\r\n          className={classes.root}\r\n        >\r\n          {steps.map(\r\n            (label, index) =>\r\n              !(props.isAdmin && index === 3) && (\r\n                <Step key={label}>\r\n                  <StepLabel>\r\n                    <Typography style={{ color: \"white\", fontSize: \"0.8rem\" }}>\r\n                      {label}\r\n                      <br />\r\n                      <span> {getLabels(props, label, index)}</span>\r\n                    </Typography>\r\n                  </StepLabel>\r\n                  <StepContent>\r\n                    <Typography></Typography>\r\n                    <div className={classes.actionsContainer}>\r\n                      <div></div>\r\n                    </div>\r\n                  </StepContent>\r\n                </Step>\r\n              )\r\n          )}\r\n        </Stepper>\r\n        {props.step - 1 === steps.length && (\r\n          <Paper square elevation={0} className={classes.resetContainer}>\r\n            <Typography>All steps completed - you&apos;re finished</Typography>\r\n          </Paper>\r\n        )}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default VerticalStepper;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport VerticalStepper from \"./controls/VerticalStepper\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport FormatIndentDecreaseIcon from \"@mui/icons-material/FormatIndentDecrease\";\r\nimport FormatIndentIncreaseIcon from \"@mui/icons-material/FormatIndentIncrease\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nconst DrawerContainer = (props) => {\r\n  const drawerWidth = props.menuSize;\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      listItemText: {\r\n        fontSize: \"0.8rem\",\r\n      },\r\n\r\n      root: {\r\n        display: \"flex\",\r\n      },\r\n      drawer: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n        },\r\n      },\r\n      appBar: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          width: `calc(100% - ${drawerWidth}px)`,\r\n          marginLeft: drawerWidth,\r\n          background: \"#ebedf1\",\r\n          color: \"Black\",\r\n        },\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          display: \"none\",\r\n        },\r\n      },\r\n      // necessary for content to be below app bar\r\n      toolbar: theme.mixins.toolbar,\r\n      drawerPaper: {\r\n        width: drawerWidth,\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n      },\r\n      link: {\r\n        textDecoration: \"none\",\r\n        color: \"#fff\",\r\n      },\r\n      whiteColor: {\r\n        color: \"#fff\",\r\n      },\r\n    })\r\n  );\r\n  const classes = useStyles();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const cookies = new Cookies();\r\n  //const { forwardRef, useRef, useImperativeHandle } = React;\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div\r\n      style={{ backgroundColor: \"#242845\", height: \"100%\", fontSize: \"0.7rem\" }}\r\n    >\r\n      <div className=\"theme.mixins.toolbar, drawerPaper: 200\" />\r\n      <Divider />\r\n      <List className=\"mt-5\">\r\n        <div style={{ textAlign: \"center\", background: \"#000\" }}>\r\n          <img src=\"./favicon.png\" alt=\"APL\" />\r\n        </div>\r\n        <br />\r\n        <br />\r\n\r\n        <br />\r\n        {props.isSystemAdmin && (\r\n          <div>\r\n            <Link\r\n              to=\"./claim\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"1\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <InboxIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Claim\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                >\r\n                  <h4>Claim</h4>\r\n                </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n            <Link\r\n              to=\"./settings\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"2\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <SettingsIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Admin Settings\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <Link\r\n              to=\"./ProductionBoard\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"2\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <SettingsIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Production&nbsp;Board\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <Link\r\n              to=\"./users\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"2\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <SettingsIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"User&nbsp;Management\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <VerticalStepper\r\n              step={props.step}\r\n              texts={props.texts}\r\n              isAdmin={props.isAdmin}\r\n            />\r\n            <Divider />\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              style={{ color: \"#fff\", marginTop: \"30px\" }}\r\n              onClick={() => {\r\n                new Cookies().set(\"_claim\", null, { path: \"/\" });\r\n                document.cookie =\r\n                  \"_claim=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n                window.location.reload(true);\r\n                window.location.href = `${this.props.mainRoute}`;\r\n              }}\r\n              startIcon={<MeetingRoomIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        )}\r\n        {!props.isSystemAdmin && (\r\n          <div>\r\n            <Link\r\n              to=\"./claim\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"1\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <InboxIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Claim\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                >\r\n                  <h4>Claim</h4>\r\n                </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n            {props.ShowProductionBoard && (\r\n              <Link\r\n                to=\"./ProductionBoard\"\r\n                style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n              >\r\n                <ListItem button key=\"2\">\r\n                  <ListItemIcon style={{ color: \"#fff\" }}>\r\n                    <SettingsIcon />{\" \"}\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Production&nbsp;Board\"\r\n                    classes={{ primary: classes.listItemText }}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            )}\r\n            <VerticalStepper\r\n              step={props.step}\r\n              texts={props.texts}\r\n              isAdmin={props.isAdmin}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              color=\"white\"\r\n              style={{ color: \"#fff\", marginTop: \"30px\" }}\r\n              onClick={() => {\r\n                new Cookies().set(\"_claim\", null, { path: \"/\" });\r\n                document.cookie =\r\n                  \"_claim=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n                window.location.reload(true);\r\n                window.location.href = `${this.props.mainRoute}`;\r\n              }}\r\n              startIcon={<MeetingRoomIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  // const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div>\r\n      {/* {setStep(props.step)} */}\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar style={{ backgroundColor: \"#fff\", color: \"black\" }}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={1}>\r\n              <Hidden only={\"xs\"}>\r\n                <Button\r\n                  onClick={() => {\r\n                    props.changeMenuSize();\r\n                  }}\r\n                  startIcon={\r\n                    props.menuSize === 240 ? (\r\n                      <FormatIndentDecreaseIcon />\r\n                    ) : (\r\n                      <FormatIndentIncreaseIcon />\r\n                    )\r\n                  }\r\n                ></Button>\r\n              </Hidden>\r\n            </Grid>\r\n            <Grid item lg={10}>\r\n              <p>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"20px\",\r\n                    fontWeight: \"bolder\",\r\n                    textShadow: \"1px 2px 3px #666\",\r\n                    color: \"#000000\",\r\n                    background: \"#FFFFFF\",\r\n                  }}\r\n                >\r\n                  ESPCC\r\n                </span>\r\n                <span style={{ paddingLeft: 10 }}>\r\n                  ({process.env.REACT_APP_BUILDMAJOR}.\r\n                  {process.env.REACT_APP_BUILDMINOR}.\r\n                  {process.env.REACT_APP_BUILDREVISION})\r\n                </span>\r\n              </p>\r\n            </Grid>\r\n            <Grid item lg={1}></Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            // container={container}\r\n            variant=\"temporary\"\r\n            anchor=\"left\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true,\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawerContainer;\r\n","import React from 'react';\r\n\r\nconst Performance=()=>(\r\n    <div>\r\n        <h1>the Performance page</h1>\r\n    </div>\r\n);\r\n\r\nexport default Performance;\r\n","import React from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nconst ESPSelect = ({ name, label, helptext,onPropertyChange, items }) => {\r\n    if (!items)\r\n        return <div></div>\r\n    else\r\n        return (\r\n\r\n            <FormControl fullWidth variant=\"outlined\" style={{ marginBottom: 20 }}>\r\n                {label}\r\n                <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id={name}\r\n                    value={items && items.length > 0 ? (items.filter(x => x.Selected).length>0? items.filter(x => x.Selected)[0].Value: -1) : -1}\r\n                    onChange={onPropertyChange}\r\n                    name={name}\r\n                    type='select'\r\n                >\r\n                    <MenuItem value=\"-1\">\r\n                        <em>Select</em>\r\n                    </MenuItem>\r\n                    {items && items.map(e => <MenuItem key={e.Value} value={e.Value}>{e.Text}</MenuItem>)}\r\n                </Select>\r\n                <FormHelperText>{helptext}</FormHelperText>\r\n            </FormControl>\r\n        )\r\n}\r\nexport default ESPSelect;","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\n\r\n\r\nconst ESPTextField =({name,label,helptext,value,type='text',onPropertyChange})=>{\r\n    \r\n    return(\r\n        <FormControl variant=\"outlined\"  fullWidth style={{marginBottom:20}} >\r\n        {label}\r\n        <OutlinedInput \r\n            value={value||''}\r\n            //onChange={handleChange}\r\n            name={name}\r\n            type={type}\r\n            id={name}\r\n            label={label}\r\n            onChange={onPropertyChange}\r\n            fullWidth\r\n        /> \r\n        <FormHelperText>{helptext}</FormHelperText>\r\n    </FormControl>\r\n    )\r\n}\r\nexport default ESPTextField;","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst ESPCheckbox = React.memo(({ name, label, checked,onPropertyChange,row=12 }) => {\r\n    return (\r\n            <Grid item lg={row}>\r\n            <FormControlLabel  style={{marginBottom:20}} control={\r\n                <Checkbox\r\n                \r\n                    checked={typeof checked ==='undefined'? false: checked}\r\n                    onChange={onPropertyChange}\r\n                    name={name}\r\n                    id={name}\r\n                    color=\"primary\"\r\n                />\r\n            }\r\n                label={label}\r\n            />\r\n            </Grid>\r\n        \r\n    \r\n    )});\r\n    export default ESPCheckbox;","import React, { useEffect } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ESPSelect from \"../../components/controls/ESPSelect\";\r\nimport ESPTextField from \"../../components/controls/ESPTextField\";\r\nimport ESPCheckbox from \"../../components/controls/ESPCheckbox\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Select from \"@mui/material/Select\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst AdminSettingsPage = (props) => {\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        minWidth: 275,\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n      },\r\n\r\n      textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: \"25ch\",\r\n      },\r\n      bullet: {\r\n        display: \"inline-block\",\r\n        margin: \"0 2px\",\r\n        transform: \"scale(0.8)\",\r\n      },\r\n      title: {\r\n        fontSize: 14,\r\n      },\r\n      pos: {\r\n        marginBottom: 12,\r\n      },\r\n      saveBtn: {\r\n        marginTop: 40,\r\n      },\r\n      saveBtnTop: {\r\n        marginTop: 10,\r\n      },\r\n    })\r\n  );\r\n\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    props.adminSettings.Groups !== undefined && (\r\n      <div>\r\n        <Card>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={10}>\r\n              <CardHeader\r\n                title=\"Database Settings\"\r\n                subheader=\"ESP database connection settings \"\r\n                avatar={\r\n                  <Avatar\r\n                    aria-label=\"recipe\"\r\n                    style={{ backgroundColor: \"blue\" }}\r\n                  >\r\n                    {\" \"}\r\n                    D{\" \"}\r\n                  </Avatar>\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item lg={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.saveBtnTop}\r\n                size=\"medium\"\r\n                onClick={props.onSave}\r\n                startIcon={<SaveIcon />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <CardContent></CardContent>\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={6}>\r\n                <TextField\r\n                  id=\"ServerAddress\"\r\n                  label=\"DB Server\"\r\n                  style={{ margin: 8 }}\r\n                  disabled\r\n                  placeholder=\"DB Server\"\r\n                  helperText=\"Database Server Address\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  value={props.adminSettings.ServerAddress || \"\"}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n\r\n                <TextField\r\n                  id=\"Username\"\r\n                  label=\"Login\"\r\n                  style={{ margin: 8 }}\r\n                  disabled\r\n                  placeholder=\"Login\"\r\n                  value={props.adminSettings.Username || \"\"}\r\n                  helperText=\"Database Username\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6}>\r\n                <TextField\r\n                  id=\"DatabaseName\"\r\n                  label=\"DB Name\"\r\n                  style={{ margin: 8 }}\r\n                  disabled\r\n                  placeholder=\"Database Name\"\r\n                  helperText=\"Database Name\"\r\n                  fullWidth\r\n                  value={props.adminSettings.DatabaseName || \"\"}\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  id=\"Password\"\r\n                  label=\"Password\"\r\n                  style={{ margin: 8 }}\r\n                  disabled\r\n                  value={props.adminSettings.Password || \"\"}\r\n                  placeholder=\"Placeholder\"\r\n                  helperText=\"Database password\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <hr />\r\n        <Card>\r\n          <CardHeader\r\n            title=\"General Settings\"\r\n            subheader=\"Job Claim section settings \"\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" style={{ backgroundColor: \"blue\" }}>\r\n                {\" \"}\r\n                G{\" \"}\r\n              </Avatar>\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={6}>\r\n                <ESPSelect\r\n                  disabled\r\n                  name=\"Factories\"\r\n                  label=\"Default Factory\"\r\n                  helptext=\"Name of default Factory\"\r\n                  items={props.adminSettings.Factories}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n                {/* <ESPCheckbox\r\n                name=\"MultipleJobs\"\r\n                label=\"Enable Multiple Jobs\"\r\n                checked={props.adminSettings.MultipleJobs}\r\n                onPropertyChange={props.onPropertyChange}\r\n              /> */}\r\n                <ESPCheckbox\r\n                  name=\"AllowClaimingOutOfFactoryWork\"\r\n                  label=\"Allow claiming on Out of Factory work\"\r\n                  checked={props.adminSettings.AllowClaimingOutOfFactoryWork}\r\n                  onPropertyChange={props.onPropertyChange}\r\n                />\r\n                <ESPTextField\r\n                  name=\"IncrementPercentage\"\r\n                  label=\"Increment\"\r\n                  helptext=\"Percentage (%) increment\"\r\n                  type=\"number\"\r\n                  onPropertyChange={props.onPropertyChange}\r\n                  value={props.adminSettings.IncrementPercentage}\r\n                />\r\n                <ESPSelect\r\n                  name=\"ShowingCode\"\r\n                  label=\"Show Quote Number\"\r\n                  helptext=\"Show V6 Quote Number/ESP Code on Job\"\r\n                  items={props.adminSettings.ShowingCode}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n\r\n                <Grid container>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"TrackLateLogin\"\r\n                      label=\"Track late login\"\r\n                      checked={props.adminSettings.TrackLateLogin}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={9}>\r\n                    <ESPTextField\r\n                      name=\"LateAllowance\"\r\n                      label=\"Late Login Min\"\r\n                      helptext=\"Number of minutes allowed for late login\"\r\n                      type=\"number\"\r\n                      value={props.adminSettings.LateAllowance}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item lg={6}>\r\n                {/* <ESPSelect\r\n                name=\"Groups\"\r\n                label=\"Default Groups\"\r\n                helptext=\"Select Groups for claim\"\r\n                items={props.adminSettings.Groups}\r\n                onPropertyChange={props.onSelectChange}\r\n              /> */}\r\n                <FormControl\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: 20 }}\r\n                >\r\n                  Select Groups for claim\r\n                  <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    name=\"Groups\"\r\n                    value={props.adminSettings.Groups.filter(\r\n                      (x) => x.Selected\r\n                    ).map((i) => i.Text)}\r\n                    onChange={(e) => props.onGroupsSelectChange(e)}\r\n                    input={<OutlinedInput label=\"Tag\" />}\r\n                    renderValue={(selected) => selected.join(\", \")}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {props.adminSettings.Groups.map((item) => (\r\n                      <MenuItem key={item.Text} value={item.Text}>\r\n                        <Checkbox checked={item.Selected} />\r\n                        <ListItemText primary={item.Text} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                {/* <ESPCheckbox\r\n                name=\"ScheduledJobs\"\r\n                label=\"Show Scheduled Jobs After Claim\"\r\n                checked={props.adminSettings.ScheduledJobs}\r\n                onPropertyChange={props.onPropertyChange}\r\n              /> */}\r\n                <ESPSelect\r\n                  name=\"JobListOrdering\"\r\n                  label=\"Job List Order\"\r\n                  helptext=\"Order Showed in Job List Page\"\r\n                  items={props.adminSettings.JobListOrdering}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n                {/* <ESPCheckbox\r\n                name=\"CanFinishWholeJob\"\r\n                label=\"Enable Finish Whole Job feature\"\r\n                checked={props.adminSettings.CanFinishWholeJob}\r\n                onPropertyChange={props.onPropertyChange}\r\n              /> */}\r\n                <Grid container>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"TrackEarlyLeave\"\r\n                      label=\"Track early leave\"\r\n                      checked={props.adminSettings.TrackEarlyLeave}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={9}>\r\n                    <ESPTextField\r\n                      name=\"EarlyLeaveAllowance\"\r\n                      label=\"Early Leave Min\"\r\n                      helptext=\"Number of minutes allowed for early leave\"\r\n                      type=\"number\"\r\n                      value={props.adminSettings.EarlyLeaveAllowance}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={12}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowStandardTime\"\r\n                      label=\"Show Standard Time\"\r\n                      checked={props.adminSettings.ShowStandardTime}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item lg={12}>\r\n                    <ESPTextField\r\n                      name=\"NoClaimAllowance\"\r\n                      label=\"No Claim Allowance\"\r\n                      helptext=\"Seconds No Claim Allowance Before Logout. (Zero= disable)\"\r\n                      type=\"number\"\r\n                      value={props.adminSettings.NoClaimAllowance}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item lg={4}>\r\n                  <ESPCheckbox\r\n                    name=\"HidePreProductionJobs\"\r\n                    label=\"Hide PreProduction Jobs\"\r\n                    checked={props.adminSettings.HidePreProductionJobs}\r\n                    onPropertyChange={props.onPropertyChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={4}>\r\n                  <ESPCheckbox\r\n                    name=\"DividJobs\"\r\n                    label=\"Enable Dividing jobs\"\r\n                    checked={props.adminSettings.DividJobs}\r\n                    onPropertyChange={props.onPropertyChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={4}>\r\n                  <ESPCheckbox\r\n                    name=\"TrackNotLoggedOut\"\r\n                    label=\"Alert not logged out worker\"\r\n                    checked={props.adminSettings.TrackNotLoggedOut}\r\n                    onPropertyChange={props.onPropertyChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n        <hr />\r\n\r\n        <Card>\r\n          <CardHeader\r\n            title=\"Production Board\"\r\n            subheader=\"Production Board Section Settings\"\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" style={{ backgroundColor: \"blue\" }}>\r\n                {\" \"}\r\n                P{\" \"}\r\n              </Avatar>\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={8}>\r\n                <Grid container>\r\n                  <Grid item lg={4}>\r\n                    <ESPCheckbox\r\n                      name=\"PBShowProductionBoard\"\r\n                      label=\"Enable Production Board\"\r\n                      checked={props.adminSettings.PBShowProductionBoard}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={4}>\r\n                    <ESPCheckbox\r\n                      name=\"PBHideOutOfFactoryWorkTypes\"\r\n                      label=\"Hide Out of Factory WorkTypes\"\r\n                      checked={props.adminSettings.PBHideOutOfFactoryWorkTypes}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={4}>\r\n                    <ESPCheckbox\r\n                      name=\"ClaimOnPB\"\r\n                      label=\"Claim on Production Board\"\r\n                      checked={props.adminSettings.ClaimOnPB}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container>\r\n                  <Grid item lg={12}>\r\n                    <label>Extra Columns</label>\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"PBTitleColumn\"\r\n                      label=\"Title\"\r\n                      checked={props.adminSettings.PBTitleColumn}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"PBCustomerColumn\"\r\n                      label=\"Customer\"\r\n                      checked={props.adminSettings.PBCustomerColumn}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"PBHourColumn\"\r\n                      label=\"Hours\"\r\n                      checked={props.adminSettings.PBHourColumn}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"PBDueDateColumn\"\r\n                      label=\"Due Date\"\r\n                      checked={props.adminSettings.PBDueDateColumn}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowRework\"\r\n                      label=\"Show Rework\"\r\n                      checked={props.adminSettings.ShowRework}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowColour\"\r\n                      label=\"Show Colour\"\r\n                      checked={props.adminSettings.ShowColour}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowQty\"\r\n                      label=\"Show Unit Qty\"\r\n                      checked={props.adminSettings.ShowQty}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowSalesPerson\"\r\n                      label=\"Show SalesPerson\"\r\n                      checked={props.adminSettings.ShowSalesPerson}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowEstimator\"\r\n                      label=\"Show Estimator\"\r\n                      checked={props.adminSettings.ShowEstimator}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item lg={3}>\r\n                <ESPSelect\r\n                  name=\"PBJobOrders\"\r\n                  label=\"Job Order\"\r\n                  helptext=\"Listing Job Order\"\r\n                  items={props.adminSettings.PBJobOrders}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={1}>\r\n                <ESPCheckbox\r\n                  name=\"Z2A\"\r\n                  label=\"Z to A\"\r\n                  checked={props.adminSettings.Z2A}\r\n                  onPropertyChange={props.onPropertyChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n        <hr />\r\n\r\n        <Card>\r\n          <CardHeader\r\n            title=\"Performance Statistics\"\r\n            subheader=\"Performance Statistics Section Settings\"\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" style={{ backgroundColor: \"blue\" }}>\r\n                {\" \"}\r\n                S{\" \"}\r\n              </Avatar>\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={6}>\r\n                <ESPCheckbox\r\n                  name=\"PSShowPerformanceStates\"\r\n                  label=\"Enable Performance Stats\"\r\n                  checked={props.adminSettings.PSShowPerformanceStates}\r\n                  onPropertyChange={props.onPropertyChange}\r\n                />\r\n                <ESPSelect\r\n                  name=\"PSStatisticChart\"\r\n                  label=\"Statistic Chart Type\"\r\n                  helptext=\"\"\r\n                  items={props.adminSettings.PSStatisticChart}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6}>\r\n                <ESPCheckbox\r\n                  name=\"PSEnableIndividual\"\r\n                  label=\"Enable Individual Performance Stats\"\r\n                  checked={props.adminSettings.PSEnableIndividual}\r\n                  onPropertyChange={props.onPropertyChange}\r\n                />\r\n                <ESPSelect\r\n                  name=\"PSStatisticGroup\"\r\n                  label=\"Statistic Group\"\r\n                  helptext=\"\"\r\n                  items={props.adminSettings.PSStatisticGroup}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={5}>\r\n                <ESPSelect\r\n                  name=\"PSPerformanceChart\"\r\n                  label=\"Performance Chart Duration\"\r\n                  helptext=\"\"\r\n                  items={props.adminSettings.PSPerformanceChart}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={5}></Grid>\r\n              <Grid item lg={2} mx=\"auto\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.saveBtn}\r\n                  size=\"medium\"\r\n                  onClick={props.onSave}\r\n                  startIcon={<SaveIcon />}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default AdminSettingsPage;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nclass HelperLogic extends React.Component {\r\n  getLocalToken = () => {\r\n    const cookies = new Cookies();\r\n    var claims = cookies.get(\"_claim\");\r\n\r\n    return claims.user_t;\r\n  };\r\n\r\n  setAsyncApiToken = async (username, password, route) => {\r\n    var value = {\r\n      grant_type: \"password\",\r\n      username: username,\r\n      password: password,\r\n      withCredentials: true,\r\n    };\r\n    var data = Object.keys(value)\r\n      .map(function (key) {\r\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(value[key]);\r\n      })\r\n      .join(\"&\");\r\n    var headers = {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Access-Control-Allow-Credentials\": \"true\",\r\n      \"Access-Control-Allow-Methods\": \"*\",\r\n    };\r\n    return await axios.post(`${route}token`, data, headers);\r\n  };\r\n\r\n  apiPost = async (url, value, errorName) => {\r\n    var response = {};\r\n    // var data = JSON.stringify(value);\r\n    axios.defaults.headers.post[\"Authorization\"] =\r\n      \"bearer \" + this.getLocalToken();\r\n    axios.defaults.headers.post[\"Content-Type\"] =\r\n      \"application/json; charset=UTF-8\";\r\n    axios.defaults.headers.post[\"Accept\"] = \"application/json\";\r\n\r\n    var headers = {\r\n      // \"Access-Control-Allow-Origin\": \"*\",\r\n      // \"Access-Control-Allow-Credentials\": \"true\",\r\n      // \"Access-Control-Allow-Methods\": \"*\",\r\n      Authorization: \"bearer \" + this.getLocalToken(),\r\n      \"Content-Type\": \"application/json; charset=UTF-8\",\r\n      Accept: \"application/json\",\r\n    };\r\n    return await axios.post(`${url}`, value, headers);\r\n  };\r\n\r\n  apiGet = async (url, errorName) => {\r\n    try {\r\n      axios.defaults.headers.post[\"Authorization\"] =\r\n        \"bearer \" + this.getLocalToken();\r\n      axios.defaults.headers.post[\"Content-type\"] = \"application/json\";\r\n\r\n      await axios.get(url);\r\n    } catch (err) {\r\n      alert(`Error in calling ESP (${errorName}) API- ${err}`);\r\n    }\r\n  };\r\n  /*\r\n  apiAsyncPost = async (url, value, errorName) => {\r\n    var response = {};\r\n    var data = JSON.stringify(value);\r\n    try {\r\n      axios.defaults.headers.post[\"Authorization\"] =\r\n        \"bearer \" + this.getLocalToken();\r\n      axios.defaults.headers.post[\"Content-type\"] = \"application/json\";\r\n\r\n      response = await axios.post(`${config.apiUrl}${url}`, data);\r\n      return response;\r\n    } catch (err) {\r\n      alert(` ${err.response.data}`);\r\n    }\r\n  };\r\n\r\n  */\r\n  timeConvert = (num) => {\r\n    var hours = num / 60;\r\n    var rhours = Math.floor(hours).toString();\r\n    var minutes = (hours - rhours) * 60;\r\n    var rminutes = Math.round(minutes).toString();\r\n    return (\r\n      (rhours.length == 1 ? \"0\" + rhours : rhours) +\r\n      \":\" +\r\n      (rminutes.length == 1 ? \"0\" + rminutes : rminutes)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <din></din>;\r\n  }\r\n}\r\n\r\nconst Helper = new HelperLogic();\r\nexport default Helper;\r\n","import React from \"react\";\r\nimport AdminSettingsPage from \"./AdminSettingsPage\";\r\nimport Helper from \"../../components/logics/Helper\";\r\n\r\nclass AdminSettingsContainer extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      adminSettings: {},\r\n      user: {},\r\n      changes: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getAdminSettingsByAPI();\r\n    this.captureIPAddress();\r\n    this.props.changeStep(0);\r\n  }\r\n  handelPropertyChange = (event) => {\r\n    var adSettings = this.state.adminSettings;\r\n\r\n    let value = \"\";\r\n    if (event.target.type !== undefined && event.target.type === \"checkbox\")\r\n      value = event.target.checked;\r\n    else value = event.target.value;\r\n\r\n    var changes = this.state.changes;\r\n    changes.push({\r\n      name: event.target.name,\r\n      value: value,\r\n    });\r\n\r\n    adSettings[event.target.name] = value;\r\n    this.setState({\r\n      ...this.state,\r\n      changes,\r\n      adSettings,\r\n    });\r\n  };\r\n  onGroupsSelectChange = (event) => {\r\n    var adSettings = this.state.adminSettings;\r\n    var newSelectedId = event.target.value;\r\n    let newValues = [];\r\n    adSettings[\"Groups\"].map((item) => {\r\n      if (newSelectedId.includes(item.Text))\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Disabled: false,\r\n          Group: null,\r\n          Selected: true,\r\n        });\r\n      else\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Disabled: false,\r\n          Group: null,\r\n          Selected: false,\r\n        });\r\n    });\r\n\r\n    adSettings[event.target.name] = newValues;\r\n\r\n    adSettings[\"GroupsIds\"] = newValues\r\n      .filter((x) => x.Selected)\r\n      .map((n) => {\r\n        return n.Value;\r\n      })\r\n      .join(\",\");\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      adminSettings: adSettings,\r\n    });\r\n  };\r\n  onSelectChange = (event) => {\r\n    var adSettings = this.state.adminSettings;\r\n    var newSelectedId = event.target.value;\r\n    let newValues = [];\r\n    adSettings[event.target.name].map((item) => {\r\n      if (item.Value === newSelectedId)\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Disabled: false,\r\n          Group: null,\r\n          Selected: true,\r\n        });\r\n      else\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Disabled: false,\r\n          Group: null,\r\n          Selected: false,\r\n        });\r\n    });\r\n    var changes = this.state.changes;\r\n\r\n    changes.push({\r\n      name: event.target.name,\r\n      value: newSelectedId,\r\n    });\r\n    if (event.target.name === \"Factories\") {\r\n      this.getGroupsByAPI(newSelectedId, this.props.apiRoute);\r\n    }\r\n    adSettings[event.target.name] = newValues;\r\n    adSettings[event.target.name + \"Id\"] = newSelectedId;\r\n    this.setState({\r\n      ...this.state,\r\n      changes,\r\n      adminSettings: adSettings,\r\n    });\r\n  };\r\n  captureIPAddress = async () => {\r\n    fetch(\"https://api.ipify.org?format=jsonp?callback=?\", {\r\n      method: \"GET\",\r\n      headers: {},\r\n    })\r\n      .then((res) => {\r\n        return res.text();\r\n      })\r\n      .then((ip) => {\r\n        this.setState({\r\n          ...this.state,\r\n          ip,\r\n        });\r\n      });\r\n  };\r\n\r\n  getGroupsByAPI = async (oid, route) => {\r\n    var response = {};\r\n    var oldAdminSettings = this.state.adminSettings;\r\n    try {\r\n      Helper.apiPost(`${route}adminSettings/GetGroup?oid=` + oid, {}, \"\")\r\n        .then((res) => {\r\n          response = JSON.parse(res.data);\r\n          oldAdminSettings.Groups = response;\r\n\r\n          this.setState({\r\n            ...this.state,\r\n            adminSettings: oldAdminSettings,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Error in get Groups data\");\r\n        });\r\n    } catch (err) {\r\n      if (err.response) alert(`Error in calling ESP API- ${err.response.data}`);\r\n      else alert(`Error in calling ESP API- ${err}`);\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n\r\n  getAdminSettingsByAPI = async () => {\r\n    var response = {};\r\n    try {\r\n      var res = await Helper.apiPost(\r\n        `${this.props.apiRoute}adminSettings/GetInfo`,\r\n        {},\r\n        \"\"\r\n      );\r\n\r\n      response = JSON.parse(res.data);\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          adminSettings: response,\r\n        },\r\n        () => {\r\n          this.props.onChangeSettings(response);\r\n        }\r\n      );\r\n    } catch (err) {\r\n      if (err.response) alert(`Error in calling ESP API- ${err.response.data}`);\r\n      else alert(`Error in calling ESP API- ${err}`);\r\n    }\r\n  };\r\n\r\n  saveAdminSettingsByAPI = async () => {\r\n    let state = this.state.adminSettings;\r\n\r\n    //var data = JSON.stringify(state);\r\n    try {\r\n      Helper.apiPost(`${this.props.apiRoute}adminSettings/PostData`, state, \"\")\r\n        .then((res) => {\r\n          this.props.history.push(`${this.props.mainRoute}`);\r\n          this.getAdminSettingsByAPI();\r\n          window.location.reload(true);\r\n          window.location.href = `${this.props.mainRoute}`;\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Error in get Groups data\");\r\n        });\r\n    } catch (err) {\r\n      if (err.response) alert(`Error in calling ESP API- ${err.response.data}`);\r\n      else alert(`Error in calling ESP API- ${err}`);\r\n    }\r\n  };\r\n\r\n  render(props) {\r\n    return (\r\n      <AdminSettingsPage\r\n        adminSettings={this.state.adminSettings || null}\r\n        onPropertyChange={this.handelPropertyChange}\r\n        onSelectChange={this.onSelectChange}\r\n        onGroupsSelectChange={this.onGroupsSelectChange}\r\n        onSave={this.saveAdminSettingsByAPI}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminSettingsContainer;\r\n","import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Switch, { SwitchProps } from \"@mui/material/Switch\";\r\n\r\nconst IOSSwitchMain = styled((props: SwitchProps) => (\r\n  <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />\r\n))(({ theme }) => ({\r\n  width: 45,\r\n  height: 26,\r\n  padding: 0,\r\n  \"& .MuiSwitch-switchBase\": {\r\n    padding: 0,\r\n    margin: 2,\r\n    color: \"#fff\",\r\n    transitionDuration: \"700ms\",\r\n    \"&.Mui-checked\": {\r\n      transform: \"translateX(20px)\",\r\n      color: \"#3f51b5\",\r\n      \"& + .MuiSwitch-track\": {\r\n        backgroundColor: theme.palette.mode === \"dark\" ? \"#9abf47\" : \"#9abf47\",\r\n        color: \"#000\",\r\n        opacity: 0.8,\r\n        border: 0,\r\n      },\r\n      \"&.Mui-disabled + .MuiSwitch-track\": {\r\n        opacity: 0.9,\r\n      },\r\n    },\r\n    \"&.Mui-focusVisible .MuiSwitch-thumb\": {\r\n      color: \"#fff\",\r\n      border: \"6px solid #fff\",\r\n    },\r\n    \"&.Mui-disabled .MuiSwitch-thumb\": {\r\n      color:\r\n        theme.palette.mode === \"light\"\r\n          ? theme.palette.grey[100]\r\n          : theme.palette.grey[600],\r\n    },\r\n    \"&.Mui-disabled + .MuiSwitch-track\": {\r\n      opacity: theme.palette.mode === \"light\" ? 0.7 : 0.3,\r\n    },\r\n  },\r\n  \"& .MuiSwitch-thumb\": {\r\n    boxSizing: \"border-box\",\r\n    width: 22,\r\n    height: 22,\r\n  },\r\n  \"& .MuiSwitch-track\": {\r\n    borderRadius: 26 / 2,\r\n    backgroundColor: theme.palette.mode === \"light\" ? \"#c5c6c9\" : \"#000\",\r\n    opacity: 1,\r\n    transition: theme.transitions.create([\"background-color\"], {\r\n      duration: 500,\r\n    }),\r\n  },\r\n}));\r\n\r\nexport default function IOSSwitch(props) {\r\n  return <IOSSwitchMain {...props} />;\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: \"90%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nexport default function ItemsList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {props.items &&\r\n        props.items\r\n          .filter((x) => x !== \"Claim from ESP-Claim\")\r\n          .map((i) => (\r\n            <Fragment>\r\n              <ListItem alignItems=\"flex-start\" key={i.Resource}>\r\n                <ListItemAvatar>\r\n                  <Avatar\r\n                    aria-label=\"recipe\"\r\n                    style={{ backgroundColor: \"blue\" }}\r\n                  >\r\n                    {\" \"}\r\n                    C{\" \"}\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={`Author:${i.Author} ${\r\n                    i.Resource != null && i.Resource.length > 0\r\n                      ? `Resource:${i.Resource}`\r\n                      : ``\r\n                  } `}\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes.inline}\r\n                        color=\"textPrimary\"\r\n                      >\r\n                        {i.Date}\r\n                      </Typography>\r\n                      <br />\r\n                      {i.IsBold ? (\r\n                        <b>\r\n                          <span\r\n                            style={{\r\n                              fontSize: \"15px\",\r\n                              fontWeight: \"1000\",\r\n                              color: \"black\",\r\n                            }}\r\n                          >\r\n                            {i.Comment}\r\n                          </span>\r\n                        </b>\r\n                      ) : (\r\n                        <span style={{ fontSize: \"15px\" }}>{i.Comment}</span>\r\n                      )}\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </Fragment>\r\n          ))}\r\n    </List>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ItemsList from \"./../../components/controls/ItemsList\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog(props) {\r\n  const classes = useStyles();\r\n  // const [open, setOpen] = React.useState(false);\r\n\r\n  const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n  const handleClose = () => {\r\n    props.handleClose(false);\r\n    //setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              {props.header}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <p>{props.text}</p>\r\n        {props.uls && <ItemsList items={props.uls} />}\r\n        {props.textList && props.textList.length > 0 && (\r\n          <TableContainer component={Paper} lg={6} sm={12} xs={12}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow></TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.textList.map((row) => (\r\n                  <StyledTableRow hover key={row.Date}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {row.Date}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{row.Name}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{row.Std}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{row.Phy}</StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Loading(props) {\r\n  return (\r\n    <img\r\n      src={`${props.mainRoute}loading.gif`}\r\n      alt=\"LOADING...\"\r\n      style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}\r\n    />\r\n  );\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Grid, Input, InputAdornment, InputLabel } from \"@material-ui/core\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport IOSSwitch from \"../../components/controls/IosSwitch\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport FullScreenDialog from \"../../components/controls/FullScreenDialog\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport {\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Loading from \"../loading.js\";\r\n\r\nconst ProductionBoardPage = (props) => {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [note, setNote] = useState([]);\r\n  const [searchVal, setsearchVal] = useState(\"\");\r\n  const [jobs, setJobs] = useState(props.jobs);\r\n  const [wt, setWt] = useState(true);\r\n  const [pie, setPie] = useState(false);\r\n\r\n  const theme = createMuiTheme({\r\n    overrides: {\r\n      MuiTooltip: {\r\n        tooltip: {\r\n          fontSize: \"0.7em\",\r\n          color: \"yellow\",\r\n          backgroundColor: \"#eeeeee\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n  const defaultLabelStyle = {\r\n    fontSize: \"1.8em\",\r\n    fontFamily: \"sans-serif\",\r\n  };\r\n  function clearSearch() {\r\n    setsearchVal(\"\");\r\n    setJobs([]);\r\n    setJobs(props.jobs);\r\n  }\r\n  function searchJobs(event) {\r\n    var txt = event.target.value;\r\n    setsearchVal(txt);\r\n    var filterJobs =\r\n      event.target.value.length > 0\r\n        ? props.jobs.filter(\r\n            (t) =>\r\n              t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n              t.Code.includes(txt) ||\r\n              t.Customer.includes(txt)\r\n          )\r\n        : props.jobs;\r\n    setJobs(filterJobs);\r\n  }\r\n  function chunkArray(myArray, chunk_size) {\r\n    var index = 0;\r\n    var arrayLength = myArray.length;\r\n    var tempArray = [];\r\n    var myChunk = [];\r\n    for (index = 0; index < arrayLength; index += chunk_size) {\r\n      myChunk = myArray.slice(index, index + chunk_size);\r\n      // Do something if you want with the group\r\n      tempArray.push(myChunk);\r\n    }\r\n\r\n    return tempArray;\r\n  }\r\n  function getChart() {}\r\n  function beginTr(code, wts) {\r\n    var chuncked = chunkArray(wts, 4);\r\n\r\n    var items = [];\r\n    var htd = [];\r\n    var trs = [];\r\n    var element = {};\r\n    for (var i = 0; i < chuncked.length; i++) {\r\n      var section = chuncked[i];\r\n      htd = [];\r\n      for (var j = 0; j < section.length; j++) {\r\n        htd.push(<td>{section[j].Name}</td>);\r\n      }\r\n      trs.push(<tr>{htd}</tr>);\r\n      htd = [];\r\n      for (var j = 0; j < section.length; j++) {\r\n        if (section[j].Progress == 100) element = <CheckIcon />;\r\n        if (section[j].Progress == 0) element = <dir />;\r\n        else {\r\n          element = (\r\n            <MuiThemeProvider theme={theme}>\r\n              <Tooltip\r\n                title={section[j].ChartObj.filter((x) => x.value > 0).map(\r\n                  (t) => (\r\n                    <tr>\r\n                      <td style={{ backgroundColor: t.color }}> </td>\r\n                      <td>\r\n                        <h1> {t.value}</h1>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                )}\r\n                placement=\"top\"\r\n              >\r\n                {pie ? (\r\n                  <PieChart\r\n                    data={section[j].ChartObj.filter((x) => x.value > 0)}\r\n                    radius={PieChart.defaultProps.radius - 10}\r\n                    segmentsShift={(index) => (index === 0 ? 10 : 0.5)}\r\n                    label={({ dataEntry }) => dataEntry.value}\r\n                    labelStyle={{\r\n                      ...defaultLabelStyle,\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <table\r\n                    style={{\r\n                      padding: 0,\r\n                      margin: 0,\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      {section[j].ChartObj.filter((x) => x.value > 0).map(\r\n                        (t) => (\r\n                          <td\r\n                            style={{\r\n                              width: t.value,\r\n                              backgroundColor: t.color,\r\n                              fontSize: \"0.8em\",\r\n                            }}\r\n                          >\r\n                            {t.value}\r\n                          </td>\r\n                        )\r\n                      )}\r\n                    </tr>\r\n                  </table>\r\n                )}\r\n              </Tooltip>\r\n            </MuiThemeProvider>\r\n          );\r\n        }\r\n        htd.push(<td>{element}</td>);\r\n        element = {};\r\n      }\r\n      trs.push(<tr>{htd}</tr>);\r\n      htd = [];\r\n    }\r\n    items.push(<table>{trs}</table>);\r\n\r\n    return items;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div style={{ width: \"99%\" }}>\r\n        <Grid container spacing={5}>\r\n          <Hidden only={[\"xs\"]}>\r\n            <Grid item lg={2} sm={6}>\r\n              <h1>Production&nbsp;Board</h1>\r\n            </Grid>\r\n            <Grid item lg={1} sm={6}>\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Bar/Pie\r\n              </InputLabel>\r\n\r\n              <IOSSwitch\r\n                onChange={(e) => {\r\n                  setPie(e.target.checked);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={4} sm={6}>\r\n              <table style={{ width: \"100%\" }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#00C400\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Finished</td>\r\n\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#ffa500\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>High Priority</td>\r\n\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#808080\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Out Of Factory</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#ffff00\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Scheduled</td>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#d3d3d3\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Non-scheduled</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Grid>\r\n          </Hidden>\r\n\r\n          <Grid item lg={2} sm={6} xs={6}>\r\n            <IconButton sx={{ p: \"10px\" }} aria-label=\"menu\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              sx={{ ml: 1, flex: 1 }}\r\n              placeholder=\"Search\"\r\n              variant=\"outlined\"\r\n              value={searchVal}\r\n              onChange={searchJobs}\r\n            />\r\n            <IconButton\r\n              color=\"primary\"\r\n              sx={{ p: \"10px\" }}\r\n              aria-label=\"directions\"\r\n              onClick={() => clearSearch()}\r\n            >\r\n              <CancelIcon />\r\n            </IconButton>\r\n\r\n            {/* <Input\r\n              id=\"input-with-icon-adornment\"\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              }\r\n              value={searchVal}\r\n              onChange={searchJobs}\r\n            /> */}\r\n          </Grid>\r\n          <Grid item xs={6} lg={2} md={4}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onClick={() => props.logoutFromPB()}\r\n              startIcon={<MeetingRoomIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Grid>\r\n          <Hidden only={[\"lg\", \"xl\", \"md\"]}>\r\n            <Grid item xs={4}>\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Show W/T\r\n              </InputLabel>\r\n\r\n              <IOSSwitch\r\n                checked={wt}\r\n                onChange={(s) => {\r\n                  setWt(s.target.checked);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Pie/Bar\r\n              </InputLabel>\r\n\r\n              <IOSSwitch\r\n                onChange={(e) => {\r\n                  setPie(e.target.checked);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <table style={{ width: \"100%\" }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#00C400\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Finished</td>\r\n\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#ffa500\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>High Priority</td>\r\n\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#808080\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Out Of Factory</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#ffff00\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Scheduled</td>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#d3d3d3\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Non-scheduled</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Grid>\r\n          </Hidden>\r\n        </Grid>\r\n        <Hidden only={[\"xs\"]}>\r\n          <table id=\"pbDesktop\">\r\n            <thead>\r\n              <tr>\r\n                <th xs={2}>Code</th>\r\n                {props.settings.PBCustomerColumn && <th>Customer</th>}\r\n                {props.settings.PBTitleColumn && <th>Title</th>}\r\n                {props.settings.PBHourColumn && <th>Hours</th>}\r\n                {props.settings.PBDueDateColumn && <th>Due Date</th>}\r\n                {props.settings.ShowQty && <th>Unit Qty</th>}\r\n                {props.settings.ShowSalesPerson && <th>SalesPerson</th>}\r\n                {props.settings.ShowEstimator && <th>Estimator</th>}\r\n                {props.settings.ShowColour && <th>Colour</th>}\r\n                <th>Prog.</th>\r\n                {jobs &&\r\n                  jobs[0] &&\r\n                  jobs[0].WorkTypes &&\r\n                  jobs[0].WorkTypes.map((w) => (\r\n                    <th style={{ minWidth: \"65px\" }}>{w.Name}</th>\r\n                  ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {jobs &&\r\n                jobs.map((e, i) => (\r\n                  <tr\r\n                    style={{\r\n                      backgroundColor: `${i % 2 == 0 ? \"#fff\" : \"#fafafa\"}`,\r\n                    }}\r\n                    className=\"border-bottom\"\r\n                  >\r\n                    <td>\r\n                      {e.Comments.length > 0 && (\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          style={{ textAlign: \"right\", color: \"#196dc4\" }}\r\n                          onClick={(w) => {\r\n                            setNote(e.Comments);\r\n                            setOpenDialog(true);\r\n                          }}\r\n                        >\r\n                          <span style={{ textDecoration: \"underline\" }}>\r\n                            {\" \"}\r\n                            {e.Code}\r\n                          </span>\r\n                        </Button>\r\n                      )}\r\n                      {e.Comments.length == 0 && e.Code}\r\n                    </td>\r\n                    {props.settings.PBCustomerColumn && <td>{e.Customer}</td>}\r\n                    {props.settings.PBTitleColumn && (\r\n                      <td\r\n                        className=\"border-bottom\"\r\n                        style={{\r\n                          backgroundColor: `${\r\n                            e.TitleBackgroundColor !== \"\"\r\n                              ? e.TitleBackgroundColor\r\n                              : i % 2 == 0\r\n                              ? \"#fff\"\r\n                              : \"#fafafa\"\r\n                          }`,\r\n                          color: `${e.TitleColor}`,\r\n                        }}\r\n                      >\r\n                        {e.Title}\r\n                      </td>\r\n                    )}\r\n                    {props.settings.PBHourColumn && <td>{e.Hours}</td>}\r\n                    {props.settings.PBDueDateColumn && <td>{e.Due}</td>}\r\n                    {props.settings.ShowQty && <td>{e.UnitQty}</td>}\r\n                    {props.settings.ShowSalesPerson && <td>{e.SalesPerson}</td>}\r\n                    {props.settings.ShowEstimator && <td>{e.Estimator}</td>}\r\n                    {props.settings.ShowColour && <td>{e.Colour}</td>}\r\n                    <td>{e.Progress}%</td>\r\n                    {e.WorkTypes &&\r\n                      e.WorkTypes.map((w) =>\r\n                        w.Progress == 100 ? (\r\n                          <td\r\n                            style={{\r\n                              margin: 0,\r\n                              padding: 0,\r\n                              verticalAlign: \"middle\",\r\n                            }}\r\n                          >\r\n                            <CheckIcon />\r\n                          </td>\r\n                        ) : w.Progress == 0 ? (\r\n                          <td\r\n                            style={{\r\n                              margin: 0,\r\n                              padding: 0,\r\n                              verticalAlign: \"middle\",\r\n                            }}\r\n                            onClick={(r) =>\r\n                              props.settings.ClaimOnPB &&\r\n                              w.Progress != -1 &&\r\n                              props.claimOnPB(e.Oid, w.Oid, w.JobLevel, e.Code)\r\n                            }\r\n                          >\r\n                            0%\r\n                          </td>\r\n                        ) : (\r\n                          <MuiThemeProvider theme={theme}>\r\n                            <Tooltip\r\n                              title={w.ChartObj.filter((x) => x.value > 0).map(\r\n                                (t) => (\r\n                                  <tr>\r\n                                    <td style={{ backgroundColor: t.color }}>\r\n                                      {\" \"}\r\n                                    </td>\r\n                                    <td>\r\n                                      <h1> {t.value}</h1>\r\n                                    </td>\r\n                                  </tr>\r\n                                )\r\n                              )}\r\n                              placement=\"top\"\r\n                            >\r\n                              <td\r\n                                style={{\r\n                                  paddingRight: \"5px\",\r\n                                  paddingLeft: \"2px\",\r\n                                  verticalAlign: \"middle\",\r\n                                }}\r\n                                onClick={(r) =>\r\n                                  props.settings.ClaimOnPB &&\r\n                                  w.Progress != -1 &&\r\n                                  props.claimOnPB(\r\n                                    e.Oid,\r\n                                    w.Oid,\r\n                                    w.JobLevel,\r\n                                    e.Code\r\n                                  )\r\n                                }\r\n                              >\r\n                                {pie && (\r\n                                  <PieChart\r\n                                    style={{\r\n                                      margin: 0,\r\n                                      padding: 0,\r\n                                      marginLeft: \"10px\",\r\n                                      fontSize: \"1.2em\",\r\n                                    }}\r\n                                    data={w.ChartObj.filter((x) => x.value > 0)}\r\n                                    radius={PieChart.defaultProps.radius - 10}\r\n                                    segmentsShift={(index) =>\r\n                                      index === 0 ? 10 : 0.5\r\n                                    }\r\n                                    label={({ dataEntry }) => dataEntry.value}\r\n                                    labelStyle={{\r\n                                      ...defaultLabelStyle,\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                                {!pie && (\r\n                                  <table\r\n                                    style={{\r\n                                      padding: 0,\r\n                                      margin: 0,\r\n                                      width: \"100%\",\r\n                                      height: \"100%\",\r\n                                    }}\r\n                                  >\r\n                                    <tr>\r\n                                      {w.ChartObj.filter(\r\n                                        (x) => x.value > 0\r\n                                      ).map((t) => (\r\n                                        <td\r\n                                          style={{\r\n                                            width: t.value,\r\n                                            marginLeft: \"3px\",\r\n                                            marginRight: \"3px\",\r\n                                            backgroundColor: t.color,\r\n                                            fontSize: \"1.2em\",\r\n                                            // padding: \"2px\",\r\n                                          }}\r\n                                        >\r\n                                          {t.value}\r\n                                        </td>\r\n                                      ))}\r\n                                    </tr>\r\n                                  </table>\r\n                                )}\r\n                              </td>\r\n                            </Tooltip>\r\n                          </MuiThemeProvider>\r\n                        )\r\n                      )}\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </Hidden>\r\n        <Hidden only={[\"lg\", \"xl\", \"md\"]}>\r\n          <table style={{ border: \"none!important\", backgroundColor: \"white\" }}>\r\n            {jobs &&\r\n              jobs.map((e, i) => (\r\n                <Fragment>\r\n                  <tr>\r\n                    <td colSpan=\"4\">\r\n                      <hr />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      {e.Comments.length > 0 && (\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          style={{ textAlign: \"right\" }}\r\n                          onClick={(w) => {\r\n                            setNote(e.Comments);\r\n                            setOpenDialog(true);\r\n                          }}\r\n                        >\r\n                          {e.Code}\r\n                        </Button>\r\n                      )}\r\n                      {e.Comments.length == 0 && e.Code}\r\n                    </td>\r\n                    <td colSpan=\"1\">{e.Progress}%</td>\r\n                  </tr>\r\n                  <tr>\r\n                    {props.settings.PBCustomerColumn && (\r\n                      <td colSpan=\"4\">{e.Customer}</td>\r\n                    )}\r\n                  </tr>\r\n                  {props.settings.PBTitleColumn && (\r\n                    <tr>\r\n                      <td\r\n                        colSpan=\"4\"\r\n                        style={{\r\n                          backgroundColor: `${\r\n                            e.TitleBackgroundColor !== \"\"\r\n                              ? e.TitleBackgroundColor\r\n                              : i % 2 == 0\r\n                              ? \"#fff\"\r\n                              : \"#fafafa\"\r\n                          }`,\r\n                          color: `${e.TitleColor}`,\r\n                        }}\r\n                      >\r\n                        {e.Title}\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                  {props.settings.PBDueDateColumn && (\r\n                    <tr>\r\n                      <td colSpan=\"1\">Due:</td>\r\n                      <td colSpan=\"3\">{e.Due}</td>\r\n                    </tr>\r\n                  )}\r\n                  {props.settings.PBHourColumn && (\r\n                    <tr>\r\n                      <td colSpan=\"1\">Hours:</td>\r\n                      <td colSpan=\"3\">{e.Hours}</td>\r\n                    </tr>\r\n                  )}\r\n\r\n                  <tr>\r\n                    {e.WorkTypes && wt && (\r\n                      <td\r\n                        onClick={(r) =>\r\n                          props.settings.ClaimOnPB &&\r\n                          props.claimOnPB(e.Oid, wt.Oid, wt.JobLevel, e.Code)\r\n                        }\r\n                        colSpan=\"4\"\r\n                      >\r\n                        {beginTr(e.Code, e.WorkTypes)}\r\n                      </td>\r\n                    )}\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"4\">\r\n                      <hr />\r\n                    </td>\r\n                  </tr>\r\n                </Fragment>\r\n              ))}\r\n          </table>\r\n        </Hidden>\r\n        <FullScreenDialog\r\n          header=\"Job Notes\"\r\n          uls={note}\r\n          open={openDialog}\r\n          handleClose={() => setOpenDialog(false)}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default ProductionBoardPage;\r\n","import React, { Fragment } from \"react\";\r\nimport ProductionBoard from \"./ProductionBoardPage\";\r\nimport config from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Helper from \"../../components/logics/Helper\";\r\nimport Loading from \"../loading.js\";\r\n\r\nclass ProductionBoardContainer extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      jobs: [],\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getProductionBoardInfoByAPI();\r\n  }\r\n\r\n  getProductionBoardInfoByAPI = async () => {\r\n    var response = {};\r\n    try {\r\n      Helper.apiPost(\r\n        `${this.props.apiRoute}ProductionBoard/GetProductionBoardInfo`,\r\n        {},\r\n        \"\"\r\n      )\r\n        .then((res) => {\r\n          response = JSON.parse(res.data);\r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              jobs: response,\r\n            },\r\n            () => {\r\n              this.setState({\r\n                ...this.state,\r\n                loaded: true,\r\n              });\r\n            }\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Error in get production board data\");\r\n        });\r\n    } catch (err) {\r\n      if (err.response)\r\n        alert(\r\n          `Error in calling ESP API (production board)- ${err.response.data}`\r\n        );\r\n      else alert(`Error in calling ESP API (production board)- ${err}`);\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n  claimOnPB = async (jid, wid, jl, jobCode) => {\r\n    this.props.claimOnPB(jid, wid, jl, jobCode);\r\n  };\r\n  logoutFromPB = () => {\r\n    this.props.logoutFromPB();\r\n  };\r\n  render(props) {\r\n    return (\r\n      <Fragment>\r\n        {!this.state.loaded && <Loading mainRoute={this.props.mainRoute} />}\r\n        {this.state.loaded && (\r\n          <ProductionBoard\r\n            jobs={this.state.jobs}\r\n            settings={this.props.settings}\r\n            claimOnPB={this.claimOnPB}\r\n            logoutFromPB={this.props.logoutFromPB}\r\n          />\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductionBoardContainer;\r\n","import { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst gridSearchStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.black, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n\r\n  bolding: {\r\n    fontSize: \"0.9rem\",\r\n    \"&:hover\": {\r\n      //textShadow: '3px 3px 0px #ffd324',\r\n      cursor: \"pointer\",\r\n\r\n      //    transformOrigin: \"-100px -100px\",\r\n      //   transform: \"scale(1.05) translate(-17px, -10px)\",\r\n      zIndex: \"1000\",\r\n      // backgroundColor: \"#ddd\",\r\n      // backgroundImage: 'url(\"/work1.png\")',\r\n      //  backgroundRepeat: \"no-repeat\",\r\n      //  backgroundSize: \"90%\",\r\n\r\n      //    backgroundPosition: \"top\",\r\n    },\r\n  },\r\n  boxBolding: {\r\n    \"&:hover\": {\r\n      boxSizing: \"border-box\",\r\n      boxShadow: \"3px 3px #eee\",\r\n      borderBottom: \"2px  solid #5584c0\",\r\n      borderRight: \"2px  solid #5584c0\",\r\n      marginLeft: \"-2px\",\r\n      marginTop: \"-2px\",\r\n    },\r\n  },\r\n}));\r\nexport default gridSearchStyles;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport gridSearchStyles from \"../../components/controls/Styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { InputLabel, Switch } from \"@material-ui/core\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router\";\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\n\r\nexport default function Login(props) {\r\n  const classes = gridSearchStyles();\r\n  const [logout, setLogout] = useState(props.logoutChecked);\r\n  const history = useHistory();\r\n  const personList = props.loggingOut\r\n    ? props.items.filter((x) => x.IsLoggedIn)\r\n    : props.items;\r\n  function getLabel(e) {\r\n    var name = e.Name + (e.IsOnLeave ? \"(on leave)\" : \"\");\r\n\r\n    return e.LastClaimTime != null ? (\r\n      <Tooltip title={`Your last claim/ login was ${e.LastClaimTime} ago`}>\r\n        <span>\r\n          {name}{\" \"}\r\n          <span style={{ fontSize: \"small\" }}>\r\n            <br />\r\n            &nbsp;&nbsp;({e.LastClaimTime})\r\n          </span>\r\n        </span>\r\n      </Tooltip>\r\n    ) : (\r\n      <div>{name}</div>\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    setTimeout(() => {\r\n      props.goBackToStart(0);\r\n    }, 60000);\r\n  });\r\n  return (\r\n    <div>\r\n      <div className={classes.search}>\r\n        <Grid container spacing={1} style={{ backgroundColor: \"#ebedf1\" }}>\r\n          {(props.loggingOut || props.fromPB) && (\r\n            <Grid\r\n              item\r\n              lg={1}\r\n              sm={1}\r\n              xs={6}\r\n              style={{ fontSize: \"24px\", paddingTop: \"30px\" }}\r\n            >\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                style={{ textAlign: \"right\" }}\r\n                onClick={() => {\r\n                  history.push({\r\n                    pathname: `${props.mainRoute}productionBoard`,\r\n                  });\r\n                }}\r\n                startIcon={<ArrowBack />}\r\n              ></Button>\r\n            </Grid>\r\n          )}\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            sm={4}\r\n            xs={6}\r\n            style={{ fontSize: \"24px\", paddingTop: \"30px\" }}\r\n          >\r\n            <span\r\n              style={{ fontSize: \"24px\", padding: \"30px\", marginTop: \"30px\" }}\r\n            >\r\n              <b> Login</b>\r\n            </span>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={3}\r\n            xs={6}\r\n            style={{ marginTop: \"20px\", alignContent: \"right\" }}\r\n          ></Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            sm={4}\r\n            xs={12}\r\n            style={{ marginTop: \"20px\", alignContent: \"right\" }}\r\n          >\r\n            <InputLabel htmlFor=\"input-with-icon-adornment\">Search</InputLabel>\r\n            <Input\r\n              id=\"input-with-icon-adornment\"\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              }\r\n              onChange={props.searchNames}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        style={{ marginTop: 10, backgroundColor: \"#ebedf1\" }}\r\n      >\r\n        {personList &&\r\n          personList.map((e) => (\r\n            <Grid\r\n              item\r\n              lg={2}\r\n              sm={6}\r\n              xs={12}\r\n              key={e.OId}\r\n              style={{ padding: \"15px\" }}\r\n              className={classes.bolding}\r\n            >\r\n              <Box\r\n                borderRadius=\"5%\"\r\n                p={2}\r\n                key={e.OId}\r\n                className={classes.boxBolding}\r\n                boxShadow={2}\r\n                color=\"black\"\r\n                bgcolor={\r\n                  e.IsOnLeave ? \"#b4bebf\" : e.IsLoggedIn ? \"#9abf47\" : \"white\"\r\n                }\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  fontSize: \"1.2rem\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                onClick={() => {\r\n                  props.handleLogin(e.OId, e.IsOnLeave, logout);\r\n                }}\r\n              >\r\n                {getLabel(e)}\r\n              </Box>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography\r\n          variant=\"caption\"\r\n          component=\"div\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate variant.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function CircularStatic(props) {\r\n  const [progress] = React.useState(props.value);\r\n\r\n  // React.useEffect(() => {\r\n  //   const timer = setInterval(() => {\r\n  //     setProgress((prevProgress) =>\r\n  //       prevProgress >= 100 ? 0 : prevProgress + 10\r\n  //     );\r\n  //   }, 800);\r\n  //   return () => {\r\n  //     clearInterval(timer);\r\n  //   };\r\n  // }, []);\r\n\r\n  return <CircularProgressWithLabel value={progress} />;\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config\";\r\nimport Helper from \"./Helper\";\r\nclass ClaimLogic extends React.Component {\r\n  getJobItemsFromApi = async (jobId, worktypeId, workerId, route) => {\r\n    var response = {};\r\n    try {\r\n      return await Helper.apiPost(\r\n        `${route}Claim/GetJobItems`,\r\n        {\r\n          jobId: jobId,\r\n          WorkTypeId: worktypeId,\r\n          workerId: workerId,\r\n        },\r\n        \"\"\r\n      );\r\n    } catch (ex) {\r\n      if (ex.response)\r\n        alert(\r\n          `Error in calling ESP (Claim / Get Job items) API- ${ex.response.data}`\r\n        );\r\n      else\r\n        alert(\r\n          `Error in calling ESP (Claim / Get Job items) API- ${ex.message}`\r\n        );\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n\r\n  getJobsOfWorkerFromApi = async (\r\n    route,\r\n    workerId,\r\n    jobStage,\r\n    siteWork = false\r\n  ) => {\r\n    var data = {\r\n      id: workerId,\r\n      jobStage,\r\n    };\r\n    return await Helper.apiPost(\r\n      `${route}Claim/GetJobsOfWorker?id=${workerId}&jobStage=${jobStage}&siteWork=${siteWork}`,\r\n      data,\r\n      \"\"\r\n    );\r\n  };\r\n\r\n  submitClaimInAPI = async (\r\n    workerId,\r\n    jobId,\r\n    jobItems,\r\n    groupPercent,\r\n    comment,\r\n    logout,\r\n    route\r\n  ) => {\r\n    var value = {\r\n      workerId: workerId,\r\n      jobId: jobId,\r\n      jobItems: jobItems,\r\n      groupPercent: groupPercent,\r\n      comment: comment,\r\n      logout,\r\n    };\r\n    return await Helper.apiPost(\r\n      `${route}Claim/PostSubmitClaim`,\r\n      value,\r\n      \"Submit Claim Job\"\r\n    );\r\n  };\r\n  submitFullJobClaimInAPI = async (workerId, jobId, comment, route) => {\r\n    var value = {\r\n      workerId: workerId,\r\n      jobId: jobId,\r\n      comment: comment,\r\n    };\r\n    return await Helper.apiPost(\r\n      `${route}Claim/PostClaimWholeJob`,\r\n      value,\r\n      \"Submit Claim Full Job\"\r\n    );\r\n  };\r\n\r\n  submitAdminJobClaimInAPI = async (\r\n    claimingOId,\r\n    OId,\r\n    comment,\r\n    logout,\r\n    route\r\n  ) => {\r\n    var value = {\r\n      workerId: claimingOId,\r\n      WorkTypeId: OId,\r\n      comment: comment,\r\n      logout,\r\n    };\r\n    return await Helper.apiPost(\r\n      `${route}Claim/PostSubmitClaimAdminTask`,\r\n      value,\r\n      \"Submit Admin Job\"\r\n    );\r\n  };\r\n  GetClaimedByAPI = async (jobCode, worktypId, route) => {\r\n    var value = {\r\n      jobCode,\r\n      worktypId,\r\n    };\r\n    return Helper.apiPost(\r\n      `${route}Claim/GetWorkTypeClaimedBy?jobCode=${jobCode}&worktypeId=${worktypId}`,\r\n      value,\r\n      \"Get Work Type Claimed by\"\r\n    );\r\n  };\r\n  GetPerfStatByAPI = async (id, from, to, route) => {\r\n    var value = {\r\n      id,\r\n      from,\r\n      to,\r\n    };\r\n    return Helper.apiPost(\r\n      `${route}PerformanceStat/GetWorkerPS?id=${id}&from=${from}&to=${to}`,\r\n      value,\r\n      \"Get performance stat\"\r\n    );\r\n  };\r\n  render() {\r\n    return <din></din>;\r\n  }\r\n}\r\n//module.exports={_:LoginLogics};\r\nconst Loginlogics = new ClaimLogic();\r\nexport default Loginlogics;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport gridSearchStyles from \"../../components/controls/Styles\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport FullScreenDialog from \"../../components/controls/FullScreenDialog\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\r\nimport CircularProgressWithLabel from \"../../components/controls/CircularProgressWithLabel\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport ClaimLogic from \"../../components/logics/ClaimLogic\";\r\n\r\nexport default function Worktypes(props) {\r\n  const classes = gridSearchStyles();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  });\r\n  const [note, setNote] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [items, setSearchItems] = useState(props.workTypes);\r\n  const [searchVal, setSearcVal] = useState(\"\");\r\n\r\n  function searchItems(event) {\r\n    var txt = event.target.value;\r\n    setSearcVal(txt);\r\n    var workTypes =\r\n      event.target.value.length > 0\r\n        ? props.workTypes.filter((t) =>\r\n            t.Name.toLowerCase().includes(txt.toLowerCase())\r\n          )\r\n        : props.workTypes;\r\n\r\n    setSearchItems(workTypes);\r\n  }\r\n  function clearSearch() {\r\n    setSearchItems([]);\r\n    setSearchItems(props.workTypes);\r\n    setSearcVal(\"\");\r\n  }\r\n  function handleWorktypeNoteClicked(id, code, route) {\r\n    const response = ClaimLogic.GetClaimedByAPI(code, id, route);\r\n    response.then((e) => {\r\n      setNote(JSON.parse(e.data));\r\n      setOpenDialog(true);\r\n    });\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ backgroundColor: \"#fff\" }}>\r\n        <CardContent>\r\n          <Grid container spacing={2}>\r\n            <Grid ml={0} item lg={1} sm={4} xs={4}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                style={{ textAlign: \"right\" }}\r\n                onClick={() => {\r\n                  props.handleBack(1);\r\n                }}\r\n                startIcon={<ArrowBack />}\r\n              ></Button>\r\n            </Grid>\r\n            <Grid item lg={7} sm={4} xs={4}>\r\n              <span style={{ fontSize: \"22px\", marginTop: \"30px\" }}>\r\n                <b>\r\n                  Work&nbsp;Type{\" \"}\r\n                  {props.menuIsOpen ? \"\" : \" (\" + props.claimingName + \")\"}{\" \"}\r\n                </b>\r\n              </span>\r\n            </Grid>\r\n            <Hidden only={[\"xl\", \"lg\", \"md\"]}>\r\n              <Grid\r\n                ml={0}\r\n                item\r\n                lg={1}\r\n                sm={4}\r\n                xs={4}\r\n                style={{ textAlign: \"right\" }}\r\n              >\r\n                {/* <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={props.handleFullJob}\r\n                  startIcon={<PlaylistAddCheckIcon />}\r\n                >\r\n                  FullJob\r\n                </Button> */}\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item lg={3} sm={12} xs={12}>\r\n              <IconButton sx={{ p: \"10px\" }} aria-label=\"menu\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n              <InputBase\r\n                sx={{ ml: 1, flex: 1 }}\r\n                id=\"worktypeSearchVal\"\r\n                placeholder=\"Search\"\r\n                variant=\"outlined\"\r\n                value={searchVal}\r\n                onChange={searchItems}\r\n              />\r\n              <IconButton\r\n                color=\"primary\"\r\n                sx={{ p: \"10px\" }}\r\n                aria-label=\"directions\"\r\n                onClick={() => {\r\n                  clearSearch();\r\n                }}\r\n              >\r\n                <CancelIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Hidden only={[\"sm\", \"xs\"]}>\r\n              <Grid ml={0} item lg={1} sm={1} style={{ textAlign: \"right\" }}>\r\n                {/* <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={props.handleFullJob}\r\n                  startIcon={<PlaylistAddCheckIcon />}\r\n                >\r\n                  FullJob\r\n                </Button> */}\r\n              </Grid>\r\n            </Hidden>\r\n          </Grid>\r\n\r\n          <hr />\r\n          <h2>Primary</h2>\r\n          <Grid container spacing={1}>\r\n            {items &&\r\n              items\r\n                .filter(\r\n                  (x) =>\r\n                    x.Progress < 100 && props.primaryWorktypeIds.includes(x.OId)\r\n                )\r\n\r\n                .sort(function (a, b) {\r\n                  return a.CategoryOrder - b.CategoryOrder;\r\n                })\r\n                .map((e) => (\r\n                  <Grid\r\n                    item\r\n                    lg={2}\r\n                    sm={6}\r\n                    xs={12}\r\n                    key={e.OId}\r\n                    className={classes.bolding}\r\n                  >\r\n                    <Box\r\n                      p={4}\r\n                      borderRadius=\"5%\"\r\n                      className={classes.boxBolding}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        fontSize: \"0.9rem\",\r\n                        textAlign: \"center\",\r\n                        backgroundColor:\r\n                          e.CategoryName == \"production\"\r\n                            ? \"#9abf47\"\r\n                            : e.CategoryName == \"preproduction\"\r\n                            ? \"#b3b31b\"\r\n                            : e.CategoryName == \"postproduction\"\r\n                            ? \"#adadad\"\r\n                            : \"white\",\r\n                      }}\r\n                      onClick={() => {\r\n                        props.handleWorkTypeClick(e.OId);\r\n                      }}\r\n                      // onDelete={()=>{}}\r\n\r\n                      clickable\r\n                    >\r\n                      {e.Name}\r\n                      <hr />\r\n                      <Grid container>\r\n                        <Grid item lg={6} sm={5} xs={5}>\r\n                          <IconButton color=\"inherit\">\r\n                            <CommentIcon\r\n                              onClick={(w) => {\r\n                                handleWorktypeNoteClicked(\r\n                                  e.OId,\r\n                                  props.jobCode,\r\n                                  props.apiRoute\r\n                                );\r\n                                w.stopPropagation();\r\n                              }}\r\n                            />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid item lg={6} sm={6} xs={6}>\r\n                          <CircularProgressWithLabel value={e.Progress} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n                ))}\r\n          </Grid>\r\n          <h2>Secondary</h2>\r\n          <Grid container spacing={1}>\r\n            {items &&\r\n              items\r\n                .filter(\r\n                  (x) =>\r\n                    x.Progress < 100 &&\r\n                    props.secondaryWorktypeIds.includes(x.OId)\r\n                )\r\n\r\n                .sort(function (a, b) {\r\n                  return a.CategoryOrder - b.CategoryOrder;\r\n                })\r\n                .map((e) => (\r\n                  <Grid\r\n                    item\r\n                    lg={2}\r\n                    sm={6}\r\n                    xs={12}\r\n                    key={e.OId}\r\n                    className={classes.bolding}\r\n                  >\r\n                    <Box\r\n                      p={4}\r\n                      borderRadius=\"5%\"\r\n                      className={classes.boxBolding}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        fontSize: \"0.9rem\",\r\n                        textAlign: \"center\",\r\n                        backgroundColor:\r\n                          e.CategoryName == \"production\"\r\n                            ? \"#9abf47\"\r\n                            : e.CategoryName == \"preproduction\"\r\n                            ? \"#b3b31b\"\r\n                            : e.CategoryName == \"postproduction\"\r\n                            ? \"#adadad\"\r\n                            : \"white\",\r\n                      }}\r\n                      onClick={() => {\r\n                        props.handleWorkTypeClick(e.OId);\r\n                      }}\r\n                      // onDelete={()=>{}}\r\n\r\n                      clickable\r\n                    >\r\n                      {e.Name}\r\n                      <hr />\r\n                      <Grid container>\r\n                        <Grid item lg={6} sm={5} xs={5}>\r\n                          <IconButton color=\"inherit\">\r\n                            <CommentIcon\r\n                              onClick={(w) => {\r\n                                handleWorktypeNoteClicked(\r\n                                  e.OId,\r\n                                  props.jobCode,\r\n                                  props.apiRoute\r\n                                );\r\n                                w.stopPropagation();\r\n                              }}\r\n                            />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid item lg={6} sm={6} xs={6}>\r\n                          <CircularProgressWithLabel value={e.Progress} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n                ))}\r\n          </Grid>\r\n        </CardContent>\r\n        <FullScreenDialog\r\n          header=\"Claimed By\"\r\n          textList={note}\r\n          open={openDialog}\r\n          handleClose={() => setOpenDialog(false)}\r\n        />\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { withStyles, fade } from \"@material-ui/core/styles\";\r\nimport Helper from \"../../components/logics/Helper\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\n\r\nconst AirbnbSlider = withStyles({\r\n  root: {\r\n    color: \"#196dc4\",\r\n    height: 3,\r\n    padding: \"13px 0\",\r\n  },\r\n  thumb: {\r\n    height: 27,\r\n    width: 27,\r\n    backgroundColor: \"#fff\",\r\n    border: \"1px solid currentColor\",\r\n    marginTop: -12,\r\n    marginLeft: -13,\r\n    boxShadow: \"#ebebeb 0 2px 2px\",\r\n    \"&:focus, &:hover, &$active\": {\r\n      boxShadow: \"#eee 0 2px 3px 1px\",\r\n    },\r\n    \"& .bar\": {\r\n      // display: inline-block !important;\r\n      height: 9,\r\n      width: 1,\r\n      backgroundColor: \"currentColor\",\r\n      marginLeft: 1,\r\n      marginRight: 1,\r\n    },\r\n  },\r\n  active: {},\r\n  track: {\r\n    height: 3,\r\n  },\r\n  valueLabel: {\r\n    left: \"calc(-50% + 8px)\",\r\n  },\r\n  rail: {\r\n    color: \"#eee\",\r\n    opacity: 1,\r\n    height: 3,\r\n  },\r\n})(Slider);\r\n\r\nfunction AirbnbThumbComponent(props) {\r\n  return (\r\n    <span {...props}>\r\n      {/* //     <span className=\"bar\" />\r\n    //     <span className=\"bar\" />\r\n    //     <span className=\"bar\" /> */}\r\n    </span>\r\n  );\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.black, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n});\r\nclass JobItems extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      jobItems: props.items,\r\n      changed: props.items.some((x) => x.Progress100 !== x.Main_Progress100),\r\n      groupPercent: 0,\r\n      searchVal: \"\",\r\n    };\r\n  }\r\n  mainJobItems = () => [];\r\n  componentWillMount() {\r\n    this.setState({\r\n      //groupPercent: this.groupSliderValue(),\r\n      groupPercent: this.props.totalProgress,\r\n    });\r\n    this.mainJobItems = this.state.jobItems;\r\n  }\r\n  componentDidMount() {}\r\n  checkChange = (item) => {\r\n    for (var i = 0; i < item.length; i++) {\r\n      if (item[i].Progress100 !== item[i].Main_Progress100) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  handleChange = (val, inx) => {\r\n    const items = this.state.jobItems;\r\n    if (val >= items[inx].Main_Progress100 && val <= 100)\r\n      items[inx].Progress100 = parseInt(val);\r\n    var changed = this.checkChange(items);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: items,\r\n      changed,\r\n      groupPercent: this.groupSliderValue(),\r\n    });\r\n  };\r\n  handleBtn = (val, inx) => {\r\n    let items = this.state.jobItems;\r\n\r\n    if (!items[inx].Progress100) items[inx].Progress100 = 0;\r\n    if (items[inx].Progress100 + val >= items[inx].Main_Progress100) {\r\n      if (items[inx].Progress100 + val > 100) {\r\n        items[inx].Progress100 = 100;\r\n      } else {\r\n        items[inx].Progress100 = this.roundNumber(\r\n          items[inx].Progress100 + val,\r\n          items[inx].Progress100\r\n        );\r\n      }\r\n      var changed = this.checkChange(items);\r\n      this.setState({\r\n        ...this.state,\r\n        jobItems: items,\r\n        changed,\r\n      });\r\n    }\r\n  };\r\n  handleComplete = (inx) => {\r\n    let items = this.state.jobItems;\r\n\r\n    items[inx].Progress100 = 100;\r\n\r\n    var changed = this.checkChange(items);\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: items,\r\n      changed,\r\n    });\r\n  };\r\n\r\n  roundNumber(v, g) {\r\n    return v > g\r\n      ? v % this.props.settings.IncrementPercentage == 0\r\n        ? v\r\n        : Math.ceil(\r\n            (v - this.props.settings.IncrementPercentage - 1) /\r\n              this.props.settings.IncrementPercentage\r\n          ) * this.props.settings.IncrementPercentage\r\n      : v % this.props.settings.IncrementPercentage == 0\r\n      ? v\r\n      : Math.floor(\r\n          (v + this.props.settings.IncrementPercentage - 1) /\r\n            this.props.settings.IncrementPercentage\r\n        ) * this.props.settings.IncrementPercentage;\r\n  }\r\n  handleGroupedChanged(v, btn = false) {\r\n    if (v < 0) return false;\r\n    if (v > 100) v = 100;\r\n    if (v < this.props.totalProgress) return false;\r\n    const items = this.state.jobItems;\r\n    v = btn ? this.roundNumber(v, this.state.groupPercent) : v;\r\n\r\n    var changed = v != this.props.totalProgress;\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: items,\r\n      groupPercent: v,\r\n      changed,\r\n    });\r\n  }\r\n  handleChanged(v) {\r\n    if (v > 100 || v < 0) return false;\r\n\r\n    //const items = this.state.jobItems;\r\n    // this.state.jobItems.map((e, i) => {\r\n    //   if (items[i].Main_Progress100 <= v) items[i].Progress100 = v;\r\n    // });\r\n    //  var changed = items.some((e) => e.Progress100 !== e.Main_Progress100);\r\n    this.setState({\r\n      ...this.state,\r\n      //    jobItems: items,\r\n      groupPercent: v,\r\n      //   changed,\r\n    });\r\n  }\r\n  groupSliderValue() {\r\n    var val =\r\n      this.state.jobItems.length > 0\r\n        ? Math.round(\r\n            this.state.jobItems\r\n              .map((e) => e.Progress100)\r\n              .reduce((a, b) => a + b) / this.state.jobItems.length\r\n          )\r\n        : 0;\r\n    return val;\r\n  }\r\n\r\n  searchItems = (e) => {\r\n    var txt = e.target.value;\r\n    var jItems =\r\n      e.target.value.length > 0\r\n        ? this.mainJobItems.filter((t) => t.Name.toLowerCase().includes(txt))\r\n        : this.mainJobItems;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: jItems,\r\n      searchVal: txt,\r\n    });\r\n  };\r\n  clearSearch = () => {\r\n    this.setState([]);\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: this.mainJobItems,\r\n      searchVal: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    var allItemsV6 = this.state.jobItems\r\n      .map((e) => e.StdTime)\r\n      .reduce(function (a, b) {\r\n        return a + b;\r\n      }, 0);\r\n    function valuetext(value) {\r\n      return `${value}%`;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Card style={{ backgroundColor: \"#fff\" }}>\r\n          <CardContent>\r\n            <Table aria-label=\"customized table\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell colSpan=\"2\">\r\n                    <Grid container spacing={2}>\r\n                      <Grid ml={0} item lg={1} sm={4} xs={3}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          style={{ textAlign: \"right\" }}\r\n                          onClick={() => {\r\n                            this.props.handleBack(2);\r\n                          }}\r\n                          startIcon={<ArrowBack />}\r\n                        ></Button>\r\n                      </Grid>\r\n                      <Grid item lg={7} sm={8} xs={8}>\r\n                        <span style={{ fontSize: \"24px\", marginTop: \"30px\" }}>\r\n                          <b>\r\n                            Job&nbsp;Items{\" \"}\r\n                            {this.props.menuIsOpen\r\n                              ? \"\"\r\n                              : \" (\" + this.props.claimingName + \")\"}{\" \"}\r\n                          </b>\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item lg={3} sm={12} xs={12}>\r\n                        <IconButton sx={{ p: \"10px\" }} aria-label=\"menu\">\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                        <InputBase\r\n                          sx={{ ml: 1, flex: 1 }}\r\n                          id=\"worktypeSearchVal\"\r\n                          placeholder=\"Search\"\r\n                          variant=\"outlined\"\r\n                          value={this.state.searchVal}\r\n                          onChange={this.searchItems}\r\n                        />\r\n                        <IconButton\r\n                          color=\"primary\"\r\n                          sx={{ p: \"10px\" }}\r\n                          aria-label=\"directions\"\r\n                          onClick={this.clearSearch}\r\n                        >\r\n                          <CancelIcon />\r\n                        </IconButton>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        lg={1}\r\n                        sm={12}\r\n                        xs={12}\r\n                        style={{\r\n                          justifyContent: \"end\",\r\n\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          disabled={!this.state.changed}\r\n                          style={{\r\n                            color: \"#196dc4\",\r\n                            backgroundColor: \"#fff\",\r\n                          }}\r\n                          startIcon={<SaveIcon />}\r\n                          onClick={() =>\r\n                            this.props.handleSave(\r\n                              this.state.jobItems,\r\n                              this.state.groupPercent,\r\n                              this.props.jobLevel\r\n                            )\r\n                          }\r\n                        >\r\n                          Claim\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </TableCell>\r\n                </TableRow>\r\n                {this.props.finishedItems &&\r\n                  this.props.finishedItems.length > 0 && (\r\n                    <Accordion>\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                      >\r\n                        <Typography>\r\n                          <b>Completed Items</b>\r\n                        </Typography>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        <TableRow hover=\"true\" m={1}>\r\n                          <TableCell\r\n                            style={{\r\n                              width: \"100%\",\r\n                              marginButtm: \"40px!important\",\r\n                            }}\r\n                          >\r\n                            <ul>\r\n                              {this.props.finishedItems.map((e, inx) => (\r\n                                <li>{e}</li>\r\n                              ))}\r\n                            </ul>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  )}\r\n                {this.state.jobItems && this.state.jobItems.length >= 1 && (\r\n                  <TableRow\r\n                    hover=\"true\"\r\n                    m={1}\r\n                    style={{\r\n                      backgroundColor: \"#eee\",\r\n                    }}\r\n                  >\r\n                    <TableCell\r\n                      style={{ width: \"100%\", marginButtom: \"40px!important\" }}\r\n                      colSpan=\"2\"\r\n                    >\r\n                      {this.props.jobLevel && (\r\n                        <div>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={12} lg={2}>\r\n                              All Items{\" \"}\r\n                              {this.props.settings.ShowStandardTime &&\r\n                                \" (\" +\r\n                                  Helper.timeConvert(\r\n                                    Math.round(allItemsV6 / 60)\r\n                                  ) +\r\n                                  \")\"}\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} lg={5}>\r\n                              <AirbnbSlider\r\n                                ThumbComponent={AirbnbThumbComponent}\r\n                                aria-label=\"ios slider\"\r\n                                value={this.state.groupPercent}\r\n                                getAriaValueText={valuetext}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"on\"\r\n                                step={this.props.settings.IncrementPercentage}\r\n                                marks\r\n                                min={0}\r\n                                max={100}\r\n                                onChangeCommitted={(e, val) =>\r\n                                  this.handleGroupedChanged(val)\r\n                                }\r\n                                onChange={(e, val) => this.handleChanged(val)}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} lg={2}>\r\n                              <OutlinedInput\r\n                                value={this.state.groupPercent}\r\n                                onChange={(event) =>\r\n                                  this.handleGroupedChanged(event.target.value)\r\n                                }\r\n                                type=\"number\"\r\n                                name={`pgs`}\r\n                                fullWidth\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={4}\r\n                              sm={4}\r\n                              lg={1}\r\n                              style={{ textAlign: \"right\" }}\r\n                            >\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                onClick={() =>\r\n                                  this.handleGroupedChanged(\r\n                                    parseInt(this.state.groupPercent) -\r\n                                      this.props.settings.IncrementPercentage,\r\n                                    true\r\n                                  )\r\n                                }\r\n                                startIcon={<RemoveIcon />}\r\n                              ></Button>\r\n                            </Grid>\r\n                            <Grid item xs={4} sm={4} lg={1}>\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() =>\r\n                                  this.handleGroupedChanged(\r\n                                    parseInt(this.state.groupPercent) +\r\n                                      this.props.settings.IncrementPercentage,\r\n                                    true\r\n                                  )\r\n                                }\r\n                                startIcon={<AddIcon />}\r\n                              ></Button>\r\n                            </Grid>\r\n                            <Grid item xs={4} sm={4} lg={1}>\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"#196dc4\"\r\n                                border=\"#196dc4\"\r\n                                backgroundColor=\"#fff\"\r\n                                onClick={() => this.handleGroupedChanged(100)}\r\n                              >\r\n                                100%\r\n                              </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </div>\r\n                      )}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n                {this.props.jobLevel !== true &&\r\n                  this.state.jobItems &&\r\n                  this.state.jobItems.map((e, inx) => (\r\n                    <TableRow hover=\"true\">\r\n                      <TableCell style={{ width: \"100%\" }} colSpan=\"2\">\r\n                        <Grid container spacing={2}>\r\n                          <Grid\r\n                            item\r\n                            xs={12}\r\n                            sm={12}\r\n                            lg={2}\r\n                            style={{ marginTop: \"20px\" }}\r\n                          >\r\n                            {e.ItemNumber}-{e.Name}\r\n                            {this.props.settings.ShowStandardTime &&\r\n                              \"(\" +\r\n                                Helper.timeConvert(Math.round(e.StdTime / 60)) +\r\n                                \")\"}\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={12}\r\n                            sm={12}\r\n                            lg={5}\r\n                            style={{ marginTop: \"20px\" }}\r\n                          >\r\n                            <AirbnbSlider\r\n                              ThumbComponent={AirbnbThumbComponent}\r\n                              aria-label=\"ios slider\"\r\n                              value={e.Progress100}\r\n                              getAriaValueText={valuetext}\r\n                              aria-labelledby=\"discrete-slider\"\r\n                              valueLabelDisplay=\"on\"\r\n                              step={this.props.settings.IncrementPercentage}\r\n                              marks\r\n                              min={0}\r\n                              max={100}\r\n                              onChangeCommitted={(e, val) =>\r\n                                this.handleChange(val, inx)\r\n                              }\r\n                              onChange={(e, val) => this.handleChange(val, inx)}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={12} lg={2}>\r\n                            <OutlinedInput\r\n                              value={e.Progress100 || \"\"}\r\n                              onChange={(event) =>\r\n                                this.handleChange(event.target.value, inx)\r\n                              }\r\n                              type=\"number\"\r\n                              name={`pgs-${e.name}`}\r\n                              key={inx}\r\n                              fullWidth\r\n                            />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={4}\r\n                            sm={4}\r\n                            lg={1}\r\n                            style={{ textAlign: \"right\" }}\r\n                          >\r\n                            <IconButton\r\n                              aria-label=\"remove\"\r\n                              onClick={() =>\r\n                                this.handleBtn(\r\n                                  -this.props.settings.IncrementPercentage,\r\n                                  inx\r\n                                )\r\n                              }\r\n                            >\r\n                              <RemoveIcon />\r\n                            </IconButton>\r\n                          </Grid>\r\n                          <Grid item xs={4} sm={4} lg={1}>\r\n                            <IconButton\r\n                              aria-label=\"add\"\r\n                              onClick={() =>\r\n                                this.handleBtn(\r\n                                  this.props.settings.IncrementPercentage,\r\n                                  inx\r\n                                )\r\n                              }\r\n                            >\r\n                              <AddIcon />\r\n                            </IconButton>\r\n                          </Grid>\r\n                          <Grid item xs={4} sm={4} lg={1}>\r\n                            <Button\r\n                              borderRadius=\"5%\"\r\n                              variant=\"contained\"\r\n                              style={{\r\n                                backgroundColor: \"white\",\r\n                                color: \"#196dc4\",\r\n                                borderRadius: \"5%\",\r\n                                border: \"1px solid #196dc4\",\r\n                              }}\r\n                              onClick={() => this.handleComplete(inx)}\r\n                            >\r\n                              100%\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </CardContent>\r\n          <CardActions\r\n            style={{ justifyContent: \"flex-end\", marginRight: \"20px\" }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              disabled={!this.state.changed}\r\n              style={{\r\n                color: \"#196dc4\",\r\n                backgroundColor: \"#fff\",\r\n              }}\r\n              startIcon={<SaveIcon />}\r\n              onClick={() =>\r\n                this.props.handleSave(\r\n                  this.state.jobItems,\r\n                  this.state.groupPercent,\r\n                  this.props.jobLevel\r\n                )\r\n              }\r\n            >\r\n              Claim\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n//export default JobItems;\r\nexport default withStyles(styles, { withTheme: true })(JobItems);\r\n","import * as React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  BarSeries,\r\n  Title,\r\n  Legend,\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Stack, Animation } from \"@devexpress/dx-react-chart\";\r\n\r\nconst legendStyles = () => ({\r\n  root: {\r\n    display: \"flex\",\r\n    margin: \"auto\",\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\nconst legendRootBase = ({ classes, ...restProps }) => (\r\n  <Legend.Root {...restProps} className={classes.root} />\r\n);\r\nconst Root = withStyles(legendStyles, { name: \"LegendRoot\" })(legendRootBase);\r\nconst legendLabelStyles = () => ({\r\n  label: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n});\r\nconst legendLabelBase = ({ classes, ...restProps }) => (\r\n  <Legend.Label className={classes.label} {...restProps} />\r\n);\r\nconst Label = withStyles(legendLabelStyles, { name: \"LegendLabel\" })(\r\n  legendLabelBase\r\n);\r\n\r\nexport default class Barchart extends React.PureComponent {\r\n  render() {\r\n    // const { data: chartData } = this.state;\r\n\r\n    return (\r\n      <Paper>\r\n        <Chart data={this.props.Columns}>\r\n          <ArgumentAxis />\r\n          <ValueAxis />\r\n\r\n          <BarSeries\r\n            name=\"Actual\"\r\n            valueField=\"actual\"\r\n            argumentField=\"country\"\r\n            color=\"#9abf47\"\r\n          />\r\n          <BarSeries\r\n            name=\"V6. Std\"\r\n            valueField=\"std\"\r\n            argumentField=\"country\"\r\n            color=\"#adadad\"\r\n          />\r\n\r\n          <Animation />\r\n          <Legend\r\n            position=\"bottom\"\r\n            rootComponent={Root}\r\n            labelComponent={Label}\r\n          />\r\n          <Title text=\"Performance\" />\r\n          <Stack />\r\n        </Chart>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport DirectionsWalkIcon from \"@material-ui/icons/DirectionsWalk\";\r\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Fragment } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Helper from \"../../components/logics/Helper\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Barchart from \"../../components/controls/Barchart\";\r\n\r\nconst useStyles = makeStyles({\r\n  btn: {\r\n    marginRight: \"20px\",\r\n    marginLeft: \"20px\",\r\n    backgroundColor: \"white\",\r\n    color: \"#196dc4\",\r\n  },\r\n  textarea: {\r\n    display: \"block\",\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n    resize: \"both\",\r\n    minHight: \"40px\",\r\n    lineHeight: \"20px\",\r\n  },\r\n  root: { backgroundColor: \"#fff\" },\r\n});\r\n\r\nexport default function Summary(props) {\r\n  const [comment, setComment] = useState(\"\");\r\n  const classes = useStyles();\r\n  var num = 0;\r\n  var avgStd = 0;\r\n  var changedItems = props.claimingItems.filter(\r\n    (x) => x.Progress100 !== x.Main_Progress100\r\n  ).length;\r\n\r\n  const totalminute =\r\n    props.totalPhyCalimgMinutes / (props.jobLevel ? 1 : changedItems);\r\n  const chartData = [];\r\n  function space(n) {\r\n    var s = \"\";\r\n    for (var i = 0; i < n; i++) s += String.fromCharCode(0);\r\n    return s;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {window.scrollTo(0, 0)}\r\n\r\n      <Card className={classes.root}>\r\n        <Grid container spacing={3} style={{ margin: \"30px\" }}>\r\n          <Grid item lg={1} sm={2} xs={4}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                props.handleBack(\r\n                  props.isFullJob ? 2 : props.isAdminJob ? 1 : 3\r\n                );\r\n              }}\r\n              startIcon={<ArrowBack />}\r\n            ></Button>\r\n          </Grid>\r\n          <Grid item lg={10} sm={10} xs={8}>\r\n            <span style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>\r\n              <b>Claim</b>\r\n            </span>\r\n          </Grid>\r\n        </Grid>\r\n        <hr />\r\n        <CardActions style={{ justifyContent: \"flex-end\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            className={classes.btn}\r\n            startIcon={<SaveIcon />}\r\n            onClick={() => props.handleSubmit(comment, props.isAdminJob)}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            className={classes.btn}\r\n            style={{ color: \"white\", backgroundColor: \"#196dc4\" }}\r\n            startIcon={<MeetingRoomIcon />}\r\n            onClick={() => props.handleSubmit(comment, props.isAdminJob, true)}\r\n          >\r\n            Save & Logout\r\n          </Button>\r\n        </CardActions>\r\n        <CardActions>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={9} sm={12} xs={12}>\r\n              <DirectionsWalkIcon />\r\n              <span style={{ fontSize: \"1rem\" }}>\r\n                {\" \"}\r\n                <b>Job: </b> {props.jobName}\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n        </CardActions>\r\n        <CardContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={6} sm={12} xs={12}>\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <AccessibilityNewIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                        Worker\r\n                      </Typography>\r\n                    }\r\n                    secondary={\r\n                      <Typography style={{ fontSize: \"1rem\" }}>\r\n                        {props.claimingName}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n                {!props.isFullJob && (\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <BuildIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                          Work Type\r\n                        </Typography>\r\n                      }\r\n                      secondary={\r\n                        <Typography style={{ fontSize: \"1rem\" }}>\r\n                          {props.worktypeName}\r\n                        </Typography>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                )}\r\n\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n                {/* {props.isFullJob && (\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <DoneAllIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                          Claiming Full Job\r\n                          {\r\n                            <div>\r\n                              <span>(</span>\r\n                              {Helper.timeConvert(props.totalPhyCalimgMinutes)}\r\n                              <span>)</span>\r\n                            </div>\r\n                          }\r\n                        </Typography>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                )} */}\r\n                {!props.isAdminJob && props.jobLevel && (\r\n                  // const avgPrg=props.claimingItems.map((e) => (e.\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <DoneAllIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                          Claiming\r\n                        </Typography>\r\n                      }\r\n                      secondary={\r\n                        <Fragment>\r\n                          <Typography style={{ fontSize: \"1rem\" }}>\r\n                            {props.mainPercent}% to:\r\n                            {props.groupPercent}% {\" took: \"}\r\n                            {Helper.timeConvert(totalminute)}\r\n                            {\" - Std: \"}\r\n                            {Helper.timeConvert(\r\n                              (props.claimingItems.reduce(\r\n                                (a, v) => (a = a + v.StdTime),\r\n                                0\r\n                              ) *\r\n                                (props.groupPercent - props.mainPercent)) /\r\n                                6000\r\n                            )}\r\n                          </Typography>\r\n                        </Fragment>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                )}\r\n                {!props.isAdminJob && !props.jobLevel && (\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <DoneAllIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                          Claiming\r\n                        </Typography>\r\n                      }\r\n                      secondary={props.claimingItems\r\n                        .filter((x) => x.Progress100 !== x.Main_Progress100)\r\n                        .map((e) => (\r\n                          <Fragment>\r\n                            <Typography key={e.id} style={{ fontSize: \"1rem\" }}>\r\n                              {e.Name}: ({e.Main_Progress100}% to:\r\n                              {e.Progress100}% {\") took: \"}\r\n                              {Helper.timeConvert(totalminute)}\r\n                              {\" - Std: \"}\r\n                              {Helper.timeConvert(\r\n                                (e.StdTime *\r\n                                  (e.Progress100 - e.Main_Progress100)) /\r\n                                  6000\r\n                              )}\r\n                            </Typography>\r\n\r\n                            <span style={{ fontSize: \"0.0rem\" }}>\r\n                              {\r\n                                (num =\r\n                                  chartData.filter((x) => x.name == e.Name)\r\n                                    .length + 1)\r\n                              }\r\n                              {!props.jobLevel &&\r\n                                chartData.push({\r\n                                  id: e.OId,\r\n                                  name: e.Name,\r\n                                  country:\r\n                                    num > 1 ? e.Name + space(num) : e.Name,\r\n                                  actual: totalminute,\r\n                                  std:\r\n                                    (e.StdTime *\r\n                                      (e.Progress100 - e.Main_Progress100)) /\r\n                                    6000,\r\n                                })}\r\n                            </span>\r\n                          </Fragment>\r\n                        ))}\r\n                    />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n              {props.jobLevel && (\r\n                <span style={{ fontSize: \"0.0rem\" }}>\r\n                  {chartData.push({\r\n                    country: props.worktypeName,\r\n                    actual: totalminute,\r\n                    std:\r\n                      (props.claimingItems.reduce(\r\n                        (a, v) => (a = a + v.StdTime),\r\n                        0\r\n                      ) *\r\n                        (props.groupPercent - props.mainPercent)) /\r\n                      6000,\r\n                  })}\r\n                </span>\r\n              )}\r\n              {props.settings.PSEnableIndividual && (\r\n                <Barchart Columns={chartData} Title=\"Performance\" />\r\n              )}\r\n              {/* <Hidden only={[\"xs\"]}>\r\n                 <Barchart Columns={data} Title=\"Performance\" /> \r\n              </Hidden> */}\r\n            </Grid>\r\n            <Grid item lg={5} sm={12} xs={12}>\r\n              <TextareaAutosize\r\n                aria-label=\"minimum height\"\r\n                style={{ fontSize: \"20px\" }}\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n                className={classes.textarea}\r\n                rowsMin={20}\r\n                placeholder=\"Comment\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions style={{ justifyContent: \"flex-end\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            className={classes.btn}\r\n            startIcon={<SaveIcon />}\r\n            onClick={() => props.handleSubmit(comment, props.isAdminJob)}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            className={classes.btn}\r\n            style={{ color: \"white\", backgroundColor: \"#196dc4\" }}\r\n            startIcon={<MeetingRoomIcon />}\r\n            onClick={() => props.handleSubmit(comment, props.isAdminJob, true)}\r\n          >\r\n            Save & Logout\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\n\r\nimport gridSearchStyles from \"../../components/controls/Styles\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport FullScreenDialog from \"../../components/controls/FullScreenDialog\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport CallMadeOutlinedIcon from \"@mui/icons-material/CallMadeOutlined\";\r\nimport SubdirectoryArrowLeftOutlinedIcon from \"@mui/icons-material/SubdirectoryArrowLeftOutlined\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport CircularProgressWithLabel from \"../../components/controls/CircularProgressWithLabel\";\r\nimport ClaimLogic from \"../../components/logics/ClaimLogic\";\r\nimport Loading from \"../loading\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport HomeWorkIcon from \"@mui/icons-material/HomeWork\";\r\n\r\nexport default function DividedJobs(props) {\r\n  return (\r\n    <Accordion defaultExpanded={true}>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\"\r\n      >\r\n        <Typography variant=\"h4\" component=\"div\">\r\n          {props.label}\r\n          {props.menuIsOpen ? \"\" : \"(\" + props.claimingName + \")\"}{\" \"}\r\n        </Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails></AccordionDetails>\r\n      <Grid container spacing={1}>\r\n        <Grid ml={0} item lg={12} sm={12} xs={12} md={12}>\r\n          <hr />\r\n        </Grid>\r\n        {props.loading && <Loading mainRoute={props.mainRoute} />}\r\n        {!props.loading &&\r\n          props.jobs &&\r\n          props.jobs\r\n            .sort(function (a, b) {\r\n              return a.JobStageOrder - b.JobStageOrder;\r\n            })\r\n            .filter(\r\n              (x) =>\r\n                (props.activeButton == \"post\" &&\r\n                  x.JobStageName == \"postproduction\") ||\r\n                (props.activeButton == \"pre\" &&\r\n                  x.JobStageName == \"preproduction\") ||\r\n                (props.activeButton == \"prod\" &&\r\n                  x.JobStageName == \"production\") ||\r\n                (props.activeButton == \"site\" && x.JobStageName == \"SiteWork\")\r\n            )\r\n            .filter(\r\n              (x) =>\r\n                (props.activeButton != \"site\" && x.WorkTypes.length > 0) ||\r\n                props.activeButton == \"site\"\r\n            )\r\n            .filter((x) => x.WorkTypes.some((w) => w.Progress < 100))\r\n\r\n            .map((e) => (\r\n              <Grid\r\n                item\r\n                lg={props.jobs.length > 48 ? 1 : 2}\r\n                sm={6}\r\n                xs={12}\r\n                key={e.OId}\r\n                className={props.classes.bolding}\r\n              >\r\n                <Box\r\n                  borderRadius=\"5%\"\r\n                  p={1}\r\n                  boxShadow={4}\r\n                  color=\"white\"\r\n                  className={props.classes.boxBolding}\r\n                  style={{ paddingLeft: \"30px\", paddingRight: \"30px\" }}\r\n                  bgcolor={\r\n                    e.JobStageName == \"production\"\r\n                      ? \"#9abf47\"\r\n                      : e.JobStageName == \"preproduction\"\r\n                      ? \"#b3b31b\"\r\n                      : e.JobStageName == \"postproduction\"\r\n                      ? \"#b4bebf\"\r\n                      : \"white\"\r\n                  }\r\n                  spacing={3}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    fontSize: \"0.8rem\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                  onClick={() => {\r\n                    props.handleJobClick(e.OId);\r\n                  }}\r\n                >\r\n                  <Grid container style={{ color: \"black\" }}>\r\n                    <Hidden only={[\"sm\", \"md\", \"xl\", \"lg\"]}>\r\n                      <Grid item lg={4} xs={4} sm={4} md={4}>\r\n                        {e.Note !== \"\" && e.Note.length > 0 && (\r\n                          <IconButton\r\n                            color=\"inherit\"\r\n                            onClick={(w) => {\r\n                              // alert(e.Note);\r\n                              props.setNote(e.Note);\r\n                              props.setOpenDialog(true);\r\n                              w.stopPropagation();\r\n                            }}\r\n                          >\r\n                            <CommentIcon />\r\n                          </IconButton>\r\n                        )}\r\n                      </Grid>\r\n                      <Grid item lg={4} xs={4} sm={4} md={4}>\r\n                        <span style={{ fontSize: \"large\" }}>{e.Code}</span>\r\n                      </Grid>\r\n\r\n                      <Grid item lg={4} xs={4} sm={4} md={4}>\r\n                        <CircularProgressWithLabel value={e.Progress} />\r\n                      </Grid>\r\n                    </Hidden>\r\n                    <Hidden only={[\"xs\"]}>\r\n                      <Grid\r\n                        item\r\n                        lg={6}\r\n                        xs={6}\r\n                        sm={6}\r\n                        md={6}\r\n                        style={{ backgroundColor: \"#718d35\" }}\r\n                      >\r\n                        {e.Note !== \"\" && e.Note.length > 0 && (\r\n                          <IconButton\r\n                            color=\"inherit\"\r\n                            onClick={(w) => {\r\n                              // alert(e.Note);\r\n                              props.setNote(e.Note);\r\n                              props.setOpenDialog(true);\r\n                              w.stopPropagation();\r\n                            }}\r\n                          >\r\n                            <CommentIcon />\r\n                          </IconButton>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid\r\n                        item\r\n                        lg={6}\r\n                        xs={6}\r\n                        sm={6}\r\n                        md={6}\r\n                        style={{ backgroundColor: \"#718d35\" }}\r\n                      >\r\n                        <CircularProgressWithLabel value={e.Progress} />\r\n                      </Grid>\r\n                      <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                        <hr />\r\n                      </Grid>\r\n                      <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                        <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                          <span style={{ fontSize: \"large\" }}>{e.Code}</span>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Hidden>\r\n\r\n                    <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                      <hr />\r\n                    </Grid>\r\n                    <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                      <div style={{ fontSize: \"small\" }}> {e.Title}</div>\r\n                    </Grid>\r\n                    {/* <Grid item lg={6} xs={6} sm={6} md={6}>\r\n              <CircularProgressWithLabel value={e.Progress} />\r\n            </Grid> */}\r\n                  </Grid>\r\n                </Box>\r\n              </Grid>\r\n            ))}\r\n      </Grid>\r\n    </Accordion>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect, forwardRef } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\n\r\nimport gridSearchStyles from \"../../components/controls/Styles\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport FullScreenDialog from \"../../components/controls/FullScreenDialog\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport CallMadeOutlinedIcon from \"@mui/icons-material/CallMadeOutlined\";\r\nimport SubdirectoryArrowLeftOutlinedIcon from \"@mui/icons-material/SubdirectoryArrowLeftOutlined\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport CircularProgressWithLabel from \"../../components/controls/CircularProgressWithLabel\";\r\nimport DividedJobs from \"./DividedJobs\";\r\nimport ClaimLogic from \"../../components/logics/ClaimLogic\";\r\nimport Barchart from \"../../components/controls/Barchart\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport HomeWorkIcon from \"@mui/icons-material/HomeWork\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function Jobs(props) {\r\n  Date.prototype.addDays = function (days) {\r\n    var date = new Date(this.valueOf());\r\n    date.setDate(date.getDate() + days);\r\n    return date;\r\n  };\r\n  const classes = gridSearchStyles();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [note, setNote] = useState([]);\r\n  const [activeButton, setactiveButton] = useState(\r\n    props.IsSitWorkGroup ? \"site\" : \"prod\"\r\n  );\r\n\r\n  const [jobs, setJobs] = useState(props.jobs);\r\n  const [isLoading, setisLoading] = useState(true);\r\n  const [preJobs, setPreJobs] = useState([]);\r\n  const [postJobs, setPostJobs] = useState([]);\r\n  const [siteJobs, setSiteJobs] = useState([]);\r\n  const [loadedJobs, setLoadedJobs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchVal, setsearchVal] = useState(\"\");\r\n  const [perfstat, setPerfstat] = useState(false);\r\n  const [perfstatReady, setPerfstatReady] = useState(true);\r\n  const [dateFrom, setDateFrom] = useState(new Date().addDays(-7));\r\n  const [dateTo, setDateTo] = useState(new Date());\r\n  const [chartData, setChartData] = useState([]);\r\n  const [primaryJobs, setPrimaryJobs] = useState([]);\r\n  const [secondaryJobs, setSecondaryJobs] = useState([]);\r\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n    <OutlinedInput\r\n      sx={{ ml: 1, flex: 1 }}\r\n      onClick={onClick}\r\n      ref={ref}\r\n      value={value}\r\n    />\r\n  ));\r\n  useEffect(() => {\r\n    divideJobs(props.jobs);\r\n  }, []);\r\n  async function getPerfStatAPI(fromBtn) {\r\n    if (fromBtn && perfstat) {\r\n      setPerfstat(false);\r\n      return;\r\n    }\r\n    try {\r\n      var result = await ClaimLogic.GetPerfStatByAPI(\r\n        props.claimingOId,\r\n        dateFrom.toLocaleDateString(\"en-US\"),\r\n        dateTo.toLocaleDateString(\"en-US\"),\r\n        props.apiRoute\r\n      );\r\n      var data = JSON.parse(result.data);\r\n      var result = [];\r\n      result.push({\r\n        country: data.PointName,\r\n        name: data.PointName,\r\n        actual: data.Actual,\r\n        std: data.Std,\r\n      });\r\n      setChartData(result);\r\n\r\n      setPerfstat(true);\r\n      setPerfstatReady(true);\r\n    } catch (ex) {\r\n      if (ex.response)\r\n        alert(`Error in calling Get performance stat. API- ${ex.response}`);\r\n      else alert(`Error in calling Get performance stat. API- ${ex.message}`);\r\n    }\r\n  }\r\n  function divideJobs(jobs) {\r\n    var pj = [];\r\n    var sj = [];\r\n    setPrimaryJobs([]);\r\n    setSecondaryJobs([]);\r\n    setJobs([]);\r\n    if (props.divideJobs) {\r\n      for (let i = 0; i < jobs.length; i++) {\r\n        const j = jobs[i];\r\n\r\n        var wtIds = j.WorkTypes.filter((x) => x.Progress < 100).map(\r\n          (w) => w.OId\r\n        );\r\n        const intersct = wtIds.filter((value) =>\r\n          props.primaryWorktypeIds.includes(value)\r\n        );\r\n        if (intersct.length > 0) {\r\n          pj.push(j);\r\n        } else sj.push(j);\r\n      }\r\n      setPrimaryJobs(pj);\r\n      setSecondaryJobs(sj);\r\n    } else {\r\n      setJobs(jobs);\r\n    }\r\n  }\r\n\r\n  function searchJobs(event) {\r\n    var txt = event.target.value;\r\n    setsearchVal(txt);\r\n\r\n    if (props.divideJobs) {\r\n      setPrimaryJobs(\r\n        event.target.value.length > 0\r\n          ? primaryJobs.filter(\r\n              (t) =>\r\n                t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n                t.Code.includes(txt)\r\n            )\r\n          : primaryJobs\r\n      );\r\n\r\n      setSecondaryJobs(\r\n        event.target.value.length > 0\r\n          ? secondaryJobs.filter(\r\n              (t) =>\r\n                t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n                t.Code.includes(txt)\r\n            )\r\n          : secondaryJobs\r\n      );\r\n    } else {\r\n      var filterJobs =\r\n        event.target.value.length > 0\r\n          ? jobs.filter(\r\n              (t) =>\r\n                t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n                t.Code.includes(txt)\r\n            )\r\n          : jobs;\r\n      divideJobs(filterJobs);\r\n    }\r\n  }\r\n  function chunkSubstr(str, size) {\r\n    const numChunks = Math.ceil(str.length / size);\r\n    const chunks = new Array(numChunks);\r\n\r\n    for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\r\n      chunks[i] = str.substr(o, size);\r\n    }\r\n\r\n    return chunks;\r\n  }\r\n  function clearSearch() {\r\n    setsearchVal(\"\");\r\n    divideJobs([]);\r\n    divideJobs(props.jobs);\r\n  }\r\n\r\n  function handleJobsButtonClicked(section) {\r\n    var jobType =\r\n      section === \"post\"\r\n        ? 4\r\n        : section === \"pre\"\r\n        ? 2\r\n        : section === \"prod\"\r\n        ? 3\r\n        : section === \"site\"\r\n        ? 4\r\n        : 3;\r\n\r\n    divideJobs([]);\r\n    setsearchVal(\"\");\r\n    setLoading(true);\r\n    ClaimLogic.getJobsOfWorkerFromApi(\r\n      props.apiRoute,\r\n      props.claimingOId,\r\n      jobType,\r\n      section === \"site\"\r\n    )\r\n      .then((r) => {\r\n        const values = JSON.parse(r.data);\r\n        setSiteJobs(values.Item1);\r\n        divideJobs(values.Item1);\r\n        loadedJobs.push(section);\r\n        setLoadedJobs(loadedJobs);\r\n        props.handleJobLoaded(values.Item1);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Error in retrieve Jobs list\");\r\n      });\r\n    setactiveButton(section);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ backgroundColor: \"#ebedf1\" }}>\r\n        <CardContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item ml={0} lg={1} sm={2} xs={2}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                style={{ textAlign: \"right\" }}\r\n                onClick={() => {\r\n                  props.handleBack(0);\r\n                }}\r\n                startIcon={<ArrowBack />}\r\n              ></Button>\r\n            </Grid>\r\n            <Grid item lg={2} sm={9} xs={9}>\r\n              <span style={{ fontSize: \"18px\", marginTop: \"30px\" }}>\r\n                <b>Job&nbsp;Selection</b>\r\n              </span>\r\n            </Grid>\r\n            <Grid item lg={5} md={12} sm={12} xs={12}>\r\n              <IconButton sx={{ p: \"10px\" }} aria-label=\"menu\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n              <InputBase\r\n                sx={{ ml: 1, flex: 1 }}\r\n                placeholder=\"Search\"\r\n                variant=\"outlined\"\r\n                value={searchVal}\r\n                onChange={searchJobs}\r\n              />\r\n              <IconButton\r\n                color=\"primary\"\r\n                sx={{ p: \"10px\" }}\r\n                aria-label=\"directions\"\r\n                onClick={() => clearSearch()}\r\n              >\r\n                <CancelIcon />\r\n              </IconButton>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              ml={0}\r\n              lg={2}\r\n              sm={6}\r\n              md={6}\r\n              xs={6}\r\n              style={{ textAlign: \"right\" }}\r\n            >\r\n              {props.settings.PSEnableIndividual && (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={() => getPerfStatAPI(true)}\r\n                >\r\n                  Performance\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              ml={0}\r\n              lg={2}\r\n              md={6}\r\n              sm={6}\r\n              xs={6}\r\n              style={{ textAlign: \"right\" }}\r\n            >\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={() => props.handleLogOut(props.claimingOId)}\r\n                startIcon={<MeetingRoomIcon />}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {!perfstat && (\r\n            <Fragment>\r\n              <Accordion defaultExpanded={true}>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography variant=\"h4\" component=\"div\">\r\n                    Jobs{\" \"}\r\n                    {props.menuIsOpen ? \"\" : \"(\" + props.claimingName + \")\"}{\" \"}\r\n                    <hr />\r\n                  </Typography>\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails>\r\n                  <Grid ml={1} item lg={2} sm={1} xs={1}></Grid>\r\n                  <Grid\r\n                    ml={0}\r\n                    item\r\n                    lg={2}\r\n                    sm={3}\r\n                    xs={3}\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    {!props.settings.HidePreProductionJobs && (\r\n                      <Button\r\n                        variant={\r\n                          activeButton == \"pre\" ? \"contained\" : \"outlined\"\r\n                        }\r\n                        style={{\r\n                          color: activeButton == \"pre\" ? \"white\" : \"black\",\r\n                          backgroundColor:\r\n                            activeButton == \"pre\" ? \"#196dc4\" : \"white\",\r\n                        }}\r\n                        size=\"small\"\r\n                        onClick={() => handleJobsButtonClicked(\"pre\")}\r\n                        startIcon={<CallMadeOutlinedIcon />}\r\n                        fullWidth\r\n                      >\r\n                        Pre&nbsp;Prod.\r\n                      </Button>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid\r\n                    ml={0}\r\n                    item\r\n                    lg={2}\r\n                    sm={3}\r\n                    xs={3}\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    <Button\r\n                      variant={\r\n                        activeButton == \"prod\" ? \"contained\" : \"outlined\"\r\n                      }\r\n                      style={{\r\n                        color: activeButton == \"prod\" ? \"white\" : \"black\",\r\n                        backgroundColor:\r\n                          activeButton == \"prod\" ? \"#196dc4\" : \"white\",\r\n                      }}\r\n                      size=\"small\"\r\n                      onClick={() => handleJobsButtonClicked(\"prod\")}\r\n                      startIcon={<SettingsIcon />}\r\n                      fullWidth\r\n                    >\r\n                      <span>\r\n                        &nbsp;&nbsp;&nbsp;Prod.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                      </span>\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid\r\n                    ml={0}\r\n                    item\r\n                    lg={2}\r\n                    sm={3}\r\n                    xs={3}\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    {!props.settings.HidePostProductionJobs && (\r\n                      <Button\r\n                        variant={\r\n                          activeButton == \"post\" ? \"contained\" : \"outlined\"\r\n                        }\r\n                        style={{\r\n                          color: activeButton == \"post\" ? \"white\" : \"black\",\r\n                          backgroundColor:\r\n                            activeButton == \"post\" ? \"#196dc4\" : \"white\",\r\n                        }}\r\n                        startIcon={<SubdirectoryArrowLeftOutlinedIcon />}\r\n                        size=\"small\"\r\n                        onClick={() => handleJobsButtonClicked(\"post\")}\r\n                        fullWidth\r\n                      >\r\n                        Post&nbsp;Prod.\r\n                      </Button>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid\r\n                    ml={0}\r\n                    item\r\n                    lg={2}\r\n                    sm={3}\r\n                    xs={3}\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    <Button\r\n                      variant={\r\n                        activeButton == \"site\" ? \"contained\" : \"outlined\"\r\n                      }\r\n                      style={{\r\n                        color: activeButton == \"site\" ? \"white\" : \"black\",\r\n                        backgroundColor:\r\n                          activeButton == \"site\" ? \"#196dc4\" : \"white\",\r\n                      }}\r\n                      startIcon={<HomeWorkIcon />}\r\n                      size=\"small\"\r\n                      onClick={() => handleJobsButtonClicked(\"site\")}\r\n                      fullWidth\r\n                    >\r\n                      Site&nbsp;Work.\r\n                    </Button>\r\n                  </Grid>\r\n                </AccordionDetails>\r\n                {props.settings.DividJobs && (\r\n                  <div>\r\n                    <DividedJobs\r\n                      label=\"Primary Jobs\"\r\n                      menuIsOpen={props.menuIsOpen}\r\n                      claimingName={props.claimingName}\r\n                      loading={loading}\r\n                      jobs={primaryJobs}\r\n                      handleJobClick={props.handleJobClick}\r\n                      setNote={setNote}\r\n                      setOpenDialog={setOpenDialog}\r\n                      classes={classes}\r\n                      activeButton={activeButton}\r\n                      mainRoute={props.mainRoute}\r\n                    />\r\n                    <DividedJobs\r\n                      label=\"Secondary Jobs\"\r\n                      menuIsOpen={props.menuIsOpen}\r\n                      claimingName={props.claimingName}\r\n                      loading={loading}\r\n                      jobs={secondaryJobs}\r\n                      handleJobClick={props.handleJobClick}\r\n                      setNote={setNote}\r\n                      setOpenDialog={setOpenDialog}\r\n                      classes={classes}\r\n                      activeButton={activeButton}\r\n                      mainRoute={props.mainRoute}\r\n                    />\r\n                  </div>\r\n                )}\r\n                {!props.divideJobs && (\r\n                  <DividedJobs\r\n                    label=\"Jobs\"\r\n                    menuIsOpen={props.menuIsOpen}\r\n                    claimingName={props.claimingName}\r\n                    loading={loading}\r\n                    jobs={jobs}\r\n                    handleJobClick={props.handleJobClick}\r\n                    setNote={setNote}\r\n                    setOpenDialog={setOpenDialog}\r\n                    classes={classes}\r\n                    activeButton={activeButton}\r\n                    mainRoute={props.mainRoute}\r\n                  />\r\n                )}\r\n              </Accordion>\r\n\r\n              <Accordion defaultExpanded={true}>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography variant=\"h4\" component=\"div\">\r\n                    Admin Jobs{\" \"}\r\n                    {props.menuIsOpen ? \"\" : \"(\" + props.claimingName + \")\"}{\" \"}\r\n                    <hr />\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails></AccordionDetails>\r\n                <Grid container spacing={1}>\r\n                  {props.jobs &&\r\n                    props.adminJobs.map((e) => (\r\n                      <Grid\r\n                        item\r\n                        lg={2}\r\n                        sm={6}\r\n                        xs={12}\r\n                        key={e.OId}\r\n                        className={classes.bolding}\r\n                      >\r\n                        <Box\r\n                          borderRadius=\"5%\"\r\n                          p={4}\r\n                          boxShadow={4}\r\n                          color=\"black\"\r\n                          spacing={3}\r\n                          style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            fontSize: \"0.9rem\",\r\n                            textAlign: \"center\",\r\n                            backgroundColor: \"#efefef\",\r\n                          }}\r\n                          onClick={() => {\r\n                            props.handleJobClick(e.OId, true);\r\n                          }}\r\n                        >\r\n                          <div>{e.Name}</div>\r\n                        </Box>\r\n                      </Grid>\r\n                    ))}\r\n                </Grid>\r\n              </Accordion>\r\n            </Fragment>\r\n          )}\r\n          {perfstat && (\r\n            <div>\r\n              <Grid\r\n                container\r\n                style={{\r\n                  marginBottom: \"20px\",\r\n                  marginTop: \"40px\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                <Grid item lg={12} sm={12} xs={12}>\r\n                  <hr />\r\n                </Grid>\r\n                <Grid item lg={8} sm={4} xs={12} style={{ marginTop: \"30px\" }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => getPerfStatAPI(false)}\r\n                  >\r\n                    Show\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item lg={2} sm={4} xs={6}>\r\n                  <div>\r\n                    <label>From</label>\r\n                    <DatePicker\r\n                      style={{ zIndex: \"10000\" }}\r\n                      selected={dateFrom}\r\n                      onChange={(e) => setDateFrom(e)}\r\n                      customInput={<ExampleCustomInput />}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid item lg={2} sm={4} xs={6}>\r\n                  <div>\r\n                    <label className=\"datePickerLabel\">To</label>\r\n                    <DatePicker\r\n                      customInput={<ExampleCustomInput />}\r\n                      selected={dateTo}\r\n                      onChange={(e) => setDateTo(e)}\r\n                      style={{ zIndex: \"10000\" }}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Barchart Columns={chartData} Title=\"Performance\" />\r\n            </div>\r\n          )}\r\n          <FullScreenDialog\r\n            header=\"Job Notes\"\r\n            uls={note}\r\n            open={openDialog}\r\n            handleClose={() => setOpenDialog(false)}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport \"../../App.css\";\r\nimport { Button, Grid, Hidden } from \"@material-ui/core\";\r\nexport default function Start(props) {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  });\r\n  return (\r\n    <div>\r\n      <Hidden only={[\"xs\", \"sm\"]}>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <Grid item xs={3}>\r\n            <div>\r\n              <h1\r\n                style={{\r\n                  color: \"grey\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  paddingLeft: \"35%\",\r\n                }}\r\n              >\r\n                Claim&nbsp;Job\r\n              </h1>\r\n              <Button\r\n                id=\"btnStart\"\r\n                name=\"btnStart\"\r\n                className=\"click\"\r\n                style={{\r\n                  backgroundImage: `url(\\\"${props.mainRoute}start.png\\\")`,\r\n                  backgroundColor: \"#fff\",\r\n                  backgroundPosition: \"center\",\r\n                  // hover: {\r\n                  //  ,\r\n                  //   transform: \"scale(0.6)\",\r\n                  //   transitionDuration: \"0.5s\",\r\n                  // },\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  paddingTop: \"-30px\",\r\n\r\n                  width: \"430px\",\r\n                  height: \"240px\",\r\n\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  borderRadius: \"38px\",\r\n                  fontSize: \"40px\",\r\n                }}\r\n                onClick={props.start}\r\n              ></Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n      <Hidden only={[\"xl\", \"lg\", \"md\"]}>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <Grid item xs={3}>\r\n            <div>\r\n              <h1\r\n                style={{\r\n                  color: \"grey\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  paddingLeft: \"35%\",\r\n                }}\r\n              >\r\n                Claim&nbsp;Job\r\n              </h1>\r\n              <Button\r\n                id=\"btnStart\"\r\n                name=\"btnStart\"\r\n                className=\"click\"\r\n                style={{\r\n                  backgroundImage: `url(\\\"${props.mainRoute}start.png\\\")`,\r\n                  backgroundColor: \"#fff\",\r\n                  backgroundPosition: \"center\",\r\n                  // hover: {\r\n                  //  ,\r\n                  //   transform: \"scale(0.6)\",\r\n                  //   transitionDuration: \"0.5s\",\r\n                  // },\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  paddingTop: \"-30px\",\r\n\r\n                  width: \"300px\",\r\n                  height: \"240px\",\r\n\r\n                  display: \"flex\",\r\n                  justifyContent: \"left\",\r\n                  alignItems: \"left\",\r\n                  borderRadius: \"38px\",\r\n                  fontSize: \"40px\",\r\n                }}\r\n                onClick={props.start}\r\n              ></Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config\";\r\nimport Helper from \"./Helper\";\r\n\r\nclass LoginLogic extends React.Component {\r\n  getListOfWorkersFromApi = async (workerId, route) => {\r\n    return await Helper.apiPost(\r\n      `${route}Workers/GetListOfWorkers?workerId=` + workerId,\r\n      {},\r\n      \"Error in calling ESP (Get Workers List)\"\r\n    );\r\n  };\r\n\r\n  searchNames = (event, mainWorkersList) => {\r\n    var txt = event.target.value;\r\n    return event.target.value.length > 0\r\n      ? mainWorkersList.filter((t) =>\r\n          t.Name.toLowerCase().includes(txt.toLowerCase())\r\n        )\r\n      : mainWorkersList;\r\n  };\r\n\r\n  saveLoginInAPI = async (id, comment, route) => {\r\n    var response = {};\r\n    var value = { OId: id, Code: comment };\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    return await Helper.apiPost(`${route}Workers/PostLoginWorker`, value, \"\");\r\n  };\r\n\r\n  saveLogoutAPI = async (id, comment, route) => {\r\n    var response = {};\r\n    var value = { OId: id, Code: comment };\r\n\r\n    try {\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n\r\n      return await Helper.apiPost(`${route}Workers/PostLogoutWorker`, value);\r\n    } catch (err) {\r\n      if (err.response)\r\n        alert(`Error in calling ESP (Logout) API- ${err.response.data}`);\r\n      else alert(`Error in calling ESP (Logout) API- ${err}`);\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n\r\n  checkWorkerLateLogin(worker, trackLateLogin, lateLoginTrack) {\r\n    if (trackLateLogin) {\r\n      var currentTime = new Date();\r\n\r\n      var tempTime = new Date(worker.StartTime);\r\n      var startTime = new Date(tempTime);\r\n      startTime.setMinutes(tempTime.getMinutes() + lateLoginTrack);\r\n      return startTime < currentTime;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  checkWorkerEarlyLeave(worker, trackEarlyLeave, earlyLeaveAllowance) {\r\n    if (trackEarlyLeave) {\r\n      var currentTime = new Date();\r\n\r\n      var tempTime = new Date(worker.EndTime);\r\n      var endTime = new Date(tempTime);\r\n      endTime.setMinutes(tempTime.getMinutes() - earlyLeaveAllowance);\r\n      return endTime > currentTime;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getAsyncSettingsApi = async (url, value, errorName) => {\r\n    const authStr = \"bearer \" + this.getLocalToken();\r\n    try {\r\n      axios.defaults.headers.post[\"Authorization\"] = authStr;\r\n      axios.defaults.headers.post[\"Content-type\"] = \"application/json\";\r\n      const response = await axios.post(\r\n        `${this.props.apiRoute}AdminSettings/GetInfo`,\r\n        null\r\n      );\r\n\r\n      return response;\r\n    } catch (err) {\r\n      alert(`Error in calling ESP (${errorName}) API- ${err}`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <din></din>;\r\n  }\r\n}\r\n//module.exports={_:LoginLogics};\r\nconst Loginlogics = new LoginLogic();\r\nexport default Loginlogics;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function FormDialog(props) {\r\n  const [comment, setComment] = React.useState(\"\");\r\n  const [allow, setAllow] = React.useState(true);\r\n\r\n  const handleommentChange = (e) => {\r\n    setComment(e.target.value);\r\n    setAllow(e.target.value.length < 5);\r\n\r\n    setComment(e.target.value);\r\n  };\r\n  const handleSave = () => {\r\n    if (props.doSaving) {\r\n      props.onCommentSave(comment, !props.logout);\r\n    }\r\n    setAllow(true);\r\n  };\r\n  const handleKeyDown = (event) => {\r\n    if (event.target.value.length > 5 && event.key === \"Enter\") {\r\n      handleSave();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleSave}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">{props.header}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{props.text}</DialogContentText>\r\n          {!props.alert && (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label={props.placeholer}\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={handleommentChange}\r\n              onKeyDown={handleKeyDown}\r\n            />\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleSave}\r\n            color=\"primary\"\r\n            disabled={props.alert ? false : allow}\r\n          >\r\n            {props.alert ? \"Ok\" : \"Save\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport Login from \"./Login\";\r\nimport WorkTypes from \"./WorkTypes\";\r\nimport JobItems from \"./JobItems\";\r\nimport Summary from \"./Summary\";\r\nimport Jobs from \"./Jobs\";\r\nimport Start from \"./Start\";\r\nimport Loginlogics from \"../../components/logics/Login\";\r\nimport ClaimLogic from \"../../components/logics/ClaimLogic\";\r\nimport Loading from \"../loading.js\";\r\nimport FormDialog from \"../../components/controls/FormDialog\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass CalimContainer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      workersList: [],\r\n      settings: null,\r\n      mainWorkersList: [],\r\n      workTypes: [],\r\n      mainWorkTypes: [],\r\n      jobs: [],\r\n      mainJobs: [],\r\n      adminJobs: [],\r\n      mainAdminJobs: [],\r\n      claimingOId: 0,\r\n      claimingUser: \"\",\r\n      claiminWorker: {},\r\n      page: -1,\r\n      loading: false,\r\n      worktypeId: 0,\r\n      workTypeName: \"\",\r\n      jobId: 0,\r\n      isAdminJob: false,\r\n      adminWorkType: null,\r\n      jobItems: [],\r\n      mainJobItems: [],\r\n      primaryJobs: [],\r\n      secondaryJobs: [],\r\n      changedClaimingItems: [],\r\n      canClaimWholeJob: false,\r\n      claimingFullJob: false,\r\n      dialogOpen: false,\r\n      dialogHeader: \"\",\r\n      dialogText: \"\",\r\n      dialogSave: null,\r\n      totalPhyCalimgMinutes: 0,\r\n      LabelText: [],\r\n      isFullJob: false,\r\n      logoutClicked: false,\r\n      totalProgress: 0,\r\n      finishedItems: [],\r\n      logoutChecked: false,\r\n      groupPercent: 0,\r\n      IsSitWorkGroup: false,\r\n      doSaving: true,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // this.setState(\r\n    //   {\r\n    //     ...this.state,\r\n    //     loading: true,\r\n    //   },\r\n    //   () => {\r\n    //     this.loadWorkersList();\r\n    //   }\r\n    // );\r\n    if (this.props.fromPB) {\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          loading: true,\r\n        },\r\n        () => {\r\n          this.loadWorkersList();\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        page: -1,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  /* #region Claim From PB */\r\n  getPBJobItems = async (jid, wid) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true,\r\n    });\r\n\r\n    var labelText = this.state.LabelText;\r\n    var r = await ClaimLogic.getJobItemsFromApi(\r\n      jid,\r\n      wid,\r\n      this.state.claimingOId,\r\n      this.props.apiRoute\r\n    );\r\n    var data = JSON.parse(r.data);\r\n\r\n    labelText.push(this.props.fromPB ? this.props.jobCode : data.WorkType.Name);\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        jobId: jid,\r\n        jobLevel: data.WorkType.JobLevel,\r\n        workTypeName: data.WorkType.Name,\r\n        jobItems: data.jobItems,\r\n        mainJobItems: data.jobItems,\r\n        finishedItems: data.finishedItems,\r\n        canClaimWholeJob: data.canClaimWholeJob,\r\n        totalPhyCalimgMinutes: data.totalPhyCalimgMinutes,\r\n        totalProgress: data.totalProgress,\r\n        page: 3,\r\n        loading: false,\r\n        worktypeId: wid,\r\n        LabelText: labelText,\r\n        JobTitle: data.JobTitle,\r\n      },\r\n      () => {\r\n        this.props.changeStep(5, labelText, this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n  /* #region Claim From PB */\r\n\r\n  /* #region  Login Methods */\r\n\r\n  goBackToStart = (pageId) => {\r\n    if (this.state.page === pageId)\r\n      this.setState({\r\n        ...this.state,\r\n        page: -1,\r\n      });\r\n  };\r\n  start = async () => {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        loading: true,\r\n      },\r\n      () => {\r\n        this.loadWorkersList();\r\n      }\r\n    );\r\n  };\r\n  loadWorkersList = async () => {\r\n    try {\r\n      var r = await Loginlogics.getListOfWorkersFromApi(\r\n        this.props.workerId,\r\n        this.props.apiRoute\r\n      );\r\n      const response = JSON.parse(r.data);\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          workersList: response,\r\n          mainWorkersList: response,\r\n          loading: false,\r\n          settings: this.props.settings,\r\n          LabelText: [],\r\n          page: 0,\r\n        },\r\n        () => {\r\n          this.props.changeStep(2, [], this.state.isAdminJob);\r\n          if (this.props.workerId !== 0) {\r\n            var worker = response.find((x) => x.OId == this.props.workerId);\r\n            if (worker && worker.IsLoggedIn) {\r\n              this.loggedInWorkerClick(worker);\r\n            }\r\n          }\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(\"Error in fetching Workers list \");\r\n    }\r\n  };\r\n\r\n  onCommentSave = async (text, login = true) => {\r\n    if (text)\r\n      if (login)\r\n        await this.saveLoginInAPI(\r\n          this.state.claimingOId,\r\n          text,\r\n          this.props.apiRoute\r\n        );\r\n      else\r\n        await this.saveLogoutAPI(\r\n          this.state.claimingOId,\r\n          text,\r\n          this.props.apiRoute\r\n        );\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        dialogOpen: false,\r\n      },\r\n      () => {\r\n        if (this.props.logout) <Redirect to=\"/ProductionBoard\" />;\r\n        else <Redirect to=\"/\" />;\r\n      }\r\n    );\r\n  };\r\n\r\n  loggedInWorkerClick = (worker) => {\r\n    const page = 1;\r\n    const labelText = [];\r\n    labelText.push(worker.Name);\r\n    var primaryWorktypeIds = worker.Skills.filter((x) => x.Primary).map(\r\n      (i) => i.WorkTypeId\r\n    );\r\n    var secondaryWorktypeIds = worker.Skills.filter((x) => x.Secondary).map(\r\n      (i) => i.WorkTypeId\r\n    );\r\n\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        LabelText: labelText,\r\n        claimingUser: worker.Name,\r\n        claimingOId: worker.OId,\r\n        claiminWorker: worker,\r\n        primaryWorktypeIds,\r\n        secondaryWorktypeIds,\r\n        IsSitWorkGroup: worker.Skills.find((x) => x.IsSitework && x.Primary),\r\n      },\r\n      () => {\r\n        if (this.props.fromPB) {\r\n          this.getPBJobItems(this.props.jobId, this.props.workTypeId);\r\n        } else {\r\n          this.props.changeStep(3, labelText, this.state.isAdminJob);\r\n          this.goToJobsPage(page, worker.OId);\r\n        }\r\n      }\r\n    );\r\n  };\r\n  handleLogin = (sid, isOnLeave, logout) => {\r\n    if (logout || this.props.logout) {\r\n      this.handleLogOut(sid);\r\n\r\n      return;\r\n    }\r\n    if (isOnLeave) {\r\n      this.setState({\r\n        ...this.state,\r\n        dialogOpen: true,\r\n        dialogHeader: \"Cannot Login\",\r\n        dialogText:\r\n          \"You are currenly on leave.Please, log in during your working hours\",\r\n        dialogSave: this.onCommentSave,\r\n        alert: true,\r\n      });\r\n      return false;\r\n    }\r\n    const id = parseInt(sid);\r\n    const workersList = this.state.workersList;\r\n    const worker = workersList.filter((x) => x.OId === id)[0];\r\n    this.props.setClaimingId(id);\r\n\r\n    if (worker.IsLoggedIn) {\r\n      this.loggedInWorkerClick(worker);\r\n    } else {\r\n      let comment = \"\";\r\n      if (\r\n        Loginlogics.checkWorkerLateLogin(\r\n          worker,\r\n          this.state.settings.TrackLateLogin,\r\n          this.state.settings.LateAllowance\r\n        )\r\n      ) {\r\n        this.setState({\r\n          ...this.state,\r\n          claimingOId: id,\r\n          claimingUser: worker.Name,\r\n          dialogOpen: true,\r\n          logoutClicked: false,\r\n          dialogHeader: \"Late Login\",\r\n          dialogText: \"Please, specify the reason to late log in.\",\r\n          dialogSave: this.onCommentSave,\r\n          alert: false,\r\n          LabelText: [worker.Name],\r\n        });\r\n      }\r\n      if (worker.LastDayNotLoggedOut) {\r\n        this.setState({\r\n          ...this.state,\r\n          claimingOId: id,\r\n          claimingUser: worker.Name,\r\n\r\n          logoutClicked: false,\r\n          dialogHeader: \"Missing logout\",\r\n          dialogText:\r\n            \" You did not logout yesterday please advise your manager\",\r\n\r\n          doSaving: true,\r\n          alert: true,\r\n          LabelText: [worker.Name],\r\n\r\n          dialogOpen: true,\r\n          dialogSave: this.onCommentSave,\r\n        });\r\n        this.saveLoginInAPI(id, comment, this.props.apiRoute);\r\n      } else {\r\n        this.saveLoginInAPI(id, comment, this.props.apiRoute);\r\n      }\r\n    }\r\n  };\r\n  saveLoginInAPI = async (id, comment) => {\r\n    const workersList = this.state.workersList;\r\n    const worker = workersList.filter((x) => x.OId === id)[0];\r\n    var labelText = [];\r\n    var r = await Loginlogics.saveLoginInAPI(id, comment, this.props.apiRoute);\r\n\r\n    if (!JSON.parse(r.data).Successful) {\r\n      alert(r.Message);\r\n      return;\r\n    }\r\n\r\n    worker.IsLoggedIn = true;\r\n    var inx = workersList.findIndex((x) => x.OId === id);\r\n\r\n    if (inx !== -1) {\r\n      workersList[inx] = worker;\r\n    }\r\n\r\n    labelText.push(worker.Name);\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        claimingOId: id,\r\n        claimingUser: worker.Name,\r\n        workersList,\r\n        LabelText: labelText,\r\n      },\r\n      () => {\r\n        if (this.props.fromPB) {\r\n          this.getPBJobItems(this.props.jobId, this.props.workTypeId);\r\n        } else {\r\n          this.props.changeStep(3, labelText, this.state.isAdminJob);\r\n        }\r\n      }\r\n    );\r\n  };\r\n  handleLogOut = async (id, comment) => {\r\n    const workersList = this.state.workersList;\r\n    const worker = workersList.filter((x) => x.OId === id)[0];\r\n    if (\r\n      Loginlogics.checkWorkerEarlyLeave(\r\n        worker,\r\n        this.state.settings.TrackEarlyLeave,\r\n        this.state.settings.EarlyLeaveAllowance\r\n      )\r\n    ) {\r\n      this.setState({\r\n        ...this.state,\r\n        claimingOId: id,\r\n        claimingUser: worker.Name,\r\n        dialogOpen: true,\r\n        logoutClicked: true,\r\n        dialogHeader: \"Early Leave\",\r\n        dialogText: \"Please, specify the reason to early leaving.\",\r\n        dialogSave: this.onCommentSave,\r\n        alert: false,\r\n        LabelText: [worker.Name],\r\n      });\r\n    } else {\r\n      var response = await this.saveLogoutAPI(id, comment, this.props.apiRoute);\r\n      if (this.props.logout)\r\n        <Redirect to={`${this.props.apiRoute}ProductionBoard`} />;\r\n      else {\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            page: -1,\r\n          },\r\n          () => {\r\n            <Redirect to={`${this.props.apiRoute}claim`} />;\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleJobLoaded = (newJobs) => {\r\n    var stateJobs = this.state.jobs;\r\n    var mainStateJobs = this.state.mainJobs;\r\n    stateJobs.push(...newJobs);\r\n    //   mainStateJobs.push(...newJobs);\r\n\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        jobs: stateJobs,\r\n        mainJobs: mainStateJobs,\r\n      },\r\n      () => {\r\n        return true;\r\n      }\r\n    );\r\n  };\r\n  saveLogoutAPI = async (id, comment) => {\r\n    var r = await Loginlogics.saveLogoutAPI(id, comment, this.props.apiRoute);\r\n\r\n    var obj = JSON.parse(r.data);\r\n    if (!obj.Successful) {\r\n      alert(obj.Message);\r\n      return false;\r\n    }\r\n\r\n    const workersList = this.setWorkerLOgout(id);\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        page: 0,\r\n        workersList,\r\n        dialogOpen: false,\r\n      },\r\n      () => {\r\n        this.props.changeStep(2, [], this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n  setWorkerLOgout = (id) => {\r\n    const workersList = this.state.workersList;\r\n    const worker = workersList.filter((x) => x.OId === id)[0];\r\n    worker.IsLoggedIn = false;\r\n    var inx = workersList.findIndex((x) => x.OId === id);\r\n    if (inx !== -1) {\r\n      workersList[inx] = worker;\r\n    }\r\n    return workersList;\r\n  };\r\n  searchNames = (event) => {\r\n    this.setState({\r\n      ...this.state,\r\n      workersList: Loginlogics.searchNames(event, this.state.mainWorkersList),\r\n    });\r\n  };\r\n  /* #endregion */\r\n\r\n  /* #region  WorkType */\r\n\r\n  clearSearchWorkTypes = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      workTypes: this.state.mainWorkTypes,\r\n    });\r\n  };\r\n  handleWorkTypeClick = async (worktypeId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true,\r\n    });\r\n    const workType = this.state.mainWorkTypes.find((x) => x.OId == worktypeId);\r\n    var labelText = this.state.LabelText;\r\n    var r = await ClaimLogic.getJobItemsFromApi(\r\n      this.state.jobId,\r\n      worktypeId,\r\n      this.state.claimingOId,\r\n      this.props.apiRoute\r\n    );\r\n    var data = JSON.parse(r.data);\r\n    labelText.push(workType.Name);\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        jobLevel: workType.JobLevel,\r\n        jobItems: data.jobItems,\r\n        mainJobItems: data.jobItems,\r\n        finishedItems: data.finishedItems,\r\n        canClaimWholeJob: data.canClaimWholeJob,\r\n        totalPhyCalimgMinutes: data.totalPhyCalimgMinutes,\r\n        totalProgress: data.totalProgress,\r\n        page: 3,\r\n        loading: false,\r\n        worktypeId: worktypeId,\r\n        LabelText: labelText,\r\n        workTypeName: workType.Name,\r\n      },\r\n      () => {\r\n        this.props.changeStep(5, labelText, this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n\r\n  /* #endregion */\r\n\r\n  /*#region Job*/\r\n\r\n  searchJobs = (event) => {\r\n    var txt = event.target.value;\r\n    var jobs =\r\n      event.target.value.length > 0\r\n        ? this.state.mainJobs.filter(\r\n            (t) =>\r\n              t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n              t.Code.includes(txt)\r\n          )\r\n        : this.state.mainJobs;\r\n\r\n    var adminJobs =\r\n      event.target.value.length > 0\r\n        ? this.state.mainAdminJobs.filter((t) =>\r\n            t.Name.toLowerCase().includes(txt.toLowerCase())\r\n          )\r\n        : this.state.mainAdminJobs;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      jobs,\r\n      adminJobs,\r\n    });\r\n  };\r\n\r\n  handleFullJob = () => {\r\n    var labelText = this.state.LabelText;\r\n    labelText.push(\"Full Job\");\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        page: 4,\r\n        isFullJob: true,\r\n        LabelText: labelText,\r\n      },\r\n      () => {\r\n        this.props.changeStep(6, labelText, this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n\r\n  goToJobsPage = async (page, claimingOId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true,\r\n    });\r\n\r\n    var r = this.state.IsSitWorkGroup\r\n      ? await ClaimLogic.getJobsOfWorkerFromApi(\r\n          this.props.apiRoute,\r\n          claimingOId,\r\n          3,\r\n          true\r\n        )\r\n      : await ClaimLogic.getJobsOfWorkerFromApi(\r\n          this.props.apiRoute,\r\n          claimingOId,\r\n          3\r\n        );\r\n    const values = JSON.parse(r.data);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      jobs: values.Item1,\r\n      mainJobs: values.Item1,\r\n      adminJobs: values.Item2,\r\n      mainAdminJobs: values.Item2,\r\n      loading: false,\r\n      claimingOId,\r\n      page,\r\n    });\r\n  };\r\n  handleBack = (pageId) => {\r\n    var labelText = this.state.LabelText;\r\n    switch (pageId) {\r\n      case 0:\r\n        labelText = [];\r\n        break;\r\n      case 1:\r\n        labelText = labelText.slice(0, 1);\r\n        break;\r\n      case 2:\r\n        labelText = labelText.slice(0, 2);\r\n        break;\r\n    }\r\n    //this.props.history.push(\"/productionBoard\");\r\n    if (pageId == 2 && this.props.fromPB) {\r\n      pageId = 0;\r\n      labelText = [];\r\n    }\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        page: pageId,\r\n        LabelText: labelText,\r\n        jobs: this.state.mainJobs,\r\n        jobItems: this.state.mainJobItems,\r\n        adminJobs: this.state.mainAdminJobs,\r\n        workersList: this.state.mainWorkersList,\r\n        workTypes: this.state.mainWorkTypes,\r\n      },\r\n      () => {\r\n        this.props.changeStep(\r\n          pageId + 2,\r\n          this.state.LabelText,\r\n          this.state.isAdminJob\r\n        );\r\n      }\r\n    );\r\n  };\r\n  handleJobClick = (jobId, isAdmin = false) => {\r\n    if (isAdmin) {\r\n      const selectedAdminJob = this.state.adminJobs.find(\r\n        (x) => x.OId === jobId\r\n      );\r\n      var labelText = this.state.LabelText;\r\n\r\n      labelText.push(selectedAdminJob.Name);\r\n      labelText[2] = \"\";\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          adminWorkType: selectedAdminJob,\r\n          page: 4,\r\n          isAdminJob: isAdmin,\r\n          LabelText: labelText,\r\n        },\r\n        () => {\r\n          this.props.changeStep(6, labelText, this.state.isAdminJob);\r\n        }\r\n      );\r\n    } else {\r\n      const jobs = this.state.jobs;\r\n      const selectedJob = jobs.find((x) => x.OId === jobId);\r\n      var labelText = this.state.LabelText;\r\n      labelText.push(selectedJob.Code);\r\n\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          jobId,\r\n          // workTypes: selectedJob.WorkTypes.filter((x) => x.HasJobItems),\r\n          // mainWorkTypes: selectedJob.WorkTypes.filter((x) => x.HasJobItems),\r\n          workTypes: selectedJob.WorkTypes,\r\n          mainWorkTypes: selectedJob.WorkTypes,\r\n\r\n          selectedJobCode: selectedJob.Code,\r\n          page: 2,\r\n          isAdminJob: false,\r\n          LabelText: labelText,\r\n          JobTitle: selectedJob.Code,\r\n        },\r\n        () => {\r\n          this.props.changeStep(4, labelText, this.state.isAdminJob);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  /* #endregion */\r\n\r\n  /*#region jobItem*/\r\n\r\n  handleSaveClaim = (\r\n    changedClaimingItems,\r\n    groupPercent = 0,\r\n    jobLevel = false\r\n  ) => {\r\n    // if (fullJob) {\r\n    //   this.setState({\r\n    //     ...this.state,\r\n    //     claimingFullJob: true,\r\n    //     page: 4,\r\n    //   });\r\n    // } else {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        changedClaimingItems,\r\n        groupPercent,\r\n        page: 4,\r\n      },\r\n      () => {\r\n        this.props.changeStep(5, this.state.LabelText, this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSubmitClaim = async (comment, isAdmin = false, logout = false) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true,\r\n    });\r\n\r\n    if (!isAdmin) {\r\n      if (this.state.isFullJob) {\r\n        var e = await ClaimLogic.submitFullJobClaimInAPI(\r\n          this.state.claimingOId,\r\n          this.state.jobId,\r\n          comment,\r\n          this.props.apiRoute\r\n        );\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            loading: false,\r\n            page: this.props.role == \"a\" || this.props.public ? -1 : 1,\r\n            LabelText: [],\r\n          },\r\n          () => {\r\n            if (this.props.role == \"a\" || this.props.public)\r\n              this.props.changeStep(1, [], this.state.isAdminJob);\r\n            else this.props.changeStep(2, [], this.state.isAdminJob);\r\n          }\r\n        );\r\n      } else {\r\n        var jobItems =\r\n          this.state.groupPercent > 0\r\n            ? this.state.jobItems\r\n            : this.state.jobItems.filter(\r\n                (x) => x.Progress100 !== x.Main_Progress100\r\n              );\r\n        var e = await ClaimLogic.submitClaimInAPI(\r\n          this.state.claimingOId,\r\n          this.state.jobId,\r\n          jobItems,\r\n          this.state.groupPercent,\r\n          comment,\r\n          logout,\r\n          this.props.apiRoute\r\n        );\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            loading: false,\r\n            page: -1,\r\n            LabelText: [],\r\n            workersList: logout\r\n              ? this.setWorkerLOgout(this.state.claimingOId)\r\n              : this.state.workersList,\r\n          },\r\n          () => {\r\n            if (this.props.fromPB)\r\n              this.props.history.push(`${this.props.mainRoute}productionBoard`);\r\n            else {\r\n              if (this.props.role == \"a\" || this.props.public)\r\n                this.props.changeStep(1, [], this.state.isAdminJob);\r\n              else this.props.changeStep(2, [], this.state.isAdminJob);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      var e = await ClaimLogic.submitAdminJobClaimInAPI(\r\n        this.state.claimingOId,\r\n        this.state.adminWorkType.OId,\r\n        comment,\r\n        logout,\r\n        this.props.apiRoute\r\n      );\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          loading: false,\r\n          page: -1,\r\n          LabelText: [],\r\n          workersList: logout\r\n            ? this.setWorkerLOgout(this.state.claimingOId)\r\n            : this.state.workersList,\r\n        },\r\n        () => {\r\n          if (this.props.role == \"a\" || this.props.public)\r\n            this.props.changeStep(1, [], this.state.isAdminJob);\r\n          else this.props.changeStep(2, [], this.state.isAdminJob);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  handleFullSubmitClaim = (comment, isAdmin = false) => {};\r\n  /* #endregion */\r\n\r\n  render() {\r\n    const renderConditionaly = () => {\r\n      if (this.state.loading) {\r\n        return <Loading mainRoute={this.props.mainRoute} />;\r\n      }\r\n      switch (this.state.page) {\r\n        case -1: {\r\n          return (\r\n            <Start mainRoute={this.props.mainRoute} start={this.start}></Start>\r\n          );\r\n        }\r\n        case 0: {\r\n          return (\r\n            <Login\r\n              items={this.state.workersList}\r\n              searchNames={this.searchNames}\r\n              handleLogin={this.handleLogin}\r\n              settings={this.state.settings}\r\n              logoutChecked={this.state.logoutChecked}\r\n              loggingOut={this.props.logout}\r\n              fromPB={this.props.fromPB}\r\n              apiRoute={this.props.apiRoute}\r\n              mainRoute={this.props.mainRoute}\r\n              goBackToStart={this.goBackToStart}\r\n            />\r\n          );\r\n        }\r\n        case 1: {\r\n          return (\r\n            <Jobs\r\n              claimingOId={this.state.claimingOId}\r\n              claimingName={this.state.claimingUser}\r\n              searchJobs={this.searchJobs}\r\n              jobs={this.state.mainJobs}\r\n              adminJobs={this.state.adminJobs}\r\n              primaryJobs={this.state.primaryJobs}\r\n              secondaryJobs={this.state.secondaryJobs}\r\n              prejobs={this.state.prejobs}\r\n              postjobs={this.state.postjobs}\r\n              settings={this.state.settings}\r\n              handleJobClick={this.handleJobClick}\r\n              handleBack={this.handleBack}\r\n              handleLogOut={this.handleLogOut}\r\n              handleJobLoaded={this.handleJobLoaded}\r\n              menuIsOpen={this.props.menuSize == 240}\r\n              IsSitWorkGroup={this.state.IsSitWorkGroup}\r\n              apiRoute={this.props.apiRoute}\r\n              divideJobs={this.state.settings.DividJobs}\r\n              mainRoute={this.props.mainRoute}\r\n              primaryWorktypeIds={this.state.primaryWorktypeIds}\r\n            />\r\n          );\r\n        }\r\n        case 2: {\r\n          return (\r\n            <WorkTypes\r\n              claimingOId={this.state.claimingOId}\r\n              settings={this.props.settings}\r\n              workTypes={this.state.workTypes}\r\n              handleBack={this.handleBack}\r\n              handleWorkTypeClick={this.handleWorkTypeClick}\r\n              handleFullJob={this.handleFullJob}\r\n              jobCode={this.state.selectedJobCode}\r\n              claimingName={this.state.claimingUser}\r\n              menuIsOpen={this.props.menuSize == 240}\r\n              primaryWorktypeIds={this.state.primaryWorktypeIds}\r\n              secondaryWorktypeIds={this.state.secondaryWorktypeIds}\r\n              apiRoute={this.props.apiRoute}\r\n            />\r\n          );\r\n        }\r\n\r\n        case 3: {\r\n          return (\r\n            <JobItems\r\n              claimingOId={this.state.claimingOId}\r\n              searchJobs={this.searchJobs}\r\n              items={this.state.mainJobItems}\r\n              finishedItems={this.state.finishedItems}\r\n              totalProgress={this.state.totalProgress}\r\n              handleBack={this.handleBack}\r\n              handleSave={this.handleSaveClaim}\r\n              settings={this.props.settings}\r\n              canClaimWholeJob={this.state.canClaimWholeJob}\r\n              jobLevel={this.state.jobLevel}\r\n              claimingName={this.state.claimingUser}\r\n              menuIsOpen={this.props.menuSize == 240}\r\n              jobName={\r\n                this.state.adminWorkType\r\n                  ? this.state.adminWorkType.Name\r\n                  : this.state.JobTitle\r\n              }\r\n              apiRoute={this.props.apiRoute}\r\n            />\r\n          );\r\n        }\r\n        case 4: {\r\n          return (\r\n            <Summary\r\n              claimingOId={this.state.claimingOId}\r\n              totalPhyCalimgMinutes={this.state.totalPhyCalimgMinutes}\r\n              claimingName={\r\n                this.state.mainWorkersList.find(\r\n                  (x) => x.OId === this.state.claimingOId\r\n                ).Name\r\n              }\r\n              worktypeName={\r\n                this.state.isFullJob\r\n                  ? \"Full Job\"\r\n                  : this.state.adminWorkType\r\n                  ? \"Admin Work\"\r\n                  : this.state.workTypeName\r\n              }\r\n              jobName={\r\n                this.state.adminWorkType\r\n                  ? this.state.adminWorkType.Name\r\n                  : this.state.JobTitle\r\n              }\r\n              claimingItems={this.state.changedClaimingItems}\r\n              isAdminJob={this.state.isAdminJob}\r\n              handleBack={this.handleBack}\r\n              isFullJob={this.state.isFullJob}\r\n              handleSubmit={this.handleSubmitClaim}\r\n              settings={this.props.settings}\r\n              groupPercent={this.state.groupPercent}\r\n              mainPercent={this.state.totalProgress}\r\n              jobLevel={\r\n                this.state.isAdminJob\r\n                  ? true\r\n                  : this.props.fromPB\r\n                  ? this.props.jobLevel\r\n                  : this.state.mainWorkTypes.find(\r\n                      (x) => x.OId == this.state.worktypeId\r\n                    ).JobLevel\r\n              }\r\n              apiRoute={this.props.apiRoute}\r\n            />\r\n          );\r\n        }\r\n        default:\r\n          return <div></div>;\r\n      }\r\n    };\r\n    return (\r\n      <Fragment>\r\n        <FormDialog\r\n          logout={this.state.logoutClicked}\r\n          header={this.state.dialogHeader}\r\n          text={this.state.dialogText}\r\n          placeholer=\"Please describe\"\r\n          open={this.state.dialogOpen}\r\n          onCommentSave={this.state.dialogSave}\r\n          alert={this.state.alert}\r\n          doSaving={this.state.doSaving}\r\n        />\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#ebedf1\",\r\n            paddingRight: \"10px\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          {renderConditionaly()}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default CalimContainer;\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://www.aplnz.co.nz/\">\r\n        APL\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const emailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const passwordChange = (e) => {\r\n    if (e.keyCode === 13) {\r\n      handleSignInClicked();\r\n    }\r\n    setPassword(e.target.value);\r\n  };\r\n  const handleSignInClicked = () => {\r\n    props.handleSignIn(email, password);\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/APL.png\"}\r\n          alt=\"APL\"\r\n          style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}\r\n        />\r\n        <Typography component=\"h4\" variant=\"h4\">\r\n          Sign in\r\n        </Typography>\r\n        <div className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Username\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={(e) => emailChange(e)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onKeyUp={(e) => passwordChange(e)}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> \\\\*/}\r\n          <Button\r\n            // type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            type=\"text\"\r\n            onClick={handleSignInClicked}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </div>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ESPSelect from \"../../components/controls/ESPSelect\";\r\nimport ESPTextField from \"../../components/controls/ESPTextField\";\r\nimport ESPCheckbox from \"../../components/controls/ESPCheckbox\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport {\r\n  Avatar,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TableCell,\r\n  TableContainer,\r\n  TableBody,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Helper from \"../../components/logics/Helper\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Fragment } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass UserManagement extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loginUsers: [],\r\n      model: {},\r\n      changes: [],\r\n      changePassword: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.usermanagementInitData();\r\n  }\r\n  usermanagementInitData = () => {\r\n    Helper.apiPost(`${this.props.apiRoute}Account/InitClaimUserManagement`)\r\n      .then((r) => {\r\n        var data = r.data;\r\n        this.setState({\r\n          loginUsers: data.Item1,\r\n\r\n          model: {\r\n            Email: \"\",\r\n            Password: \"\",\r\n            EspUsers: data.Item2,\r\n            IsAdmin: false,\r\n            IsPublic: false,\r\n            IsDisabled: false,\r\n            EspUserId: \"\",\r\n            LoginId: \"\",\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Error in getting user management Data\");\r\n      });\r\n  };\r\n  onSave = () => {\r\n    if (!this.state.changePassword) {\r\n      Helper.apiPost(`${this.props.apiRoute}Account/Register`, {\r\n        Email: this.state.model.Email,\r\n        Password: this.state.model.Password,\r\n        ConfirmPassword: this.state.model.Password,\r\n        IsAdmin: this.state.model.IsAdmin,\r\n        IsPublic: this.state.model.IsPublic,\r\n        UserId: this.state.model.EspUserId,\r\n      })\r\n        .then((r) => {\r\n          alert(\"Successfuly added\");\r\n          //window.location.reload(false);\r\n          <Redirect to=\"/\" />;\r\n        })\r\n        .catch((err) => {\r\n          if (err.response) alert(\"Error in adding user\" + err.response.data);\r\n          else alert(\"Error in adding user\" + err);\r\n          window.location.href = \".\";\r\n        });\r\n    } else {\r\n      Helper.apiPost(`${this.props.apiRoute}Account/SetPassword`, {\r\n        Id: this.state.model.LoginId,\r\n        NewPassword: this.state.model.Password,\r\n        ConfirmPassword: this.state.model.Password,\r\n      })\r\n        .then((r) => {\r\n          alert(\"Successfuly Save\");\r\n          const model = this.state.model;\r\n\r\n          model.Email = \"\";\r\n          model.Password = \"\";\r\n          model.IsAdmin = false;\r\n          model.IsPublic = false;\r\n          model.IsDisabled = false;\r\n          model.EspUserId = \"\";\r\n          model.LoginId = \"\";\r\n          model.EspUsers.map((e) => {\r\n            e.Selected = false;\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            model,\r\n            changePassword: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          if (err.response)\r\n            alert(\"Error in saving new password\" + err.response.data);\r\n          else alert(\"Error in saving new password\" + err);\r\n        });\r\n    }\r\n  };\r\n  onChangePassword = (id) => {\r\n    const user = this.state.loginUsers.find((x) => x.Id == id);\r\n    const EspUsers = this.state.model.EspUsers;\r\n    if (!user.IsPublic) {\r\n      const espUser = EspUsers.find((x) => x.Value == user.WorkerId);\r\n      const espInx = EspUsers.indexOf(espUser);\r\n      espUser.Selected = true;\r\n\r\n      EspUsers.splice(espInx, 1, espUser);\r\n    }\r\n    const model = {\r\n      Email: user.Email,\r\n      IsAdmin: user.IsAdmin,\r\n      IsPublic: user.IsPublic,\r\n      EspUserId: user.WorkerId,\r\n      LoginId: id,\r\n      EspUsers,\r\n    };\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        changePassword: true,\r\n        model,\r\n      },\r\n      () => {\r\n        console.log(user.Email + \" \" + user.Name);\r\n      }\r\n    );\r\n  };\r\n\r\n  onPropertyChange = (event) => {\r\n    var model = this.state.model;\r\n\r\n    let value = \"\";\r\n    if (event.target.type !== undefined && event.target.type === \"checkbox\")\r\n      value = event.target.checked;\r\n    else value = event.target.value;\r\n\r\n    model[event.target.name] = value;\r\n    this.setState({\r\n      ...this.state,\r\n      model,\r\n    });\r\n  };\r\n  onSelectChange = (event) => {\r\n    var model = this.state.model;\r\n    var newSelectedId = event.target.value;\r\n    let newValues = [];\r\n    model[event.target.name].map((item) => {\r\n      if (item.Value === newSelectedId)\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Selected: true,\r\n        });\r\n      else\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Selected: false,\r\n        });\r\n    });\r\n\r\n    model[event.target.name] = newValues;\r\n    model[\"EspUserId\"] = newSelectedId;\r\n    this.setState({\r\n      ...this.state,\r\n      model,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <CardHeader\r\n            title=\"User Management\"\r\n            subheader=\"\"\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" style={{ backgroundColor: \"blue\" }}>\r\n                {\" \"}\r\n                U{\" \"}\r\n              </Avatar>\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={4} xs={12}>\r\n                <ESPTextField\r\n                  name=\"Email\"\r\n                  label=\"Email\"\r\n                  helptext=\"\"\r\n                  type=\"email\"\r\n                  onPropertyChange={this.onPropertyChange}\r\n                  value={this.state.model.Email}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={12}>\r\n                <ESPTextField\r\n                  name=\"Password\"\r\n                  label=\"Password\"\r\n                  helptext=\"\"\r\n                  type=\"password\"\r\n                  onPropertyChange={this.onPropertyChange}\r\n                  value={this.state.model.Password}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={12}>\r\n                <ESPSelect\r\n                  name=\"EspUsers\"\r\n                  label=\"User Id in ESP\"\r\n                  helptext=\"\"\r\n                  items={this.state.model.EspUsers}\r\n                  onPropertyChange={this.onSelectChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={6}>\r\n                <ESPCheckbox\r\n                  name=\"IsAdmin\"\r\n                  label=\"Is admin user\"\r\n                  checked={this.state.model.IsAdmin}\r\n                  onPropertyChange={this.onPropertyChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={6}>\r\n                <ESPCheckbox\r\n                  name=\"IsPublic\"\r\n                  label=\"Is Public User\"\r\n                  checked={this.state.model.IsPublic}\r\n                  onPropertyChange={this.onPropertyChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={12} mx=\"auto\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  // className={classes.saveBtn}\r\n                  size=\"large\"\r\n                  onClick={this.onSave}\r\n                  startIcon={<SaveIcon />}\r\n                  disabled={\r\n                    !(\r\n                      this.state.model.Email &&\r\n                      this.state.model.Password &&\r\n                      (this.state.model.EspUserId || this.state.model.IsPublic)\r\n                    )\r\n                  }\r\n                >\r\n                  {this.state.changePassword ? \"Save Password\" : \"Add User\"}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item lg={12}>\r\n                <hr />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Hidden only={[\"xs\"]}>\r\n                <Grid item lg={4} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>Email</h4>\r\n                </Grid>\r\n                <Grid item lg={4} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>ESP User</h4>\r\n                </Grid>\r\n                <Grid item lg={1} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>Admin</h4>\r\n                </Grid>\r\n                <Grid item lg={1} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>Public User</h4>\r\n                </Grid>\r\n                <Grid item lg={2} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>Change Password</h4>\r\n                </Grid>\r\n              </Hidden>\r\n\r\n              <Grid item lg={12} xs={12}>\r\n                <hr />\r\n              </Grid>\r\n              {this.state.loginUsers.map((row) => (\r\n                <Fragment>\r\n                  <Grid item lg={4} xs={12}>\r\n                    <Hidden only={[\"sm\", \"lg\", \"xl\", \"md\"]}>Email: </Hidden>\r\n                    {row.Email}\r\n                  </Grid>\r\n                  <Grid item lg={4} xs={12}>\r\n                    <Hidden only={[\"sm\", \"lg\", \"xl\", \"md\"]}>Name: </Hidden>\r\n                    {row.Name}\r\n                  </Grid>\r\n                  <Grid item lg={1} xs={12}>\r\n                    <Hidden only={[\"sm\", \"lg\", \"xl\", \"md\"]}>Admin:</Hidden>\r\n                    {row.IsAdmin ? <CheckIcon /> : <CloseIcon />}\r\n                  </Grid>\r\n                  <Grid item lg={1} xs={12}>\r\n                    <Hidden only={[\"sm\", \"lg\", \"xl\", \"md\"]}>Public:</Hidden>\r\n                    {row.IsPublic ? <CheckIcon /> : <CloseIcon />}\r\n                  </Grid>\r\n                  <Grid item lg={2} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      // className={classes.saveBtn}\r\n                      size=\"medium\"\r\n                      onClick={() => this.onChangePassword(row.Id)}\r\n                      startIcon={<SaveIcon />}\r\n                    >\r\n                      Change Password\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid lg={12} xs={12}>\r\n                    <hr />\r\n                  </Grid>\r\n                </Fragment>\r\n              ))}\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default UserManagement;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport DrawerContainer from \"./components/DrawerContainer\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Performance from \"./pages/Performance\";\r\nimport Settings from \"./pages/AdminSettings/AdminSettingsContainer\";\r\nimport ProductionBoard from \"./pages/ProductionBoard/ProductionBoardContainer\";\r\nimport ClaimContainer from \"./pages/Claim/ClaimContainer\";\r\nimport Helper from \"./components/logics/Helper\";\r\nimport SignIn from \"./pages/SignIn\";\r\nimport UserManagement from \"./pages/UserManagement\";\r\nimport Loading from \"../src/pages/loading\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      step: 0,\r\n      page: -1,\r\n      fromPB: false,\r\n      logout: false,\r\n      settings: null,\r\n      texts: [],\r\n      isAdmin: false,\r\n      loggedIn: false,\r\n      isPublic: false,\r\n      loading: true,\r\n      claimingId: 0,\r\n      workerName: \"\",\r\n      joblevel: false,\r\n      jobCode: \"\",\r\n      claims: {\r\n        user_t: \"\",\r\n        a: false,\r\n        p: false,\r\n        w: 0,\r\n        pa: 0,\r\n      },\r\n      menuSize: 240,\r\n      mainRoute: \"\",\r\n      apiRoute: \"\",\r\n      localSettings: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"data.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            localSettings: json,\r\n            mainRoute: json.route,\r\n            apiRoute: json.apiRoute,\r\n          },\r\n          () => {\r\n            if (new Cookies().get(\"_claim\")) this.getServerSettings();\r\n          }\r\n        );\r\n      });\r\n  }\r\n  setSettings = (settings) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loggedIn: true,\r\n      settings: settings,\r\n    });\r\n  };\r\n  getServerSettings = () => {\r\n    try {\r\n      var url = `${this.state.apiRoute}AdminSettings/GetInfo`;\r\n      var claims = new Cookies().get(\"_claim\");\r\n      Helper.apiPost(url, claims, \"\")\r\n        .then((response) => {\r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              loggedIn: true,\r\n              settings: JSON.parse(response.data),\r\n              claims,\r\n            },\r\n            () => {\r\n              this.setState({\r\n                ...this.state,\r\n                loading: false,\r\n              });\r\n            }\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          if (err.response)\r\n            alert(\r\n              `Error in calling ESP (Admin Settings) API- ${err.response.data}`\r\n            );\r\n          else alert(`Error in calling ESP (Admin Settings) API- ${err}`);\r\n        });\r\n    } catch (err) {\r\n      alert(`Error in calling ESP (Admin Settings) API- ${err}`);\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n  setClaimingId = (id) => {\r\n    this.setState({\r\n      ...this.state,\r\n      claimingId: id,\r\n    });\r\n  };\r\n\r\n  changeStep = (j, texts, isAdmin = false) => {\r\n    this.setState({\r\n      ...this.state,\r\n      step: j,\r\n      texts,\r\n      isAdmin,\r\n    });\r\n  };\r\n  changeMenuSize = () => {\r\n    if (this.state.menuSize === 10)\r\n      this.setState({\r\n        ...this.state,\r\n        menuSize: 240,\r\n      });\r\n    else\r\n      this.setState({\r\n        ...this.state,\r\n        menuSize: 10,\r\n      });\r\n  };\r\n  handleSignIn = (email, password) => {\r\n    var response = Helper.setAsyncApiToken(\r\n      email,\r\n      password,\r\n      this.state.apiRoute\r\n    );\r\n    response\r\n      .then((r) => {\r\n        if (r && r.data && r.data.access_token) {\r\n          const model = {\r\n            user_t: r.data.access_token,\r\n            a: r.data.a,\r\n            p: r.data.p,\r\n            w: r.data.w,\r\n            pa: r.data.pa,\r\n          };\r\n          new Cookies().set(\"_claim\", JSON.stringify(model), { path: \"/\" });\r\n\r\n          this.getServerSettings();\r\n        }\r\n      })\r\n      .catch(function (response) {\r\n        if (response && response.response && response.response.status === 400)\r\n          alert(\"Username and password are not match\");\r\n        else alert(\"Error in get security code\" + response);\r\n        return null;\r\n      });\r\n  };\r\n  claimOnPB = (jid, wid, jl, jobCode) => {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        step: 1,\r\n        page: 0,\r\n        pbWorkTypeId: wid,\r\n        pbJobId: jid,\r\n        fromPB: true,\r\n        joblevel: jl,\r\n        jobCode,\r\n      },\r\n      () => {\r\n        this.props.history.push(`${this.state.mainRoute}claimpb`);\r\n      }\r\n    );\r\n  };\r\n  logoutFromPB = () => {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        step: 1,\r\n        page: -1,\r\n        fromPB: false,\r\n        logout: true,\r\n      },\r\n      () => {\r\n        this.props.history.push(`${this.state.mainRoute}claim`);\r\n      }\r\n    );\r\n  };\r\n  FadingRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n      <Route {...rest} render={(routeProps) => <Component {...routeProps} />} />\r\n    );\r\n  };\r\n  render() {\r\n    const role = this.state.claims.a ? \"a\" : \"u\";\r\n    const isPublic = this.state.claims.p;\r\n    const w = this.state.claims.w;\r\n    return (\r\n      <div style={{ backgroundColor: \"#ebedf1\" }}>\r\n        {this.state.loading && this.state.loggedIn && (\r\n          <Loading mainRoute={this.state.mainRoute} />\r\n        )}\r\n        {!this.state.loggedIn && <SignIn handleSignIn={this.handleSignIn} />}\r\n        {this.state.loggedIn && role === \"u\" && (\r\n          <div style={{ display: \"flex\" }}>\r\n            <DrawerContainer\r\n              step={this.state.step}\r\n              texts={this.state.texts}\r\n              isAdmin={this.state.isAdmin}\r\n              isSystemAdmin={false}\r\n              ShowProductionBoard={this.state.settings.PBShowProductionBoard}\r\n              menuSize={this.state.menuSize}\r\n              changeMenuSize={this.changeMenuSize}\r\n            />\r\n            <main\r\n              style={{\r\n                flexGrow: 1,\r\n                paddingLeft: \"30px\",\r\n                paddingRight: \"10px\",\r\n                paddingTop: \"80px\",\r\n              }}\r\n            >\r\n              {/* <FadingRoute path=`` component={Something} /> */}\r\n\r\n              {/* <Route\r\n                path={`${this.state.mainRoute}`}\r\n                render={(props) => (\r\n                  <ClaimContainer\r\n                    public={isPublic}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    settings={this.state.settings}\r\n                    changeStep={this.changeStep}\r\n                    workerId={w}\r\n                    fromPB={this.state.fromPB}\r\n                    logout={this.state.logout}\r\n                    jobId={this.state.pbJobId}\r\n                    workTypeId={this.state.pbWorkTypeId}\r\n                    page={this.state.page}\r\n                    setClaimingId={this.setClaimingId}\r\n                    menuSize={this.state.menuSize}\r\n                    jobLevel={this.state.joblevel}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              /> */}\r\n              <Route\r\n                path={`${this.state.mainRoute}claim`}\r\n                render={(props) => (\r\n                  <ClaimContainer\r\n                    public={isPublic}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    fromPB={false}\r\n                    logout={this.state.logout}\r\n                    jobId={this.state.pbJobId}\r\n                    workTypeId={this.state.pbWorkTypeId}\r\n                    changeStep={this.changeStep}\r\n                    workerId={w}\r\n                    menuSize={this.state.menuSize}\r\n                    page={this.state.page}\r\n                    jobLevel={this.state.joblevel}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}claimpb`}\r\n                render={(props) => (\r\n                  <ClaimContainer\r\n                    public={isPublic}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    fromPB={this.state.fromPB}\r\n                    logout={this.state.logout}\r\n                    jobId={this.state.pbJobId}\r\n                    workTypeId={this.state.pbWorkTypeId}\r\n                    jobLevel={this.state.joblevel}\r\n                    changeStep={this.changeStep}\r\n                    workerId={w}\r\n                    menuSize={this.state.menuSize}\r\n                    page={this.state.page}\r\n                    jobCode={this.state.jobCode}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}productionBoard`}\r\n                render={(props) => (\r\n                  <ProductionBoard\r\n                    settings={this.state.settings}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    claimingId={this.state.claimingId}\r\n                    claimOnPB={this.claimOnPB}\r\n                    logoutFromPB={this.logoutFromPB}\r\n                  />\r\n                )}\r\n              />\r\n            </main>\r\n          </div>\r\n        )}\r\n        {this.state.loggedIn && role === \"a\" && (\r\n          <div style={{ display: \"flex\" }}>\r\n            <DrawerContainer\r\n              step={this.state.step}\r\n              texts={this.state.texts}\r\n              isAdmin={this.state.isAdmin}\r\n              isSystemAdmin={true}\r\n              menuSize={this.state.menuSize}\r\n              changeMenuSize={this.changeMenuSize}\r\n            />\r\n            <main\r\n              style={{\r\n                flexGrow: 1,\r\n                paddingLeft: \"30px\",\r\n                paddingRight: \"0px\",\r\n                paddingTop: \"80px\",\r\n                marginLeft: this.state.menuSize === 0 ? \"-100px\" : \"0px\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  drawerPaper: { width: this.state.menuSize },\r\n                }}\r\n              />\r\n              {/* <Route path={`${this.state.mainRoute}`} component={Welcome} /> */}\r\n              <Route\r\n                path={`${this.state.mainRoute}claim`}\r\n                render={(props) => (\r\n                  <ClaimContainer\r\n                    public={false}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    changeStep={this.changeStep}\r\n                    isUser={false}\r\n                    fromPB={false}\r\n                    logout={this.state.logout}\r\n                    jobId={this.state.pbJobId}\r\n                    workTypeId={this.state.pbWorkTypeId}\r\n                    page={this.state.page}\r\n                    workerId=\"0\"\r\n                    menuSize={this.state.menuSize}\r\n                    jobLevel={this.state.joblevel}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}claimpb`}\r\n                render={(props) => (\r\n                  <ClaimContainer\r\n                    public={false}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    changeStep={this.changeStep}\r\n                    isUser={false}\r\n                    fromPB={this.state.fromPB}\r\n                    logout={this.state.logout}\r\n                    jobId={this.state.pbJobId}\r\n                    workTypeId={this.state.pbWorkTypeId}\r\n                    jobLevel={this.state.joblevel}\r\n                    page={this.state.page}\r\n                    workerId=\"0\"\r\n                    menuSize={this.state.menuSize}\r\n                    jobCode={this.state.jobCode}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}settings`}\r\n                render={(props) => (\r\n                  <Settings\r\n                    changeStep={this.changeStep}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    getServerSettings\r\n                    onChangeSettings={this.setSettings}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}performanceState`}\r\n                component={Performance}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}users`}\r\n                render={(props) => (\r\n                  <UserManagement\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}productionBoard`}\r\n                render={(props) => (\r\n                  <ProductionBoard\r\n                    claimingId={this.state.claimingId}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    claimOnPB={this.claimOnPB}\r\n                    logoutFromPB={this.logoutFromPB}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                  />\r\n                )}\r\n              />\r\n            </main>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter, withRouter } from \"react-router-dom\";\r\n\r\nconst AppWithRouter = withRouter(App);\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <AppWithRouter />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}