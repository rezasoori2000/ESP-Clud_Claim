{"version":3,"sources":["components/controls/VerticalStepper.jsx","components/DrawerContainer.js","pages/Performance.jsx","components/controls/ESPSelect.jsx","components/controls/ESPTextField.jsx","components/controls/ESPCheckbox.jsx","pages/AdminSettings/AdminSettingsPage.jsx","components/logics/Helper.jsx","pages/AdminSettings/AdminSettingsContainer.jsx","components/controls/IosSwitch.jsx","components/controls/ItemsList.jsx","components/controls/FullScreenDialog.jsx","pages/loading.js","pages/ProductionBoard/ProductionBoardPage.jsx","pages/ProductionBoard/ProductionBoardContainer.jsx","components/controls/Styles.jsx","pages/Claim/Login.jsx","components/controls/CircularProgressWithLabel.jsx","components/logics/ClaimLogic.jsx","pages/Claim/WorkTypes.jsx","pages/Claim/JobItems.jsx","components/controls/Barchart.jsx","pages/Claim/Summary.jsx","pages/Claim/DividedJobs.jsx","pages/Claim/Jobs.jsx","pages/Claim/Start.jsx","components/logics/Login.jsx","components/controls/FormDialog.jsx","pages/Claim/ClaimContainer.jsx","pages/SignIn.jsx","pages/UserManagement/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","backgroundColor","color","fontSize","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","getLabel","label","text","length","getLabels","p","index","adminJon","texts","VerticalStepper","props","classes","steps","step","className","Stepper","activeStep","orientation","map","isAdmin","Step","StepLabel","Typography","style","StepContent","Paper","square","elevation","DrawerContainer","drawerWidth","menuSize","createStyles","listItemText","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","background","menuButton","toolbar","mixins","drawerPaper","content","flexGrow","link","textDecoration","whiteColor","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","Cookies","height","Divider","List","textAlign","src","alt","isSystemAdmin","to","ListItem","ListItemIcon","ListItemText","primary","Button","variant","size","onClick","set","cookieId","path","document","cookie","window","location","reload","href","mainRoute","startIcon","ShowProductionBoard","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Grid","container","item","lg","Hidden","only","changeMenuSize","fontWeight","textShadow","paddingLeft","process","smUp","implementation","Drawer","anchor","open","onClose","paper","ModalProps","keepMounted","xsDown","Performance","ESPSelect","name","helptext","onPropertyChange","items","FormControl","fullWidth","Select","labelId","id","value","filter","x","Selected","Value","onChange","type","MenuItem","e","Text","FormHelperText","ESPTextField","OutlinedInput","ESPCheckbox","memo","checked","row","FormControlLabel","control","Checkbox","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","AdminSettingsPage","minWidth","flexWrap","textField","bullet","margin","transform","title","pos","saveBtn","saveBtnTop","useEffect","scrollTo","undefined","adminSettings","Groups","Card","CardHeader","subheader","avatar","Avatar","onSave","CardContent","TextField","disabled","placeholder","helperText","ServerAddress","InputLabelProps","shrink","Username","DatabaseName","Password","Factories","onSelectChange","AllowClaimingOutOfFactoryWork","IncrementPercentage","ShowingCode","TrackLateLogin","LateAllowance","multiple","i","onGroupsSelectChange","input","renderValue","selected","join","JobListOrdering","TrackEarlyLeave","EarlyLeaveAllowance","ShowStandardTime","NoClaimAllowance","HidePreProductionJobs","DividJobs","TrackNotLoggedOut","PBShowProductionBoard","PBHideOutOfFactoryWorkTypes","ClaimOnPB","PBTitleColumn","PBCustomerColumn","PBHourColumn","PBDueDateColumn","ShowRework","ShowColour","ShowQty","ShowSalesPerson","ShowEstimator","PBJobOrders","Z2A","PSShowPerformanceStates","PSStatisticChart","PSEnableIndividual","PSStatisticGroup","PSPerformanceChart","mx","Helper","getLocalToken","a","apiGetClaimName","claim","cookies","claims","get","user_t","setAsyncApiToken","username","password","route","grant_type","withCredentials","data","Object","keys","key","encodeURIComponent","headers","axios","post","apiPost","url","errorName","defaults","Authorization","Accept","apiGet","alert","fetch","then","res","json","timeConvert","num","hours","rhours","Math","floor","toString","minutes","rminutes","round","Component","AdminSettingsContainer","handelPropertyChange","event","adSettings","state","target","changes","push","setState","newSelectedId","newValues","includes","Disabled","Group","n","getGroupsByAPI","apiRoute","captureIPAddress","method","ip","oid","response","oldAdminSettings","JSON","parse","catch","err","getAdminSettingsByAPI","onChangeSettings","saveAdminSettingsByAPI","history","user","this","changeStep","IOSSwitchMain","styled","Switch","focusVisibleClassName","disableRipple","transitionDuration","palette","mode","opacity","border","grey","boxSizing","borderRadius","transition","transitions","create","duration","IOSSwitch","maxWidth","inline","ItemsList","alignItems","ListItemAvatar","Author","Resource","secondary","Fragment","component","Date","IsBold","Comment","flex","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","StyledTableCell","withStyles","head","common","black","white","body","TableCell","StyledTableRow","action","hover","TableRow","handleClose","Dialog","fullScreen","TransitionComponent","header","uls","textList","TableContainer","sm","xs","Table","table","TableHead","TableBody","scope","align","Name","Std","Phy","Loading","ProductionBoardPage","openDialog","setOpenDialog","note","setNote","searchVal","setsearchVal","jobs","setJobs","wt","setWt","pie","setPie","dialogOpen","setDialogOpen","preItems","setPreItems","currentJob","setCurrentJob","createMuiTheme","overrides","MuiTooltip","tooltip","defaultLabelStyle","fontFamily","beginTr","code","wortTYpes","chuncked","myArray","chunk_size","arrayLength","tempArray","myChunk","slice","chunkArray","IsPreProduction","htd","trs","element","section","j","Progress","Tooltip","ChartObj","t","placement","radius","PieChart","defaultProps","segmentsShift","dataEntry","labelStyle","getWtItem","ClaimOnPBStting","claimOnPB","w","paddingRight","verticalAlign","r","Oid","JobLevel","Code","InputLabel","htmlFor","float","sx","InputBase","ml","txt","filterJobs","Title","toLowerCase","Customer","md","logoutFromPB","s","settings","WorkTypes","Comments","TitleBackgroundColor","TitleColor","Hours","Due","UnitQty","SalesPerson","Estimator","Colour","colSpan","aria-labelledby","DialogTitle","DialogContent","DialogContentText","paddingTop","DialogActions","ProductionBoardContainer","getProductionBoardInfoByAPI","loaded","jid","wid","jl","jobCode","gridSearchStyles","search","shape","fade","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","bolding","cursor","zIndex","boxBolding","boxShadow","borderBottom","borderRight","Login","logoutChecked","logout","useHistory","personList","loggingOut","IsLoggedIn","IsOnLeave","LastClaimTime","setTimeout","goBackToStart","fromPB","pathname","alignContent","Input","startAdornment","InputAdornment","searchNames","Box","bgcolor","handleLogin","OId","CircularProgressWithLabel","CircularProgress","top","left","bottom","right","CircularStatic","progress","Loginlogics","getJobItemsFromApi","jobId","worktypeId","workerId","WorkTypeId","message","getJobsOfWorkerFromApi","jobStage","siteWork","submitClaimInAPI","jobItems","groupPercent","comment","submitFullJobClaimInAPI","submitAdminJobClaimInAPI","claimingOId","GetClaimedByAPI","worktypId","GetPerfStatByAPI","from","Worktypes","workTypes","setSearchItems","setSearcVal","handleWorktypeNoteClicked","ClaimLogic","handleBack","menuIsOpen","claimingName","primaryWorktypeIds","sort","b","CategoryOrder","CategoryName","handleWorkTypeClick","clickable","stopPropagation","secondaryWorktypeIds","AirbnbSlider","thumb","active","track","valueLabel","rail","Slider","AirbnbThumbComponent","JobItems","mainJobItems","checkChange","Progress100","Main_Progress100","handleChange","val","inx","parseInt","changed","groupSliderValue","handleBtn","roundNumber","handleComplete","searchItems","jItems","clearSearch","some","totalProgress","v","g","ceil","btn","reduce","allItemsV6","StdTime","valuetext","worktypeName","handleSave","jobLevel","finishedItems","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","m","marginButtm","marginButtom","ThumbComponent","getAriaValueText","valueLabelDisplay","marks","min","max","onChangeCommitted","handleGroupedChanged","handleChanged","ItemNumber","CardActions","withTheme","Root","flexDirection","restProps","Label","whiteSpace","Barchart","Columns","valueField","argumentField","rootComponent","labelComponent","textarea","overflow","resize","minHight","lineHeight","Summary","setComment","changedItems","claimingItems","totalminute","totalPhyCalimgMinutes","chartData","space","String","fromCharCode","isFullJob","isAdminJob","handleSubmit","jobName","mainPercent","country","actual","std","TextareaAutosize","rowsMin","DividedJobs","defaultExpanded","loading","JobStageOrder","activeButton","JobStageName","handleJobClick","Note","Jobs","prototype","addDays","days","date","valueOf","setDate","getDate","IsSitWorkGroup","stage","setactiveButton","setSiteJobs","loadedJobs","setLoadedJobs","setLoading","perfstat","setPerfstat","setPerfstatReady","dateFrom","setDateFrom","dateTo","setDateTo","setChartData","primaryJobs","setPrimaryJobs","secondaryJobs","setSecondaryJobs","ExampleCustomInput","getPerfStatAPI","fromBtn","toLocaleDateString","result","PointName","Actual","divideJobs","pj","sj","handleJobsButtonClicked","jobType","values","Item1","handleJobLoaded","handleLogOut","HidePostProductionJobs","adminJobs","customInput","Start","justify","minHeight","backgroundImage","backgroundPosition","backgroundRepeat","start","getListOfWorkersFromApi","mainWorkersList","saveLoginInAPI","saveLogoutAPI","getAsyncSettingsApi","authStr","worker","trackLateLogin","lateLoginTrack","currentTime","tempTime","StartTime","startTime","setMinutes","getMinutes","trackEarlyLeave","earlyLeaveAllowance","EndTime","endTime","FormDialog","allow","setAllow","doSaving","onCommentSave","autoFocus","placeholer","onKeyDown","CalimContainer","getPBJobItems","labelText","LabelText","WorkType","workTypeName","canClaimWholeJob","page","JobTitle","pageId","loadWorkersList","workersList","find","loggedInWorkerClick","console","log","login","Skills","Primary","Secondary","claimingUser","claiminWorker","IsSitework","Stage","workTypeId","goToJobsPage","sid","isOnLeave","dialogHeader","dialogText","dialogSave","setClaimingId","checkWorkerLateLogin","logoutClicked","LastDayNotLoggedOut","Successful","Message","findIndex","checkWorkerEarlyLeave","newJobs","stateJobs","mainStateJobs","mainJobs","obj","setWorkerLOgout","clearSearchWorkTypes","mainWorkTypes","workType","searchJobs","mainAdminJobs","handleFullJob","Item2","selectedAdminJob","adminWorkType","selectedJob","selectedJobCode","handleSaveClaim","changedClaimingItems","handleSubmitClaim","role","public","handleFullSubmitClaim","claimingFullJob","prejobs","postjobs","renderConditionaly","Copyright","Link","getFullYear","main","form","submit","SignIn","email","setEmail","setPassword","handleSignInClicked","handleSignIn","Container","noValidate","required","autoComplete","emailChange","onKeyUp","keyCode","passwordChange","mt","UserManagement","usermanagementInitData","loginUsers","model","Email","EspUsers","IsAdmin","IsPublic","IsDisabled","EspUserId","LoginId","changePassword","Id","NewPassword","ConfirmPassword","UserId","onChangePassword","espUser","WorkerId","espInx","indexOf","splice","App","setSettings","loggedIn","getServerSettings","claimingId","access_token","pa","stringify","status","pbWorkTypeId","pbJobId","joblevel","FadingRoute","rest","render","routeProps","isPublic","workerName","localSettings","ClaimContainer","isUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppWithRouter","withRouter","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.41844f9d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport StepContent from \"@material-ui/core/StepContent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: \"#3a3d57\",\r\n    color: \"#fff!important\",\r\n    fontSize: \"0.7rem\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"Start\",\r\n    \"Login\",\r\n    \"Job Selection\",\r\n    \"WorkType Selection\",\r\n    \"Claiming\",\r\n    \"Finish\",\r\n  ];\r\n}\r\n\r\n// function getStepContent(index, p) {\r\n//   return \"\";\r\n//   switch (index) {\r\n//     case 0:\r\n//       return \"\";\r\n//     case 1:\r\n//       return \"\";\r\n//     case 2:\r\n//       return ``;\r\n//     default:\r\n//       return \"\";\r\n//   }\r\n// }\r\nfunction getLabel(label, text) {\r\n  if (text && text.length > 1) return `(${text})`;\r\n  //return label;\r\n}\r\nfunction getLabels(p, label, index, adminJon) {\r\n  switch (index) {\r\n    case 1:\r\n      return getLabel(label, p.texts[0]);\r\n    case 2:\r\n      return getLabel(label, p.texts[1]);\r\n    case 3:\r\n      return getLabel(label, p.texts[2]);\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nconst VerticalStepper = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    props.step > 0 && (\r\n      <div className={classes.root}>\r\n        <Stepper\r\n          activeStep={props.step - 1}\r\n          orientation=\"vertical\"\r\n          className={classes.root}\r\n        >\r\n          {steps.map(\r\n            (label, index) =>\r\n              !(props.isAdmin && index === 3) && (\r\n                <Step key={label}>\r\n                  <StepLabel>\r\n                    <Typography style={{ color: \"white\", fontSize: \"0.8rem\" }}>\r\n                      {label}\r\n                      <br />\r\n                      <span> {getLabels(props, label, index)}</span>\r\n                    </Typography>\r\n                  </StepLabel>\r\n                  <StepContent>\r\n                    <Typography></Typography>\r\n                    <div className={classes.actionsContainer}>\r\n                      <div></div>\r\n                    </div>\r\n                  </StepContent>\r\n                </Step>\r\n              )\r\n          )}\r\n        </Stepper>\r\n        {props.step - 1 === steps.length && (\r\n          <Paper square elevation={0} className={classes.resetContainer}>\r\n            <Typography>All steps completed - you&apos;re finished</Typography>\r\n          </Paper>\r\n        )}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default VerticalStepper;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport VerticalStepper from \"./controls/VerticalStepper\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport FormatIndentDecreaseIcon from \"@mui/icons-material/FormatIndentDecrease\";\r\nimport FormatIndentIncreaseIcon from \"@mui/icons-material/FormatIndentIncrease\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nconst DrawerContainer = (props) => {\r\n  const drawerWidth = props.menuSize;\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      listItemText: {\r\n        fontSize: \"0.8rem\",\r\n      },\r\n\r\n      root: {\r\n        display: \"flex\",\r\n      },\r\n      drawer: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n        },\r\n      },\r\n      appBar: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          width: `calc(100% - ${drawerWidth}px)`,\r\n          marginLeft: drawerWidth,\r\n          background: \"#ebedf1\",\r\n          color: \"Black\",\r\n        },\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          display: \"none\",\r\n        },\r\n      },\r\n      // necessary for content to be below app bar\r\n      toolbar: theme.mixins.toolbar,\r\n      drawerPaper: {\r\n        width: drawerWidth,\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n      },\r\n      link: {\r\n        textDecoration: \"none\",\r\n        color: \"#fff\",\r\n      },\r\n      whiteColor: {\r\n        color: \"#fff\",\r\n      },\r\n    })\r\n  );\r\n  const classes = useStyles();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const cookies = new Cookies();\r\n  //const { forwardRef, useRef, useImperativeHandle } = React;\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div\r\n      style={{ backgroundColor: \"#242845\", height: \"100%\", fontSize: \"0.7rem\" }}\r\n    >\r\n      <div className=\"theme.mixins.toolbar, drawerPaper: 200\" />\r\n      <Divider />\r\n      <List className=\"mt-5\">\r\n        <div style={{ textAlign: \"center\", background: \"#000\" }}>\r\n          <img src=\"./favicon.png\" alt=\"APL\" />\r\n        </div>\r\n        <br />\r\n        <br />\r\n\r\n        <br />\r\n        {props.isSystemAdmin && (\r\n          <div>\r\n            <Link\r\n              to=\"./claim\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"1\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <InboxIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Claim\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                >\r\n                  <h4>Claim</h4>\r\n                </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n            <Link\r\n              to=\"./settings\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"2\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <SettingsIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Admin Settings\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <Link\r\n              to=\"./ProductionBoard\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"2\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <SettingsIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Production&nbsp;Board\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <Link\r\n              to=\"./users\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"2\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <SettingsIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"User&nbsp;Management\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <VerticalStepper\r\n              step={props.step}\r\n              texts={props.texts}\r\n              isAdmin={props.isAdmin}\r\n            />\r\n            <Divider />\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              style={{ color: \"#fff\", marginTop: \"30px\" }}\r\n              onClick={() => {\r\n                new Cookies().set(props.cookieId, null, { path: \"/\" });\r\n                document.cookie =\r\n                  props.cookieId +\r\n                  \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n                window.location.reload(true);\r\n                window.location.href = `${props.mainRoute}`;\r\n              }}\r\n              startIcon={<MeetingRoomIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        )}\r\n        {!props.isSystemAdmin && (\r\n          <div>\r\n            <Link\r\n              to=\"./claim\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"1\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <InboxIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Claim\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                >\r\n                  <h4>Claim</h4>\r\n                </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n            {props.ShowProductionBoard && (\r\n              <Link\r\n                to=\"./ProductionBoard\"\r\n                style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n              >\r\n                <ListItem button key=\"2\">\r\n                  <ListItemIcon style={{ color: \"#fff\" }}>\r\n                    <SettingsIcon />{\" \"}\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Production&nbsp;Board\"\r\n                    classes={{ primary: classes.listItemText }}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            )}\r\n            <VerticalStepper\r\n              step={props.step}\r\n              texts={props.texts}\r\n              isAdmin={props.isAdmin}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              color=\"white\"\r\n              style={{ color: \"#fff\", marginTop: \"30px\" }}\r\n              onClick={() => {\r\n                new Cookies().set(props.cookieId, null, { path: \"/\" });\r\n                document.cookie =\r\n                  props.cookieId +\r\n                  \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n                window.location.reload(true);\r\n                window.location.href = `${props.mainRoute}`;\r\n              }}\r\n              startIcon={<MeetingRoomIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  // const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div>\r\n      {/* {setStep(props.step)} */}\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar style={{ backgroundColor: \"#fff\", color: \"black\" }}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={1}>\r\n              <Hidden only={\"xs\"}>\r\n                <Button\r\n                  onClick={() => {\r\n                    props.changeMenuSize();\r\n                  }}\r\n                  startIcon={\r\n                    props.menuSize === 240 ? (\r\n                      <FormatIndentDecreaseIcon />\r\n                    ) : (\r\n                      <FormatIndentIncreaseIcon />\r\n                    )\r\n                  }\r\n                ></Button>\r\n              </Hidden>\r\n            </Grid>\r\n            <Grid item lg={10}>\r\n              <p>\r\n                <span\r\n                  style={{\r\n                    fontSize: \"20px\",\r\n                    fontWeight: \"bolder\",\r\n                    textShadow: \"1px 2px 3px #666\",\r\n                    color: \"#000000\",\r\n                    background: \"#FFFFFF\",\r\n                  }}\r\n                >\r\n                  ESPCC\r\n                </span>\r\n                <span style={{ paddingLeft: 10 }}>\r\n                  ({process.env.REACT_APP_BUILDMAJOR}.\r\n                  {process.env.REACT_APP_BUILDMINOR}.\r\n                  {process.env.REACT_APP_BUILDREVISION}) - {props.cookieId}\r\n                </span>\r\n              </p>\r\n            </Grid>\r\n            <Grid item lg={1}></Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            // container={container}\r\n            variant=\"temporary\"\r\n            anchor=\"left\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true,\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawerContainer;\r\n","import React from 'react';\r\n\r\nconst Performance=()=>(\r\n    <div>\r\n        <h1>the Performance page</h1>\r\n    </div>\r\n);\r\n\r\nexport default Performance;\r\n","import React from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nconst ESPSelect = ({ name, label, helptext,onPropertyChange, items }) => {\r\n    if (!items)\r\n        return <div></div>\r\n    else\r\n        return (\r\n\r\n            <FormControl fullWidth variant=\"outlined\" style={{ marginBottom: 20 }}>\r\n                {label}\r\n                <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id={name}\r\n                    value={items && items.length > 0 ? (items.filter(x => x.Selected).length>0? items.filter(x => x.Selected)[0].Value: -1) : -1}\r\n                    onChange={onPropertyChange}\r\n                    name={name}\r\n                    type='select'\r\n                >\r\n                    <MenuItem value=\"-1\">\r\n                        <em>Select</em>\r\n                    </MenuItem>\r\n                    {items && items.map(e => <MenuItem key={e.Value} value={e.Value}>{e.Text}</MenuItem>)}\r\n                </Select>\r\n                <FormHelperText>{helptext}</FormHelperText>\r\n            </FormControl>\r\n        )\r\n}\r\nexport default ESPSelect;","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\n\r\n\r\nconst ESPTextField =({name,label,helptext,value,type='text',onPropertyChange})=>{\r\n    \r\n    return(\r\n        <FormControl variant=\"outlined\"  fullWidth style={{marginBottom:20}} >\r\n        {label}\r\n        <OutlinedInput \r\n            value={value||''}\r\n            //onChange={handleChange}\r\n            name={name}\r\n            type={type}\r\n            id={name}\r\n            label={label}\r\n            onChange={onPropertyChange}\r\n            fullWidth\r\n        /> \r\n        <FormHelperText>{helptext}</FormHelperText>\r\n    </FormControl>\r\n    )\r\n}\r\nexport default ESPTextField;","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst ESPCheckbox = React.memo(({ name, label, checked,onPropertyChange,row=12 }) => {\r\n    return (\r\n            <Grid item lg={row}>\r\n            <FormControlLabel  style={{marginBottom:20}} control={\r\n                <Checkbox\r\n                \r\n                    checked={typeof checked ==='undefined'? false: checked}\r\n                    onChange={onPropertyChange}\r\n                    name={name}\r\n                    id={name}\r\n                    color=\"primary\"\r\n                />\r\n            }\r\n                label={label}\r\n            />\r\n            </Grid>\r\n        \r\n    \r\n    )});\r\n    export default ESPCheckbox;","import React, { useEffect } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ESPSelect from \"../../components/controls/ESPSelect\";\r\nimport ESPTextField from \"../../components/controls/ESPTextField\";\r\nimport ESPCheckbox from \"../../components/controls/ESPCheckbox\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Select from \"@mui/material/Select\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst AdminSettingsPage = (props) => {\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        minWidth: 275,\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n      },\r\n\r\n      textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: \"25ch\",\r\n      },\r\n      bullet: {\r\n        display: \"inline-block\",\r\n        margin: \"0 2px\",\r\n        transform: \"scale(0.8)\",\r\n      },\r\n      title: {\r\n        fontSize: 14,\r\n      },\r\n      pos: {\r\n        marginBottom: 12,\r\n      },\r\n      saveBtn: {\r\n        marginTop: 40,\r\n      },\r\n      saveBtnTop: {\r\n        marginTop: 10,\r\n      },\r\n    })\r\n  );\r\n\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    props.adminSettings.Groups !== undefined && (\r\n      <div>\r\n        <Card>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={10}>\r\n              <CardHeader\r\n                title=\"Database Settings\"\r\n                subheader=\"ESP database connection settings \"\r\n                avatar={\r\n                  <Avatar\r\n                    aria-label=\"recipe\"\r\n                    style={{ backgroundColor: \"blue\" }}\r\n                  >\r\n                    {\" \"}\r\n                    D{\" \"}\r\n                  </Avatar>\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item lg={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.saveBtnTop}\r\n                size=\"medium\"\r\n                onClick={props.onSave}\r\n                startIcon={<SaveIcon />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <CardContent></CardContent>\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={6}>\r\n                <TextField\r\n                  id=\"ServerAddress\"\r\n                  label=\"DB Server\"\r\n                  style={{ margin: 8 }}\r\n                  disabled\r\n                  placeholder=\"DB Server\"\r\n                  helperText=\"Database Server Address\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  value={props.adminSettings.ServerAddress || \"\"}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n\r\n                <TextField\r\n                  id=\"Username\"\r\n                  label=\"Login\"\r\n                  style={{ margin: 8 }}\r\n                  disabled\r\n                  placeholder=\"Login\"\r\n                  value={props.adminSettings.Username || \"\"}\r\n                  helperText=\"Database Username\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6}>\r\n                <TextField\r\n                  id=\"DatabaseName\"\r\n                  label=\"DB Name\"\r\n                  style={{ margin: 8 }}\r\n                  disabled\r\n                  placeholder=\"Database Name\"\r\n                  helperText=\"Database Name\"\r\n                  fullWidth\r\n                  value={props.adminSettings.DatabaseName || \"\"}\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  id=\"Password\"\r\n                  label=\"Password\"\r\n                  style={{ margin: 8 }}\r\n                  disabled\r\n                  value={props.adminSettings.Password || \"\"}\r\n                  placeholder=\"Placeholder\"\r\n                  helperText=\"Database password\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <hr />\r\n        <Card>\r\n          <CardHeader\r\n            title=\"General Settings\"\r\n            subheader=\"Job Claim section settings \"\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" style={{ backgroundColor: \"blue\" }}>\r\n                {\" \"}\r\n                G{\" \"}\r\n              </Avatar>\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={6}>\r\n                <ESPSelect\r\n                  disabled\r\n                  name=\"Factories\"\r\n                  label=\"Default Factory\"\r\n                  helptext=\"Name of default Factory\"\r\n                  items={props.adminSettings.Factories}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n                {/* <ESPCheckbox\r\n                name=\"MultipleJobs\"\r\n                label=\"Enable Multiple Jobs\"\r\n                checked={props.adminSettings.MultipleJobs}\r\n                onPropertyChange={props.onPropertyChange}\r\n              /> */}\r\n                <ESPCheckbox\r\n                  name=\"AllowClaimingOutOfFactoryWork\"\r\n                  label=\"Allow claiming on Out of Factory work\"\r\n                  checked={props.adminSettings.AllowClaimingOutOfFactoryWork}\r\n                  onPropertyChange={props.onPropertyChange}\r\n                />\r\n                <ESPTextField\r\n                  name=\"IncrementPercentage\"\r\n                  label=\"Increment\"\r\n                  helptext=\"Percentage (%) increment\"\r\n                  type=\"number\"\r\n                  onPropertyChange={props.onPropertyChange}\r\n                  value={props.adminSettings.IncrementPercentage}\r\n                />\r\n                <ESPSelect\r\n                  name=\"ShowingCode\"\r\n                  label=\"Show Quote Number\"\r\n                  helptext=\"Show V6 Quote Number/ESP Code on Job\"\r\n                  items={props.adminSettings.ShowingCode}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n\r\n                <Grid container>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"TrackLateLogin\"\r\n                      label=\"Track late login\"\r\n                      checked={props.adminSettings.TrackLateLogin}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={9}>\r\n                    <ESPTextField\r\n                      name=\"LateAllowance\"\r\n                      label=\"Late Login Min\"\r\n                      helptext=\"Number of minutes allowed for late login\"\r\n                      type=\"number\"\r\n                      value={props.adminSettings.LateAllowance}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item lg={6}>\r\n                {/* <ESPSelect\r\n                name=\"Groups\"\r\n                label=\"Default Groups\"\r\n                helptext=\"Select Groups for claim\"\r\n                items={props.adminSettings.Groups}\r\n                onPropertyChange={props.onSelectChange}\r\n              /> */}\r\n                <FormControl\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: 20 }}\r\n                >\r\n                  Select Groups for claim\r\n                  <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    name=\"Groups\"\r\n                    value={props.adminSettings.Groups.filter(\r\n                      (x) => x.Selected\r\n                    ).map((i) => i.Text)}\r\n                    onChange={(e) => props.onGroupsSelectChange(e)}\r\n                    input={<OutlinedInput label=\"Tag\" />}\r\n                    renderValue={(selected) => selected.join(\", \")}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {props.adminSettings.Groups.map((item) => (\r\n                      <MenuItem key={item.Text} value={item.Text}>\r\n                        <Checkbox checked={item.Selected} />\r\n                        <ListItemText primary={item.Text} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                {/* <ESPCheckbox\r\n                name=\"ScheduledJobs\"\r\n                label=\"Show Scheduled Jobs After Claim\"\r\n                checked={props.adminSettings.ScheduledJobs}\r\n                onPropertyChange={props.onPropertyChange}\r\n              /> */}\r\n                <ESPSelect\r\n                  name=\"JobListOrdering\"\r\n                  label=\"Job List Order\"\r\n                  helptext=\"Order Showed in Job List Page\"\r\n                  items={props.adminSettings.JobListOrdering}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n                {/* <ESPCheckbox\r\n                name=\"CanFinishWholeJob\"\r\n                label=\"Enable Finish Whole Job feature\"\r\n                checked={props.adminSettings.CanFinishWholeJob}\r\n                onPropertyChange={props.onPropertyChange}\r\n              /> */}\r\n                <Grid container>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"TrackEarlyLeave\"\r\n                      label=\"Track early leave\"\r\n                      checked={props.adminSettings.TrackEarlyLeave}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={9}>\r\n                    <ESPTextField\r\n                      name=\"EarlyLeaveAllowance\"\r\n                      label=\"Early Leave Min\"\r\n                      helptext=\"Number of minutes allowed for early leave\"\r\n                      type=\"number\"\r\n                      value={props.adminSettings.EarlyLeaveAllowance}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={12}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowStandardTime\"\r\n                      label=\"Show Standard Time\"\r\n                      checked={props.adminSettings.ShowStandardTime}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item lg={12}>\r\n                    <ESPTextField\r\n                      name=\"NoClaimAllowance\"\r\n                      label=\"No Claim Allowance\"\r\n                      helptext=\"Seconds No Claim Allowance Before Logout. (Zero= disable)\"\r\n                      type=\"number\"\r\n                      value={props.adminSettings.NoClaimAllowance}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item lg={4}>\r\n                  <ESPCheckbox\r\n                    name=\"HidePreProductionJobs\"\r\n                    label=\"Hide PreProduction Jobs\"\r\n                    checked={props.adminSettings.HidePreProductionJobs}\r\n                    onPropertyChange={props.onPropertyChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={4}>\r\n                  <ESPCheckbox\r\n                    name=\"DividJobs\"\r\n                    label=\"Enable Dividing jobs\"\r\n                    checked={props.adminSettings.DividJobs}\r\n                    onPropertyChange={props.onPropertyChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={4}>\r\n                  <ESPCheckbox\r\n                    name=\"TrackNotLoggedOut\"\r\n                    label=\"Alert not logged out worker\"\r\n                    checked={props.adminSettings.TrackNotLoggedOut}\r\n                    onPropertyChange={props.onPropertyChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n        <hr />\r\n\r\n        <Card>\r\n          <CardHeader\r\n            title=\"Production Board\"\r\n            subheader=\"Production Board Section Settings\"\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" style={{ backgroundColor: \"blue\" }}>\r\n                {\" \"}\r\n                P{\" \"}\r\n              </Avatar>\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={8}>\r\n                <Grid container>\r\n                  <Grid item lg={4}>\r\n                    <ESPCheckbox\r\n                      name=\"PBShowProductionBoard\"\r\n                      label=\"Enable Production Board\"\r\n                      checked={props.adminSettings.PBShowProductionBoard}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={4}>\r\n                    <ESPCheckbox\r\n                      name=\"PBHideOutOfFactoryWorkTypes\"\r\n                      label=\"Hide Out of Factory WorkTypes\"\r\n                      checked={props.adminSettings.PBHideOutOfFactoryWorkTypes}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={4}>\r\n                    <ESPCheckbox\r\n                      name=\"ClaimOnPB\"\r\n                      label=\"Claim on Production Board\"\r\n                      checked={props.adminSettings.ClaimOnPB}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container>\r\n                  <Grid item lg={12}>\r\n                    <label>Extra Columns</label>\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"PBTitleColumn\"\r\n                      label=\"Title\"\r\n                      checked={props.adminSettings.PBTitleColumn}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"PBCustomerColumn\"\r\n                      label=\"Customer\"\r\n                      checked={props.adminSettings.PBCustomerColumn}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"PBHourColumn\"\r\n                      label=\"Hours\"\r\n                      checked={props.adminSettings.PBHourColumn}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"PBDueDateColumn\"\r\n                      label=\"Due Date\"\r\n                      checked={props.adminSettings.PBDueDateColumn}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowRework\"\r\n                      label=\"Show Rework\"\r\n                      checked={props.adminSettings.ShowRework}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowColour\"\r\n                      label=\"Show Colour\"\r\n                      checked={props.adminSettings.ShowColour}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowQty\"\r\n                      label=\"Show Unit Qty\"\r\n                      checked={props.adminSettings.ShowQty}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowSalesPerson\"\r\n                      label=\"Show SalesPerson\"\r\n                      checked={props.adminSettings.ShowSalesPerson}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowEstimator\"\r\n                      label=\"Show Estimator\"\r\n                      checked={props.adminSettings.ShowEstimator}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item lg={3}>\r\n                <ESPSelect\r\n                  name=\"PBJobOrders\"\r\n                  label=\"Job Order\"\r\n                  helptext=\"Listing Job Order\"\r\n                  items={props.adminSettings.PBJobOrders}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={1}>\r\n                <ESPCheckbox\r\n                  name=\"Z2A\"\r\n                  label=\"Z to A\"\r\n                  checked={props.adminSettings.Z2A}\r\n                  onPropertyChange={props.onPropertyChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n        <hr />\r\n\r\n        <Card>\r\n          <CardHeader\r\n            title=\"Performance Statistics\"\r\n            subheader=\"Performance Statistics Section Settings\"\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" style={{ backgroundColor: \"blue\" }}>\r\n                {\" \"}\r\n                S{\" \"}\r\n              </Avatar>\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={6}>\r\n                <ESPCheckbox\r\n                  name=\"PSShowPerformanceStates\"\r\n                  label=\"Enable Performance Stats\"\r\n                  checked={props.adminSettings.PSShowPerformanceStates}\r\n                  onPropertyChange={props.onPropertyChange}\r\n                />\r\n                <ESPSelect\r\n                  name=\"PSStatisticChart\"\r\n                  label=\"Statistic Chart Type\"\r\n                  helptext=\"\"\r\n                  items={props.adminSettings.PSStatisticChart}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6}>\r\n                <ESPCheckbox\r\n                  name=\"PSEnableIndividual\"\r\n                  label=\"Enable Individual Performance Stats\"\r\n                  checked={props.adminSettings.PSEnableIndividual}\r\n                  onPropertyChange={props.onPropertyChange}\r\n                />\r\n                <ESPSelect\r\n                  name=\"PSStatisticGroup\"\r\n                  label=\"Statistic Group\"\r\n                  helptext=\"\"\r\n                  items={props.adminSettings.PSStatisticGroup}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={5}>\r\n                <ESPSelect\r\n                  name=\"PSPerformanceChart\"\r\n                  label=\"Performance Chart Duration\"\r\n                  helptext=\"\"\r\n                  items={props.adminSettings.PSPerformanceChart}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={5}></Grid>\r\n              <Grid item lg={2} mx=\"auto\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.saveBtn}\r\n                  size=\"medium\"\r\n                  onClick={props.onSave}\r\n                  startIcon={<SaveIcon />}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default AdminSettingsPage;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nclass HelperLogic extends React.Component {\r\n  getLocalToken = async () => {\r\n    var claim = await this.apiGetClaimName();\r\n\r\n    const cookies = new Cookies();\r\n    var claims = cookies.get(claim.name);\r\n\r\n    return claims.user_t;\r\n  };\r\n\r\n  setAsyncApiToken = async (username, password, route) => {\r\n    var value = {\r\n      grant_type: \"password\",\r\n      username: username,\r\n      password: password,\r\n      withCredentials: true,\r\n    };\r\n    var data = Object.keys(value)\r\n      .map(function (key) {\r\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(value[key]);\r\n      })\r\n      .join(\"&\");\r\n    var headers = {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Access-Control-Allow-Credentials\": \"true\",\r\n      \"Access-Control-Allow-Methods\": \"*\",\r\n    };\r\n    return await axios.post(`${route}token`, data, headers);\r\n  };\r\n\r\n  apiPost = async (url, value, errorName) => {\r\n    var response = {};\r\n    // var data = JSON.stringify(value);\r\n    axios.defaults.headers.post[\"Authorization\"] =\r\n      \"bearer \" + (await this.getLocalToken());\r\n    axios.defaults.headers.post[\"Content-Type\"] =\r\n      \"application/json; charset=UTF-8\";\r\n    axios.defaults.headers.post[\"Accept\"] = \"application/json\";\r\n\r\n    var headers = {\r\n      // \"Access-Control-Allow-Origin\": \"*\",\r\n      // \"Access-Control-Allow-Credentials\": \"true\",\r\n      // \"Access-Control-Allow-Methods\": \"*\",\r\n      Authorization: \"bearer \" + (await this.getLocalToken()),\r\n      \"Content-Type\": \"application/json; charset=UTF-8\",\r\n      Accept: \"application/json\",\r\n    };\r\n    return await axios.post(`${url}`, value, headers);\r\n  };\r\n\r\n  apiGet = async (url, errorName) => {\r\n    try {\r\n      axios.defaults.headers.post[\"Authorization\"] =\r\n        \"bearer \" + (await this.getLocalToken());\r\n      axios.defaults.headers.post[\"Content-type\"] = \"application/json\";\r\n\r\n      await axios.get(url);\r\n    } catch (err) {\r\n      alert(`Error in calling ESP (${errorName}) API- ${err}`);\r\n    }\r\n  };\r\n\r\n  apiGetClaimName = async () => {\r\n    try {\r\n      return await fetch(\"./data.json\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }).then((res) => res.json());\r\n    } catch (err) {}\r\n  };\r\n  /*\r\n  apiAsyncPost = async (url, value, errorName) => {\r\n    var response = {};\r\n    var data = JSON.stringify(value);\r\n    try {\r\n      axios.defaults.headers.post[\"Authorization\"] =\r\n        \"bearer \" + this.getLocalToken();\r\n      axios.defaults.headers.post[\"Content-type\"] = \"application/json\";\r\n\r\n      response = await axios.post(`${config.apiUrl}${url}`, data);\r\n      return response;\r\n    } catch (err) {\r\n      alert(` ${err.response.data}`);\r\n    }\r\n  };\r\n\r\n  */\r\n  timeConvert = (num) => {\r\n    var hours = num / 60;\r\n    var rhours = Math.floor(hours).toString();\r\n    var minutes = (hours - rhours) * 60;\r\n    var rminutes = Math.round(minutes).toString();\r\n    return (\r\n      (rhours.length == 1 ? \"0\" + rhours : rhours) +\r\n      \":\" +\r\n      (rminutes.length == 1 ? \"0\" + rminutes : rminutes)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <din></din>;\r\n  }\r\n}\r\n\r\nconst Helper = new HelperLogic();\r\nexport default Helper;\r\n","import React from \"react\";\r\nimport AdminSettingsPage from \"./AdminSettingsPage\";\r\nimport Helper from \"../../components/logics/Helper\";\r\n\r\nclass AdminSettingsContainer extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      adminSettings: {},\r\n      user: {},\r\n      changes: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getAdminSettingsByAPI();\r\n    this.captureIPAddress();\r\n    this.props.changeStep(0);\r\n  }\r\n  handelPropertyChange = (event) => {\r\n    var adSettings = this.state.adminSettings;\r\n\r\n    let value = \"\";\r\n    if (event.target.type !== undefined && event.target.type === \"checkbox\")\r\n      value = event.target.checked;\r\n    else value = event.target.value;\r\n\r\n    var changes = this.state.changes;\r\n    changes.push({\r\n      name: event.target.name,\r\n      value: value,\r\n    });\r\n\r\n    adSettings[event.target.name] = value;\r\n    this.setState({\r\n      ...this.state,\r\n      changes,\r\n      adSettings,\r\n    });\r\n  };\r\n  onGroupsSelectChange = (event) => {\r\n    var adSettings = this.state.adminSettings;\r\n    var newSelectedId = event.target.value;\r\n    let newValues = [];\r\n    adSettings[\"Groups\"].map((item) => {\r\n      if (newSelectedId.includes(item.Text))\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Disabled: false,\r\n          Group: null,\r\n          Selected: true,\r\n        });\r\n      else\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Disabled: false,\r\n          Group: null,\r\n          Selected: false,\r\n        });\r\n    });\r\n\r\n    adSettings[event.target.name] = newValues;\r\n\r\n    adSettings[\"GroupsIds\"] = newValues\r\n      .filter((x) => x.Selected)\r\n      .map((n) => {\r\n        return n.Value;\r\n      })\r\n      .join(\",\");\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      adminSettings: adSettings,\r\n    });\r\n  };\r\n  onSelectChange = (event) => {\r\n    var adSettings = this.state.adminSettings;\r\n    var newSelectedId = event.target.value;\r\n    let newValues = [];\r\n    adSettings[event.target.name].map((item) => {\r\n      if (item.Value === newSelectedId)\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Disabled: false,\r\n          Group: null,\r\n          Selected: true,\r\n        });\r\n      else\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Disabled: false,\r\n          Group: null,\r\n          Selected: false,\r\n        });\r\n    });\r\n    var changes = this.state.changes;\r\n\r\n    changes.push({\r\n      name: event.target.name,\r\n      value: newSelectedId,\r\n    });\r\n    if (event.target.name === \"Factories\") {\r\n      this.getGroupsByAPI(newSelectedId, this.props.apiRoute);\r\n    }\r\n    adSettings[event.target.name] = newValues;\r\n    adSettings[event.target.name + \"Id\"] = newSelectedId;\r\n    this.setState({\r\n      ...this.state,\r\n      changes,\r\n      adminSettings: adSettings,\r\n    });\r\n  };\r\n  captureIPAddress = async () => {\r\n    fetch(\"https://api.ipify.org?format=jsonp?callback=?\", {\r\n      method: \"GET\",\r\n      headers: {},\r\n    })\r\n      .then((res) => {\r\n        return res.text();\r\n      })\r\n      .then((ip) => {\r\n        this.setState({\r\n          ...this.state,\r\n          ip,\r\n        });\r\n      });\r\n  };\r\n\r\n  getGroupsByAPI = async (oid, route) => {\r\n    var response = {};\r\n    var oldAdminSettings = this.state.adminSettings;\r\n    try {\r\n      Helper.apiPost(`${route}adminSettings/GetGroup?oid=` + oid, {}, \"\")\r\n        .then((res) => {\r\n          response = JSON.parse(res.data);\r\n          oldAdminSettings.Groups = response;\r\n\r\n          this.setState({\r\n            ...this.state,\r\n            adminSettings: oldAdminSettings,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Error in get Groups data\");\r\n        });\r\n    } catch (err) {\r\n      if (err.response) alert(`Error in calling ESP API- ${err.response.data}`);\r\n      else alert(`Error in calling ESP API- ${err}`);\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n\r\n  getAdminSettingsByAPI = async () => {\r\n    var response = {};\r\n    try {\r\n      var res = await Helper.apiPost(\r\n        `${this.props.apiRoute}adminSettings/GetInfo`,\r\n        {},\r\n        \"\"\r\n      );\r\n\r\n      response = JSON.parse(res.data);\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          adminSettings: response,\r\n        },\r\n        () => {\r\n          this.props.onChangeSettings(response);\r\n        }\r\n      );\r\n    } catch (err) {\r\n      if (err.response) alert(`Error in calling ESP API- ${err.response.data}`);\r\n      else alert(`Error in calling ESP API- ${err}`);\r\n    }\r\n  };\r\n\r\n  saveAdminSettingsByAPI = async () => {\r\n    let state = this.state.adminSettings;\r\n\r\n    //var data = JSON.stringify(state);\r\n    try {\r\n      Helper.apiPost(`${this.props.apiRoute}adminSettings/PostData`, state, \"\")\r\n        .then((res) => {\r\n          this.props.history.push(`${this.props.mainRoute}`);\r\n          this.getAdminSettingsByAPI();\r\n          window.location.reload(true);\r\n          window.location.href = `${this.props.mainRoute}`;\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Error in get Groups data\");\r\n        });\r\n    } catch (err) {\r\n      if (err.response) alert(`Error in calling ESP API- ${err.response.data}`);\r\n      else alert(`Error in calling ESP API- ${err}`);\r\n    }\r\n  };\r\n\r\n  render(props) {\r\n    return (\r\n      <AdminSettingsPage\r\n        adminSettings={this.state.adminSettings || null}\r\n        onPropertyChange={this.handelPropertyChange}\r\n        onSelectChange={this.onSelectChange}\r\n        onGroupsSelectChange={this.onGroupsSelectChange}\r\n        onSave={this.saveAdminSettingsByAPI}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminSettingsContainer;\r\n","import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Switch, { SwitchProps } from \"@mui/material/Switch\";\r\n\r\nconst IOSSwitchMain = styled((props: SwitchProps) => (\r\n  <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />\r\n))(({ theme }) => ({\r\n  width: 45,\r\n  height: 26,\r\n  padding: 0,\r\n  \"& .MuiSwitch-switchBase\": {\r\n    padding: 0,\r\n    margin: 2,\r\n    color: \"#fff\",\r\n    transitionDuration: \"700ms\",\r\n    \"&.Mui-checked\": {\r\n      transform: \"translateX(20px)\",\r\n      color: \"#3f51b5\",\r\n      \"& + .MuiSwitch-track\": {\r\n        backgroundColor: theme.palette.mode === \"dark\" ? \"#9abf47\" : \"#9abf47\",\r\n        color: \"#000\",\r\n        opacity: 0.8,\r\n        border: 0,\r\n      },\r\n      \"&.Mui-disabled + .MuiSwitch-track\": {\r\n        opacity: 0.9,\r\n      },\r\n    },\r\n    \"&.Mui-focusVisible .MuiSwitch-thumb\": {\r\n      color: \"#fff\",\r\n      border: \"6px solid #fff\",\r\n    },\r\n    \"&.Mui-disabled .MuiSwitch-thumb\": {\r\n      color:\r\n        theme.palette.mode === \"light\"\r\n          ? theme.palette.grey[100]\r\n          : theme.palette.grey[600],\r\n    },\r\n    \"&.Mui-disabled + .MuiSwitch-track\": {\r\n      opacity: theme.palette.mode === \"light\" ? 0.7 : 0.3,\r\n    },\r\n  },\r\n  \"& .MuiSwitch-thumb\": {\r\n    boxSizing: \"border-box\",\r\n    width: 22,\r\n    height: 22,\r\n  },\r\n  \"& .MuiSwitch-track\": {\r\n    borderRadius: 26 / 2,\r\n    backgroundColor: theme.palette.mode === \"light\" ? \"#c5c6c9\" : \"#000\",\r\n    opacity: 1,\r\n    transition: theme.transitions.create([\"background-color\"], {\r\n      duration: 500,\r\n    }),\r\n  },\r\n}));\r\n\r\nexport default function IOSSwitch(props) {\r\n  return <IOSSwitchMain {...props} />;\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: \"90%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nexport default function ItemsList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {props.items &&\r\n        props.items\r\n          .filter((x) => x !== \"Claim from ESP-Claim\")\r\n          .map((i) => (\r\n            <Fragment>\r\n              <ListItem alignItems=\"flex-start\" key={i.Resource}>\r\n                <ListItemAvatar>\r\n                  <Avatar\r\n                    aria-label=\"recipe\"\r\n                    style={{ backgroundColor: \"blue\" }}\r\n                  >\r\n                    {\" \"}\r\n                    C{\" \"}\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={`Author:${i.Author} ${\r\n                    i.Resource != null && i.Resource.length > 0\r\n                      ? `Resource:${i.Resource}`\r\n                      : ``\r\n                  } `}\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes.inline}\r\n                        color=\"textPrimary\"\r\n                      >\r\n                        {i.Date}\r\n                      </Typography>\r\n                      <br />\r\n                      {i.IsBold ? (\r\n                        <b>\r\n                          <span\r\n                            style={{\r\n                              fontSize: \"15px\",\r\n                              fontWeight: \"1000\",\r\n                              color: \"black\",\r\n                            }}\r\n                          >\r\n                            {i.Comment}\r\n                          </span>\r\n                        </b>\r\n                      ) : (\r\n                        <span style={{ fontSize: \"15px\" }}>{i.Comment}</span>\r\n                      )}\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </Fragment>\r\n          ))}\r\n    </List>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ItemsList from \"./../../components/controls/ItemsList\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog(props) {\r\n  const classes = useStyles();\r\n  // const [open, setOpen] = React.useState(false);\r\n\r\n  const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n  const handleClose = () => {\r\n    props.handleClose(false);\r\n    //setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              {props.header}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <p>{props.text}</p>\r\n        {props.uls && <ItemsList items={props.uls} />}\r\n        {props.textList && props.textList.length > 0 && (\r\n          <TableContainer component={Paper} lg={6} sm={12} xs={12}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow></TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.textList.map((row) => (\r\n                  <StyledTableRow hover key={row.Date}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {row.Date}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{row.Name}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{row.Std}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{row.Phy}</StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Loading(props) {\r\n  return (\r\n    <img\r\n      src={`${props.mainRoute}loading.gif`}\r\n      alt=\"LOADING...\"\r\n      style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}\r\n    />\r\n  );\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport IOSSwitch from \"../../components/controls/IosSwitch\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport FullScreenDialog from \"../../components/controls/FullScreenDialog\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport {\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Loading from \"../loading.js\";\r\n\r\nconst ProductionBoardPage = (props) => {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [note, setNote] = useState([]);\r\n  const [searchVal, setsearchVal] = useState(\"\");\r\n  const [jobs, setJobs] = useState(props.jobs);\r\n  const [wt, setWt] = useState(true);\r\n  const [pie, setPie] = useState(false);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [preItems, setPreItems] = useState([]);\r\n  const [currentJob, setCurrentJob] = useState({});\r\n\r\n  const theme = createMuiTheme({\r\n    overrides: {\r\n      MuiTooltip: {\r\n        tooltip: {\r\n          fontSize: \"0.7em\",\r\n          color: \"yellow\",\r\n          backgroundColor: \"#eeeeee\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n  const defaultLabelStyle = {\r\n    fontSize: \"1.8em\",\r\n    fontFamily: \"sans-serif\",\r\n  };\r\n  function clearSearch() {\r\n    setsearchVal(\"\");\r\n    setJobs([]);\r\n    setJobs(props.jobs);\r\n  }\r\n  function searchJobs(event) {\r\n    var txt = event.target.value;\r\n    setsearchVal(txt);\r\n    var filterJobs =\r\n      event.target.value.length > 0\r\n        ? props.jobs.filter(\r\n            (t) =>\r\n              t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n              t.Code.includes(txt) ||\r\n              t.Customer.includes(txt)\r\n          )\r\n        : props.jobs;\r\n    setJobs(filterJobs);\r\n  }\r\n  function chunkArray(myArray, chunk_size) {\r\n    var index = 0;\r\n    var arrayLength = myArray.length;\r\n    var tempArray = [];\r\n    var myChunk = [];\r\n    for (index = 0; index < arrayLength; index += chunk_size) {\r\n      myChunk = myArray.slice(index, index + chunk_size);\r\n      // Do something if you want with the group\r\n      tempArray.push(myChunk);\r\n    }\r\n\r\n    return tempArray;\r\n  }\r\n  function getChart() {}\r\n  function beginTr(code, wortTYpes) {\r\n    var wts = wortTYpes.filter((x) => !x.IsPreProduction);\r\n    var chuncked = chunkArray(wts, 4);\r\n\r\n    var items = [];\r\n    var htd = [];\r\n    var trs = [];\r\n    var element = {};\r\n    for (var i = 0; i < chuncked.length; i++) {\r\n      var section = chuncked[i];\r\n      htd = [];\r\n      for (var j = 0; j < section.length; j++) {\r\n        htd.push(<td>{section[j].Name}</td>);\r\n      }\r\n      trs.push(<tr>{htd}</tr>);\r\n      htd = [];\r\n      for (var j = 0; j < section.length; j++) {\r\n        if (section[j].Progress == 100) element = <CheckIcon />;\r\n        if (section[j].Progress == 0) element = <dir />;\r\n        else {\r\n          element = (\r\n            <MuiThemeProvider theme={theme}>\r\n              <Tooltip\r\n                title={section[j].ChartObj.filter((x) => x.value > 0).map(\r\n                  (t) => (\r\n                    <tr>\r\n                      <td style={{ backgroundColor: t.color }}> </td>\r\n                      <td>\r\n                        <h1> {t.value}</h1>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                )}\r\n                placement=\"top\"\r\n              >\r\n                {pie ? (\r\n                  <PieChart\r\n                    data={section[j].ChartObj.filter((x) => x.value > 0)}\r\n                    radius={PieChart.defaultProps.radius - 10}\r\n                    segmentsShift={(index) => (index === 0 ? 10 : 0.5)}\r\n                    label={({ dataEntry }) => dataEntry.value}\r\n                    labelStyle={{\r\n                      ...defaultLabelStyle,\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <table\r\n                    style={{\r\n                      padding: 0,\r\n                      margin: 0,\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      {section[j].ChartObj.filter((x) => x.value > 0).map(\r\n                        (t) => (\r\n                          <td\r\n                            style={{\r\n                              width: t.value,\r\n                              backgroundColor: t.color,\r\n                              fontSize: \"0.8em\",\r\n                            }}\r\n                          >\r\n                            {t.value}\r\n                          </td>\r\n                        )\r\n                      )}\r\n                    </tr>\r\n                  </table>\r\n                )}\r\n              </Tooltip>\r\n            </MuiThemeProvider>\r\n          );\r\n        }\r\n        htd.push(<td>{element}</td>);\r\n        element = {};\r\n      }\r\n      trs.push(<tr>{htd}</tr>);\r\n      htd = [];\r\n    }\r\n    items.push(<table>{trs}</table>);\r\n\r\n    return items;\r\n  }\r\n\r\n  function getWtItem(ClaimOnPBStting, claimOnPB, w, e) {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <Tooltip\r\n          title={w.ChartObj.filter((x) => x.value > 0).map((t) => (\r\n            <tr>\r\n              <td style={{ backgroundColor: t.color }}> </td>\r\n              <td>\r\n                <h1> {t.value}</h1>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n          placement=\"top\"\r\n        >\r\n          <td\r\n            style={{\r\n              paddingRight: \"5px\",\r\n              paddingLeft: \"2px\",\r\n              verticalAlign: \"middle\",\r\n            }}\r\n            onClick={(r) =>\r\n              ClaimOnPBStting &&\r\n              w.Progress != -1 &&\r\n              claimOnPB(e.Oid, w.Oid, w.JobLevel, e.Code)\r\n            }\r\n          >\r\n            {pie && (\r\n              <PieChart\r\n                style={{\r\n                  margin: 0,\r\n                  padding: 0,\r\n                  marginLeft: \"10px\",\r\n                  fontSize: \"1.2em\",\r\n                }}\r\n                data={w.ChartObj.filter((x) => x.value > 0)}\r\n                radius={PieChart.defaultProps.radius - 10}\r\n                segmentsShift={(index) => (index === 0 ? 10 : 0.5)}\r\n                label={({ dataEntry }) => dataEntry.value}\r\n                labelStyle={{\r\n                  ...defaultLabelStyle,\r\n                }}\r\n              />\r\n            )}\r\n            {!pie && (\r\n              <table\r\n                style={{\r\n                  padding: 0,\r\n                  margin: 0,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                }}\r\n              >\r\n                <tr>\r\n                  {w.ChartObj.filter((x) => x.value > 0).map((t) => (\r\n                    <td\r\n                      style={{\r\n                        width: t.value,\r\n                        marginLeft: \"3px\",\r\n                        marginRight: \"3px\",\r\n                        backgroundColor: t.color,\r\n                        fontSize: \"1.2em\",\r\n                        // padding: \"2px\",\r\n                      }}\r\n                    >\r\n                      {t.value}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              </table>\r\n            )}\r\n          </td>\r\n        </Tooltip>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div style={{ width: \"99%\" }}>\r\n        <Grid container spacing={5}>\r\n          <Hidden only={[\"xs\"]}>\r\n            <Grid item lg={2} sm={6}>\r\n              <h1>Production&nbsp;Board</h1>\r\n            </Grid>\r\n            <Grid item lg={1} sm={6}>\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Bar/Pie\r\n              </InputLabel>\r\n\r\n              <IOSSwitch\r\n                onChange={(e) => {\r\n                  setPie(e.target.checked);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={4} sm={6}>\r\n              <table style={{ width: \"100%\" }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#00C400\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Finished</td>\r\n\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#ffa500\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>High Priority</td>\r\n\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#808080\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Out Of Factory</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#ffff00\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Scheduled</td>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#d3d3d3\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Non-scheduled</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Grid>\r\n          </Hidden>\r\n\r\n          <Grid item lg={2} sm={6} xs={6}>\r\n            <IconButton sx={{ p: \"10px\" }} aria-label=\"menu\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              sx={{ ml: 1, flex: 1 }}\r\n              placeholder=\"Search\"\r\n              variant=\"outlined\"\r\n              value={searchVal}\r\n              onChange={searchJobs}\r\n            />\r\n            <IconButton\r\n              color=\"primary\"\r\n              sx={{ p: \"10px\" }}\r\n              aria-label=\"directions\"\r\n              onClick={() => clearSearch()}\r\n            >\r\n              <CancelIcon />\r\n            </IconButton>\r\n\r\n            {/* <Input\r\n              id=\"input-with-icon-adornment\"\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              }\r\n              value={searchVal}\r\n              onChange={searchJobs}\r\n            /> */}\r\n          </Grid>\r\n          <Grid item xs={6} lg={2} md={4}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onClick={() => props.logoutFromPB()}\r\n              startIcon={<MeetingRoomIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Grid>\r\n          <Hidden only={[\"lg\", \"xl\", \"md\"]}>\r\n            <Grid item xs={4}>\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Show W/T\r\n              </InputLabel>\r\n\r\n              <IOSSwitch\r\n                checked={wt}\r\n                onChange={(s) => {\r\n                  setWt(s.target.checked);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Pie/Bar\r\n              </InputLabel>\r\n\r\n              <IOSSwitch\r\n                onChange={(e) => {\r\n                  setPie(e.target.checked);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <table style={{ width: \"100%\" }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#00C400\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Finished</td>\r\n\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#ffa500\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>High Priority</td>\r\n\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#808080\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Out Of Factory</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#ffff00\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Scheduled</td>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#d3d3d3\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Non-scheduled</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Grid>\r\n          </Hidden>\r\n        </Grid>\r\n        <Hidden only={[\"xs\"]}>\r\n          <table id=\"pbDesktop\">\r\n            <thead>\r\n              <tr>\r\n                <th xs={2}>Code</th>\r\n                {props.settings.PBCustomerColumn && <th>Customer</th>}\r\n                {props.settings.PBTitleColumn && <th>Title</th>}\r\n                {props.settings.PBHourColumn && <th>Hours</th>}\r\n                {props.settings.PBDueDateColumn && <th>Due Date</th>}\r\n                {props.settings.ShowQty && <th>Unit Qty</th>}\r\n                {props.settings.ShowSalesPerson && <th>SalesPerson</th>}\r\n                {props.settings.ShowEstimator && <th>Estimator</th>}\r\n                {props.settings.ShowColour && <th>Colour</th>}\r\n                <th>Prog.</th>\r\n                {jobs &&\r\n                  jobs[0] &&\r\n                  jobs[0].WorkTypes &&\r\n                  jobs[0].WorkTypes.filter((x) => !x.IsPreProduction).map(\r\n                    (w) => <th style={{ minWidth: \"65px\" }}>{w.Name}</th>\r\n                  )}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {jobs &&\r\n                jobs.map((e, i) => (\r\n                  <tr\r\n                    style={{\r\n                      backgroundColor: `${i % 2 == 0 ? \"#fff\" : \"#fafafa\"}`,\r\n                    }}\r\n                    className=\"border-bottom\"\r\n                  >\r\n                    <td>\r\n                      {e.Comments.length > 0 && (\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          style={{ textAlign: \"right\", color: \"#196dc4\" }}\r\n                          onClick={(w) => {\r\n                            setNote(e.Comments);\r\n                            setOpenDialog(true);\r\n                          }}\r\n                        >\r\n                          <span style={{ textDecoration: \"underline\" }}>\r\n                            {\" \"}\r\n                            {e.Code}\r\n                          </span>\r\n                        </Button>\r\n                      )}\r\n                      {e.Comments.length == 0 && e.Code}\r\n                      {e.WorkTypes.filter(\r\n                        (x) =>\r\n                          x.IsPreProduction &&\r\n                          x.Progress >= 0 &&\r\n                          x.Progress < 100\r\n                      ).length > 0 && (\r\n                        <div>\r\n                          <hr />\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            style={{ textAlign: \"right\", color: \"red\" }}\r\n                            onClick={(w) => {\r\n                              setPreItems(\r\n                                e.WorkTypes.filter(\r\n                                  (x) =>\r\n                                    x.IsPreProduction &&\r\n                                    x.Progress >= 0 &&\r\n                                    x.Progress < 100\r\n                                )\r\n                              );\r\n                              setCurrentJob(e);\r\n                              setDialogOpen(true);\r\n                            }}\r\n                          >\r\n                            Pre.P.\r\n                          </Button>\r\n                        </div>\r\n                      )}\r\n                    </td>\r\n                    {props.settings.PBCustomerColumn && <td>{e.Customer}</td>}\r\n                    {props.settings.PBTitleColumn && (\r\n                      <td\r\n                        className=\"border-bottom\"\r\n                        style={{\r\n                          backgroundColor: `${\r\n                            e.TitleBackgroundColor !== \"\"\r\n                              ? e.TitleBackgroundColor\r\n                              : i % 2 == 0\r\n                              ? \"#fff\"\r\n                              : \"#fafafa\"\r\n                          }`,\r\n                          color: `${e.TitleColor}`,\r\n                        }}\r\n                      >\r\n                        {e.Title}\r\n                      </td>\r\n                    )}\r\n                    {props.settings.PBHourColumn && <td>{e.Hours}</td>}\r\n                    {props.settings.PBDueDateColumn && <td>{e.Due}</td>}\r\n                    {props.settings.ShowQty && <td>{e.UnitQty}</td>}\r\n                    {props.settings.ShowSalesPerson && <td>{e.SalesPerson}</td>}\r\n                    {props.settings.ShowEstimator && <td>{e.Estimator}</td>}\r\n                    {props.settings.ShowColour && <td>{e.Colour}</td>}\r\n                    <td>{e.Progress}%</td>\r\n                    {e.WorkTypes &&\r\n                      e.WorkTypes.filter((x) => !x.IsPreProduction).map((w) =>\r\n                        w.Progress == 100 ? (\r\n                          <td\r\n                            style={{\r\n                              margin: 0,\r\n                              padding: 0,\r\n                              verticalAlign: \"middle\",\r\n                            }}\r\n                          >\r\n                            <CheckIcon />\r\n                          </td>\r\n                        ) : w.Progress == 0 ? (\r\n                          <td\r\n                            style={{\r\n                              margin: 0,\r\n                              padding: 0,\r\n                              verticalAlign: \"middle\",\r\n                            }}\r\n                            onClick={(r) =>\r\n                              props.settings.ClaimOnPB &&\r\n                              w.Progress != -1 &&\r\n                              props.claimOnPB(e.Oid, w.Oid, w.JobLevel, e.Code)\r\n                            }\r\n                          >\r\n                            0%\r\n                          </td>\r\n                        ) : (\r\n                          getWtItem(\r\n                            props.settings.ClaimOnPB,\r\n                            props.claimOnPB,\r\n                            w,\r\n                            e\r\n                          )\r\n                        )\r\n                      )}\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </Hidden>\r\n        <Hidden only={[\"lg\", \"xl\", \"md\"]}>\r\n          <table style={{ border: \"none!important\", backgroundColor: \"white\" }}>\r\n            {jobs &&\r\n              jobs.map((e, i) => (\r\n                <Fragment>\r\n                  <tr>\r\n                    <td colSpan=\"4\">\r\n                      <hr />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      {e.Comments.length > 0 && (\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          style={{ textAlign: \"right\" }}\r\n                          onClick={(w) => {\r\n                            setNote(e.Comments);\r\n                            setOpenDialog(true);\r\n                          }}\r\n                        >\r\n                          {e.Code}\r\n                        </Button>\r\n                      )}\r\n                      {e.Comments.length == 0 && e.Code}\r\n                    </td>\r\n                    <td colSpan=\"1\">{e.Progress}%</td>\r\n                  </tr>\r\n                  <tr>\r\n                    {props.settings.PBCustomerColumn && (\r\n                      <td colSpan=\"4\">{e.Customer}</td>\r\n                    )}\r\n                  </tr>\r\n                  {props.settings.PBTitleColumn && (\r\n                    <tr>\r\n                      <td\r\n                        colSpan=\"4\"\r\n                        style={{\r\n                          backgroundColor: `${\r\n                            e.TitleBackgroundColor !== \"\"\r\n                              ? e.TitleBackgroundColor\r\n                              : i % 2 == 0\r\n                              ? \"#fff\"\r\n                              : \"#fafafa\"\r\n                          }`,\r\n                          color: `${e.TitleColor}`,\r\n                        }}\r\n                      >\r\n                        {e.Title}\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                  {props.settings.PBDueDateColumn && (\r\n                    <tr>\r\n                      <td colSpan=\"1\">Due:</td>\r\n                      <td colSpan=\"3\">{e.Due}</td>\r\n                    </tr>\r\n                  )}\r\n                  {props.settings.PBHourColumn && (\r\n                    <tr>\r\n                      <td colSpan=\"1\">Hours:</td>\r\n                      <td colSpan=\"3\">{e.Hours}</td>\r\n                    </tr>\r\n                  )}\r\n\r\n                  <tr>\r\n                    {e.WorkTypes && wt && (\r\n                      <td\r\n                        onClick={(r) =>\r\n                          props.settings.ClaimOnPB &&\r\n                          props.claimOnPB(e.Oid, wt.Oid, wt.JobLevel, e.Code)\r\n                        }\r\n                        colSpan=\"4\"\r\n                      >\r\n                        {beginTr(e.Code, e.WorkTypes)}\r\n                      </td>\r\n                    )}\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"4\">\r\n                      <hr />\r\n                    </td>\r\n                  </tr>\r\n                </Fragment>\r\n              ))}\r\n          </table>\r\n        </Hidden>\r\n        <FullScreenDialog\r\n          header=\"Job Notes\"\r\n          uls={note}\r\n          open={openDialog}\r\n          handleClose={() => setOpenDialog(false)}\r\n        />\r\n      </div>\r\n      <Dialog fullWidth open={dialogOpen} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Pre-Production Work Items\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText></DialogContentText>\r\n          <div>\r\n            {preItems.map((w) => (\r\n              <div>\r\n                <td\r\n                  style={{\r\n                    marginTop: \"30px\",\r\n                    paddingTop: \"10px\",\r\n                    fontWeight: \"bolder\",\r\n                  }}\r\n                >\r\n                  {w.Name}\r\n                  {\" :\"}\r\n                </td>\r\n                {getWtItem(\r\n                  props.settings.ClaimOnPB,\r\n                  props.claimOnPB,\r\n                  w,\r\n                  currentJob\r\n                )}\r\n              </div>\r\n            ))}\r\n            <hr />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {\" \"}\r\n          <Button\r\n            onClick={() => {\r\n              setDialogOpen(false);\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default ProductionBoardPage;\r\n","import React, { Fragment } from \"react\";\r\nimport ProductionBoard from \"./ProductionBoardPage\";\r\nimport config from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Helper from \"../../components/logics/Helper\";\r\nimport Loading from \"../loading.js\";\r\n\r\nclass ProductionBoardContainer extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      jobs: [],\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getProductionBoardInfoByAPI();\r\n  }\r\n\r\n  getProductionBoardInfoByAPI = async () => {\r\n    var response = {};\r\n    try {\r\n      Helper.apiPost(\r\n        `${this.props.apiRoute}ProductionBoard/GetProductionBoardInfo`,\r\n        {},\r\n        \"\"\r\n      )\r\n        .then((res) => {\r\n          response = JSON.parse(res.data);\r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              jobs: response,\r\n            },\r\n            () => {\r\n              this.setState({\r\n                ...this.state,\r\n                loaded: true,\r\n              });\r\n            }\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Error in get production board data\");\r\n        });\r\n    } catch (err) {\r\n      if (err.response)\r\n        alert(\r\n          `Error in calling ESP API (production board)- ${err.response.data}`\r\n        );\r\n      else alert(`Error in calling ESP API (production board)- ${err}`);\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n  claimOnPB = async (jid, wid, jl, jobCode) => {\r\n    this.props.claimOnPB(jid, wid, jl, jobCode);\r\n  };\r\n  logoutFromPB = () => {\r\n    this.props.logoutFromPB();\r\n  };\r\n  render(props) {\r\n    return (\r\n      <Fragment>\r\n        {!this.state.loaded && <Loading mainRoute={this.props.mainRoute} />}\r\n        {this.state.loaded && (\r\n          <ProductionBoard\r\n            jobs={this.state.jobs}\r\n            settings={this.props.settings}\r\n            claimOnPB={this.claimOnPB}\r\n            logoutFromPB={this.props.logoutFromPB}\r\n          />\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductionBoardContainer;\r\n","import { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst gridSearchStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.black, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n\r\n  bolding: {\r\n    fontSize: \"0.9rem\",\r\n    \"&:hover\": {\r\n      //textShadow: '3px 3px 0px #ffd324',\r\n      cursor: \"pointer\",\r\n\r\n      //    transformOrigin: \"-100px -100px\",\r\n      //   transform: \"scale(1.05) translate(-17px, -10px)\",\r\n      zIndex: \"1000\",\r\n      // backgroundColor: \"#ddd\",\r\n      // backgroundImage: 'url(\"/work1.png\")',\r\n      //  backgroundRepeat: \"no-repeat\",\r\n      //  backgroundSize: \"90%\",\r\n\r\n      //    backgroundPosition: \"top\",\r\n    },\r\n  },\r\n  boxBolding: {\r\n    \"&:hover\": {\r\n      boxSizing: \"border-box\",\r\n      boxShadow: \"3px 3px #eee\",\r\n      borderBottom: \"2px  solid #5584c0\",\r\n      borderRight: \"2px  solid #5584c0\",\r\n      marginLeft: \"-2px\",\r\n      marginTop: \"-2px\",\r\n    },\r\n  },\r\n}));\r\nexport default gridSearchStyles;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport gridSearchStyles from \"../../components/controls/Styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { InputLabel, Switch } from \"@material-ui/core\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router\";\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\n\r\nexport default function Login(props) {\r\n  const classes = gridSearchStyles();\r\n  const [logout, setLogout] = useState(props.logoutChecked);\r\n  const history = useHistory();\r\n  const personList = props.loggingOut\r\n    ? props.items.filter((x) => x.IsLoggedIn)\r\n    : props.items;\r\n  function getLabel(e) {\r\n    var name = e.Name + (e.IsOnLeave ? \"(on leave)\" : \"\");\r\n\r\n    return e.LastClaimTime != null ? (\r\n      <Tooltip title={`Your last claim/ login was ${e.LastClaimTime} ago`}>\r\n        <span>\r\n          {name}{\" \"}\r\n          <span style={{ fontSize: \"small\" }}>\r\n            <br />\r\n            &nbsp;&nbsp;({e.LastClaimTime})\r\n          </span>\r\n        </span>\r\n      </Tooltip>\r\n    ) : (\r\n      <div>{name}</div>\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    setTimeout(() => {\r\n      props.goBackToStart(0);\r\n    }, 60000);\r\n  });\r\n  return (\r\n    <div>\r\n      <div className={classes.search}>\r\n        <Grid container spacing={1} style={{ backgroundColor: \"#ebedf1\" }}>\r\n          {(props.loggingOut || props.fromPB) && (\r\n            <Grid\r\n              item\r\n              lg={1}\r\n              sm={1}\r\n              xs={6}\r\n              style={{ fontSize: \"24px\", paddingTop: \"30px\" }}\r\n            >\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                style={{ textAlign: \"right\" }}\r\n                onClick={() => {\r\n                  history.push({\r\n                    pathname: `${props.mainRoute}productionBoard`,\r\n                  });\r\n                }}\r\n                startIcon={<ArrowBack />}\r\n              ></Button>\r\n            </Grid>\r\n          )}\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            sm={4}\r\n            xs={6}\r\n            style={{ fontSize: \"24px\", paddingTop: \"30px\" }}\r\n          >\r\n            <span\r\n              style={{ fontSize: \"24px\", padding: \"30px\", marginTop: \"30px\" }}\r\n            >\r\n              <b> Login</b>\r\n            </span>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={3}\r\n            xs={6}\r\n            style={{ marginTop: \"20px\", alignContent: \"right\" }}\r\n          ></Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            sm={4}\r\n            xs={12}\r\n            style={{ marginTop: \"20px\", alignContent: \"right\" }}\r\n          >\r\n            <InputLabel htmlFor=\"input-with-icon-adornment\">Search</InputLabel>\r\n            <Input\r\n              id=\"input-with-icon-adornment\"\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              }\r\n              onChange={props.searchNames}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        style={{ marginTop: 10, backgroundColor: \"#ebedf1\" }}\r\n      >\r\n        {personList &&\r\n          personList.map((e) => (\r\n            <Grid\r\n              item\r\n              lg={2}\r\n              sm={6}\r\n              xs={12}\r\n              key={e.OId}\r\n              style={{ padding: \"15px\" }}\r\n              className={classes.bolding}\r\n            >\r\n              <Box\r\n                borderRadius=\"5%\"\r\n                p={2}\r\n                key={e.OId}\r\n                className={classes.boxBolding}\r\n                boxShadow={2}\r\n                color=\"black\"\r\n                bgcolor={\r\n                  e.IsOnLeave ? \"#b4bebf\" : e.IsLoggedIn ? \"#9abf47\" : \"white\"\r\n                }\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  fontSize: \"1.2rem\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                onClick={() => {\r\n                  props.handleLogin(e.OId, e.IsOnLeave, logout);\r\n                }}\r\n              >\r\n                {getLabel(e)}\r\n              </Box>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography\r\n          variant=\"caption\"\r\n          component=\"div\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate variant.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function CircularStatic(props) {\r\n  const [progress] = React.useState(props.value);\r\n\r\n  // React.useEffect(() => {\r\n  //   const timer = setInterval(() => {\r\n  //     setProgress((prevProgress) =>\r\n  //       prevProgress >= 100 ? 0 : prevProgress + 10\r\n  //     );\r\n  //   }, 800);\r\n  //   return () => {\r\n  //     clearInterval(timer);\r\n  //   };\r\n  // }, []);\r\n\r\n  return <CircularProgressWithLabel value={progress} />;\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config\";\r\nimport Helper from \"./Helper\";\r\nclass ClaimLogic extends React.Component {\r\n  getJobItemsFromApi = async (jobId, worktypeId, workerId, route) => {\r\n    var response = {};\r\n    try {\r\n      return await Helper.apiPost(\r\n        `${route}Claim/GetJobItems`,\r\n        {\r\n          jobId: jobId,\r\n          WorkTypeId: worktypeId,\r\n          workerId: workerId,\r\n        },\r\n        \"\"\r\n      );\r\n    } catch (ex) {\r\n      if (ex.response)\r\n        alert(\r\n          `Error in calling ESP (Claim / Get Job items) API- ${ex.response.data}`\r\n        );\r\n      else\r\n        alert(\r\n          `Error in calling ESP (Claim / Get Job items) API- ${ex.message}`\r\n        );\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n\r\n  getJobsOfWorkerFromApi = async (\r\n    route,\r\n    workerId,\r\n    jobStage,\r\n    siteWork = false\r\n  ) => {\r\n    var data = {\r\n      id: workerId,\r\n      jobStage,\r\n    };\r\n    return await Helper.apiPost(\r\n      `${route}Claim/GetJobsOfWorker?id=${workerId}&jobStage=${jobStage}&siteWork=${siteWork}`,\r\n      data,\r\n      \"\"\r\n    );\r\n  };\r\n\r\n  submitClaimInAPI = async (\r\n    workerId,\r\n    jobId,\r\n    jobItems,\r\n    groupPercent,\r\n    comment,\r\n    logout,\r\n    route\r\n  ) => {\r\n    var value = {\r\n      workerId: workerId,\r\n      jobId: jobId,\r\n      jobItems: jobItems,\r\n      groupPercent: groupPercent,\r\n      comment: comment,\r\n      logout,\r\n    };\r\n    return await Helper.apiPost(\r\n      `${route}Claim/PostSubmitClaim`,\r\n      value,\r\n      \"Submit Claim Job\"\r\n    );\r\n  };\r\n  submitFullJobClaimInAPI = async (workerId, jobId, comment, route) => {\r\n    var value = {\r\n      workerId: workerId,\r\n      jobId: jobId,\r\n      comment: comment,\r\n    };\r\n    return await Helper.apiPost(\r\n      `${route}Claim/PostClaimWholeJob`,\r\n      value,\r\n      \"Submit Claim Full Job\"\r\n    );\r\n  };\r\n\r\n  submitAdminJobClaimInAPI = async (\r\n    claimingOId,\r\n    OId,\r\n    comment,\r\n    logout,\r\n    route\r\n  ) => {\r\n    var value = {\r\n      workerId: claimingOId,\r\n      WorkTypeId: OId,\r\n      comment: comment,\r\n      logout,\r\n    };\r\n    return await Helper.apiPost(\r\n      `${route}Claim/PostSubmitClaimAdminTask`,\r\n      value,\r\n      \"Submit Admin Job\"\r\n    );\r\n  };\r\n  GetClaimedByAPI = async (jobCode, worktypId, route) => {\r\n    var value = {\r\n      jobCode,\r\n      worktypId,\r\n    };\r\n    return Helper.apiPost(\r\n      `${route}Claim/GetWorkTypeClaimedBy?jobCode=${jobCode}&worktypeId=${worktypId}`,\r\n      value,\r\n      \"Get Work Type Claimed by\"\r\n    );\r\n  };\r\n  GetPerfStatByAPI = async (id, from, to, route) => {\r\n    var value = {\r\n      id,\r\n      from,\r\n      to,\r\n    };\r\n    return Helper.apiPost(\r\n      `${route}PerformanceStat/GetWorkerPS?id=${id}&from=${from}&to=${to}`,\r\n      value,\r\n      \"Get performance stat\"\r\n    );\r\n  };\r\n  render() {\r\n    return <din></din>;\r\n  }\r\n}\r\n//module.exports={_:LoginLogics};\r\nconst Loginlogics = new ClaimLogic();\r\nexport default Loginlogics;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport gridSearchStyles from \"../../components/controls/Styles\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport FullScreenDialog from \"../../components/controls/FullScreenDialog\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\r\nimport CircularProgressWithLabel from \"../../components/controls/CircularProgressWithLabel\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport ClaimLogic from \"../../components/logics/ClaimLogic\";\r\n\r\nexport default function Worktypes(props) {\r\n  const classes = gridSearchStyles();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    setTimeout(() => {\r\n      props.goBackToStart(2);\r\n    }, 60000);\r\n  });\r\n  const [note, setNote] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [items, setSearchItems] = useState(props.workTypes);\r\n  const [searchVal, setSearcVal] = useState(\"\");\r\n\r\n  function searchItems(event) {\r\n    var txt = event.target.value;\r\n    setSearcVal(txt);\r\n    var workTypes =\r\n      event.target.value.length > 0\r\n        ? props.workTypes.filter((t) =>\r\n            t.Name.toLowerCase().includes(txt.toLowerCase())\r\n          )\r\n        : props.workTypes;\r\n\r\n    setSearchItems(workTypes);\r\n  }\r\n  function clearSearch() {\r\n    setSearchItems([]);\r\n    setSearchItems(props.workTypes);\r\n    setSearcVal(\"\");\r\n  }\r\n  function handleWorktypeNoteClicked(id, code, route) {\r\n    const response = ClaimLogic.GetClaimedByAPI(code, id, route);\r\n    response.then((e) => {\r\n      setNote(JSON.parse(e.data));\r\n      setOpenDialog(true);\r\n    });\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ backgroundColor: \"#fff\" }}>\r\n        <CardContent>\r\n          <Grid container spacing={2}>\r\n            <Grid ml={0} item lg={1} sm={4} xs={4}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                style={{ textAlign: \"right\" }}\r\n                onClick={() => {\r\n                  props.handleBack(1);\r\n                }}\r\n                startIcon={<ArrowBack />}\r\n              ></Button>\r\n            </Grid>\r\n            <Grid item lg={7} sm={4} xs={4}>\r\n              <span style={{ fontSize: \"22px\", marginTop: \"30px\" }}>\r\n                <b>\r\n                  Work&nbsp;Type{\" \"}\r\n                  {props.menuIsOpen ? \"\" : \" (\" + props.claimingName + \")\"}{\" \"}\r\n                </b>\r\n              </span>\r\n            </Grid>\r\n            <Hidden only={[\"xl\", \"lg\", \"md\"]}>\r\n              <Grid\r\n                ml={0}\r\n                item\r\n                lg={1}\r\n                sm={4}\r\n                xs={4}\r\n                style={{ textAlign: \"right\" }}\r\n              >\r\n                {/* <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={props.handleFullJob}\r\n                  startIcon={<PlaylistAddCheckIcon />}\r\n                >\r\n                  FullJob\r\n                </Button> */}\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item lg={3} sm={12} xs={12}>\r\n              <IconButton sx={{ p: \"10px\" }} aria-label=\"menu\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n              <InputBase\r\n                sx={{ ml: 1, flex: 1 }}\r\n                id=\"worktypeSearchVal\"\r\n                placeholder=\"Search\"\r\n                variant=\"outlined\"\r\n                value={searchVal}\r\n                onChange={searchItems}\r\n              />\r\n              <IconButton\r\n                color=\"primary\"\r\n                sx={{ p: \"10px\" }}\r\n                aria-label=\"directions\"\r\n                onClick={() => {\r\n                  clearSearch();\r\n                }}\r\n              >\r\n                <CancelIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Hidden only={[\"sm\", \"xs\"]}>\r\n              <Grid ml={0} item lg={1} sm={1} style={{ textAlign: \"right\" }}>\r\n                {/* <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={props.handleFullJob}\r\n                  startIcon={<PlaylistAddCheckIcon />}\r\n                >\r\n                  FullJob\r\n                </Button> */}\r\n              </Grid>\r\n            </Hidden>\r\n          </Grid>\r\n\r\n          <hr />\r\n          <h2>Primary</h2>\r\n          <Grid container spacing={1}>\r\n            {items &&\r\n              items\r\n                .filter(\r\n                  (x) =>\r\n                    x.Progress < 100 && props.primaryWorktypeIds.includes(x.OId)\r\n                )\r\n\r\n                .sort(function (a, b) {\r\n                  return a.CategoryOrder - b.CategoryOrder;\r\n                })\r\n                .map((e) => (\r\n                  <Grid\r\n                    item\r\n                    lg={2}\r\n                    sm={6}\r\n                    xs={12}\r\n                    key={e.OId}\r\n                    className={classes.bolding}\r\n                  >\r\n                    <Box\r\n                      p={4}\r\n                      borderRadius=\"5%\"\r\n                      className={classes.boxBolding}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        fontSize: \"0.9rem\",\r\n                        textAlign: \"center\",\r\n                        backgroundColor:\r\n                          e.CategoryName == \"production\"\r\n                            ? \"#9abf47\"\r\n                            : e.CategoryName == \"preproduction\"\r\n                            ? \"#b3b31b\"\r\n                            : e.CategoryName == \"postproduction\"\r\n                            ? \"#adadad\"\r\n                            : \"white\",\r\n                      }}\r\n                      onClick={() => {\r\n                        props.handleWorkTypeClick(e.OId);\r\n                      }}\r\n                      // onDelete={()=>{}}\r\n\r\n                      clickable\r\n                    >\r\n                      {e.Name}\r\n                      <hr />\r\n                      <Grid container>\r\n                        <Grid item lg={6} sm={5} xs={5}>\r\n                          <IconButton color=\"inherit\">\r\n                            <CommentIcon\r\n                              onClick={(w) => {\r\n                                handleWorktypeNoteClicked(\r\n                                  e.OId,\r\n                                  props.jobCode,\r\n                                  props.apiRoute\r\n                                );\r\n                                w.stopPropagation();\r\n                              }}\r\n                            />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid item lg={6} sm={6} xs={6}>\r\n                          <CircularProgressWithLabel value={e.Progress} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n                ))}\r\n          </Grid>\r\n          <h2>Secondary</h2>\r\n          <Grid container spacing={1}>\r\n            {items &&\r\n              items\r\n                .filter(\r\n                  (x) =>\r\n                    x.Progress < 100 &&\r\n                    props.secondaryWorktypeIds.includes(x.OId)\r\n                )\r\n\r\n                .sort(function (a, b) {\r\n                  return a.CategoryOrder - b.CategoryOrder;\r\n                })\r\n                .map((e) => (\r\n                  <Grid\r\n                    item\r\n                    lg={2}\r\n                    sm={6}\r\n                    xs={12}\r\n                    key={e.OId}\r\n                    className={classes.bolding}\r\n                  >\r\n                    <Box\r\n                      p={4}\r\n                      borderRadius=\"5%\"\r\n                      className={classes.boxBolding}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        fontSize: \"0.9rem\",\r\n                        textAlign: \"center\",\r\n                        backgroundColor:\r\n                          e.CategoryName == \"production\"\r\n                            ? \"#9abf47\"\r\n                            : e.CategoryName == \"preproduction\"\r\n                            ? \"#b3b31b\"\r\n                            : e.CategoryName == \"postproduction\"\r\n                            ? \"#adadad\"\r\n                            : \"white\",\r\n                      }}\r\n                      onClick={() => {\r\n                        props.handleWorkTypeClick(e.OId);\r\n                      }}\r\n                      // onDelete={()=>{}}\r\n\r\n                      clickable\r\n                    >\r\n                      {e.Name}\r\n                      <hr />\r\n                      <Grid container>\r\n                        <Grid item lg={6} sm={5} xs={5}>\r\n                          <IconButton color=\"inherit\">\r\n                            <CommentIcon\r\n                              onClick={(w) => {\r\n                                handleWorktypeNoteClicked(\r\n                                  e.OId,\r\n                                  props.jobCode,\r\n                                  props.apiRoute\r\n                                );\r\n                                w.stopPropagation();\r\n                              }}\r\n                            />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid item lg={6} sm={6} xs={6}>\r\n                          <CircularProgressWithLabel value={e.Progress} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n                ))}\r\n          </Grid>\r\n        </CardContent>\r\n        <FullScreenDialog\r\n          header=\"Claimed By\"\r\n          textList={note}\r\n          open={openDialog}\r\n          handleClose={() => setOpenDialog(false)}\r\n        />\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { withStyles, fade } from \"@material-ui/core/styles\";\r\nimport Helper from \"../../components/logics/Helper\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\n\r\nconst AirbnbSlider = withStyles({\r\n  root: {\r\n    color: \"#196dc4\",\r\n    height: 3,\r\n    padding: \"13px 0\",\r\n  },\r\n  thumb: {\r\n    height: 27,\r\n    width: 27,\r\n    backgroundColor: \"#fff\",\r\n    border: \"1px solid currentColor\",\r\n    marginTop: -12,\r\n    marginLeft: -13,\r\n    boxShadow: \"#ebebeb 0 2px 2px\",\r\n    \"&:focus, &:hover, &$active\": {\r\n      boxShadow: \"#eee 0 2px 3px 1px\",\r\n    },\r\n    \"& .bar\": {\r\n      // display: inline-block !important;\r\n      height: 9,\r\n      width: 1,\r\n      backgroundColor: \"currentColor\",\r\n      marginLeft: 1,\r\n      marginRight: 1,\r\n    },\r\n  },\r\n  active: {},\r\n  track: {\r\n    height: 3,\r\n  },\r\n  valueLabel: {\r\n    left: \"calc(-50% + 8px)\",\r\n  },\r\n  rail: {\r\n    color: \"#eee\",\r\n    opacity: 1,\r\n    height: 3,\r\n  },\r\n})(Slider);\r\n\r\nfunction AirbnbThumbComponent(props) {\r\n  return (\r\n    <span {...props}>\r\n      {/* //     <span className=\"bar\" />\r\n    //     <span className=\"bar\" />\r\n    //     <span className=\"bar\" /> */}\r\n    </span>\r\n  );\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.black, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n});\r\nclass JobItems extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      jobItems: props.items,\r\n      changed: props.items.some((x) => x.Progress100 !== x.Main_Progress100),\r\n      groupPercent: 0,\r\n      searchVal: \"\",\r\n    };\r\n  }\r\n  mainJobItems = () => [];\r\n  componentWillMount() {\r\n    this.setState({\r\n      //groupPercent: this.groupSliderValue(),\r\n      groupPercent: this.props.totalProgress,\r\n    });\r\n    this.mainJobItems = this.state.jobItems;\r\n    setTimeout(() => {\r\n      this.props.goBackToStart(3);\r\n    }, 60000);\r\n  }\r\n  componentDidMount() {}\r\n  checkChange = (item) => {\r\n    for (var i = 0; i < item.length; i++) {\r\n      if (item[i].Progress100 !== item[i].Main_Progress100) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  handleChange = (val, inx) => {\r\n    const items = this.state.jobItems;\r\n    if (val >= items[inx].Main_Progress100 && val <= 100)\r\n      items[inx].Progress100 = parseInt(val);\r\n    var changed = this.checkChange(items);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: items,\r\n      changed,\r\n      groupPercent: this.groupSliderValue(),\r\n    });\r\n  };\r\n  handleBtn = (val, inx) => {\r\n    let items = this.state.jobItems;\r\n\r\n    if (!items[inx].Progress100) items[inx].Progress100 = 0;\r\n    if (items[inx].Progress100 + val >= items[inx].Main_Progress100) {\r\n      if (items[inx].Progress100 + val > 100) {\r\n        items[inx].Progress100 = 100;\r\n      } else {\r\n        items[inx].Progress100 = this.roundNumber(\r\n          items[inx].Progress100 + val,\r\n          items[inx].Progress100\r\n        );\r\n      }\r\n      var changed = this.checkChange(items);\r\n      this.setState({\r\n        ...this.state,\r\n        jobItems: items,\r\n        changed,\r\n      });\r\n    }\r\n  };\r\n  handleComplete = (inx) => {\r\n    let items = this.state.jobItems;\r\n\r\n    items[inx].Progress100 = 100;\r\n\r\n    var changed = this.checkChange(items);\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: items,\r\n      changed,\r\n    });\r\n  };\r\n\r\n  roundNumber(v, g) {\r\n    return v > g\r\n      ? v % this.props.settings.IncrementPercentage == 0\r\n        ? v\r\n        : Math.ceil(\r\n            (v - this.props.settings.IncrementPercentage - 1) /\r\n              this.props.settings.IncrementPercentage\r\n          ) * this.props.settings.IncrementPercentage\r\n      : v % this.props.settings.IncrementPercentage == 0\r\n      ? v\r\n      : Math.floor(\r\n          (v + this.props.settings.IncrementPercentage - 1) /\r\n            this.props.settings.IncrementPercentage\r\n        ) * this.props.settings.IncrementPercentage;\r\n  }\r\n  handleGroupedChanged(v, btn = false) {\r\n    if (v < 0) return false;\r\n    if (v > 100) v = 100;\r\n    if (v < this.props.totalProgress) return false;\r\n    const items = this.state.jobItems;\r\n    v = btn ? this.roundNumber(v, this.state.groupPercent) : v;\r\n\r\n    var changed = v != this.props.totalProgress;\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: items,\r\n      groupPercent: v,\r\n      changed,\r\n    });\r\n  }\r\n  handleChanged(v) {\r\n    if (v > 100 || v < 0) return false;\r\n\r\n    //const items = this.state.jobItems;\r\n    // this.state.jobItems.map((e, i) => {\r\n    //   if (items[i].Main_Progress100 <= v) items[i].Progress100 = v;\r\n    // });\r\n    //  var changed = items.some((e) => e.Progress100 !== e.Main_Progress100);\r\n    this.setState({\r\n      ...this.state,\r\n      //    jobItems: items,\r\n      groupPercent: v,\r\n      //   changed,\r\n    });\r\n  }\r\n  groupSliderValue() {\r\n    var val =\r\n      this.state.jobItems.length > 0\r\n        ? Math.round(\r\n            this.state.jobItems\r\n              .map((e) => e.Progress100)\r\n              .reduce((a, b) => a + b) / this.state.jobItems.length\r\n          )\r\n        : 0;\r\n    return val;\r\n  }\r\n\r\n  searchItems = (e) => {\r\n    var txt = e.target.value;\r\n    var jItems =\r\n      e.target.value.length > 0\r\n        ? this.mainJobItems.filter((t) => t.Name.toLowerCase().includes(txt))\r\n        : this.mainJobItems;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: jItems,\r\n      searchVal: txt,\r\n    });\r\n  };\r\n  clearSearch = () => {\r\n    this.setState([]);\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: this.mainJobItems,\r\n      searchVal: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    var allItemsV6 = this.state.jobItems\r\n      .map((e) => e.StdTime)\r\n      .reduce(function (a, b) {\r\n        return a + b;\r\n      }, 0);\r\n    function valuetext(value) {\r\n      return `${value}%`;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Card style={{ backgroundColor: \"#fff\" }}>\r\n          <CardContent>\r\n            <Table aria-label=\"customized table\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell colSpan=\"2\">\r\n                    <Grid container spacing={2}>\r\n                      <Grid ml={0} item lg={1} sm={4} xs={3}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          style={{ textAlign: \"right\" }}\r\n                          onClick={() => {\r\n                            this.props.handleBack(2);\r\n                          }}\r\n                          startIcon={<ArrowBack />}\r\n                        ></Button>\r\n                      </Grid>\r\n                      <Grid item lg={7} sm={8} xs={8}>\r\n                        <span style={{ fontSize: \"24px\", marginTop: \"30px\" }}>\r\n                          <b>\r\n                            Job&nbsp;Items{\" \"}\r\n                            {\" (\" +\r\n                              this.props.claimingName +\r\n                              \"- \" +\r\n                              this.props.worktypeName +\r\n                              \")\"}{\" \"}\r\n                          </b>\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item lg={3} sm={12} xs={12}>\r\n                        <IconButton sx={{ p: \"10px\" }} aria-label=\"menu\">\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                        <InputBase\r\n                          sx={{ ml: 1, flex: 1 }}\r\n                          id=\"worktypeSearchVal\"\r\n                          placeholder=\"Search\"\r\n                          variant=\"outlined\"\r\n                          value={this.state.searchVal}\r\n                          onChange={this.searchItems}\r\n                        />\r\n                        <IconButton\r\n                          color=\"primary\"\r\n                          sx={{ p: \"10px\" }}\r\n                          aria-label=\"directions\"\r\n                          onClick={this.clearSearch}\r\n                        >\r\n                          <CancelIcon />\r\n                        </IconButton>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        lg={1}\r\n                        sm={12}\r\n                        xs={12}\r\n                        style={{\r\n                          justifyContent: \"end\",\r\n\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          disabled={!this.state.changed}\r\n                          style={{\r\n                            color: \"#196dc4\",\r\n                            backgroundColor: \"#fff\",\r\n                          }}\r\n                          startIcon={<SaveIcon />}\r\n                          onClick={() =>\r\n                            this.props.handleSave(\r\n                              this.state.jobItems,\r\n                              this.state.groupPercent,\r\n                              this.props.jobLevel\r\n                            )\r\n                          }\r\n                        >\r\n                          Claim\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </TableCell>\r\n                </TableRow>\r\n                {this.props.finishedItems &&\r\n                  this.props.finishedItems.length > 0 && (\r\n                    <Accordion>\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                      >\r\n                        <Typography>\r\n                          <b>Completed Items</b>\r\n                        </Typography>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        <TableRow hover=\"true\" m={1}>\r\n                          <TableCell\r\n                            style={{\r\n                              width: \"100%\",\r\n                              marginButtm: \"40px!important\",\r\n                            }}\r\n                          >\r\n                            <ul>\r\n                              {this.props.finishedItems.map((e, inx) => (\r\n                                <li>{e}</li>\r\n                              ))}\r\n                            </ul>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  )}\r\n                {this.state.jobItems && this.state.jobItems.length >= 1 && (\r\n                  <TableRow\r\n                    hover=\"true\"\r\n                    m={1}\r\n                    style={{\r\n                      backgroundColor: \"#eee\",\r\n                    }}\r\n                  >\r\n                    <TableCell\r\n                      style={{ width: \"100%\", marginButtom: \"40px!important\" }}\r\n                      colSpan=\"2\"\r\n                    >\r\n                      {this.props.jobLevel && (\r\n                        <div>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={12} lg={2}>\r\n                              All Items{\" \"}\r\n                              {this.props.settings.ShowStandardTime &&\r\n                                \" (\" +\r\n                                  Helper.timeConvert(\r\n                                    Math.round(allItemsV6 / 60)\r\n                                  ) +\r\n                                  \")\"}\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} lg={5}>\r\n                              <AirbnbSlider\r\n                                ThumbComponent={AirbnbThumbComponent}\r\n                                aria-label=\"ios slider\"\r\n                                value={this.state.groupPercent}\r\n                                getAriaValueText={valuetext}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"on\"\r\n                                step={this.props.settings.IncrementPercentage}\r\n                                marks\r\n                                min={0}\r\n                                max={100}\r\n                                onChangeCommitted={(e, val) =>\r\n                                  this.handleGroupedChanged(val)\r\n                                }\r\n                                onChange={(e, val) => this.handleChanged(val)}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} lg={2}>\r\n                              <OutlinedInput\r\n                                value={this.state.groupPercent}\r\n                                onChange={(event) =>\r\n                                  this.handleGroupedChanged(event.target.value)\r\n                                }\r\n                                type=\"number\"\r\n                                name={`pgs`}\r\n                                fullWidth\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={4}\r\n                              sm={4}\r\n                              lg={1}\r\n                              style={{ textAlign: \"right\" }}\r\n                            >\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                onClick={() =>\r\n                                  this.handleGroupedChanged(\r\n                                    parseInt(this.state.groupPercent) -\r\n                                      this.props.settings.IncrementPercentage,\r\n                                    true\r\n                                  )\r\n                                }\r\n                                startIcon={<RemoveIcon />}\r\n                              ></Button>\r\n                            </Grid>\r\n                            <Grid item xs={4} sm={4} lg={1}>\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() =>\r\n                                  this.handleGroupedChanged(\r\n                                    parseInt(this.state.groupPercent) +\r\n                                      this.props.settings.IncrementPercentage,\r\n                                    true\r\n                                  )\r\n                                }\r\n                                startIcon={<AddIcon />}\r\n                              ></Button>\r\n                            </Grid>\r\n                            <Grid item xs={4} sm={4} lg={1}>\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"#196dc4\"\r\n                                border=\"#196dc4\"\r\n                                backgroundColor=\"#fff\"\r\n                                onClick={() => this.handleGroupedChanged(100)}\r\n                              >\r\n                                100%\r\n                              </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </div>\r\n                      )}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n                {this.props.jobLevel !== true &&\r\n                  this.state.jobItems &&\r\n                  this.state.jobItems.map((e, inx) => (\r\n                    <TableRow hover=\"true\">\r\n                      <TableCell style={{ width: \"100%\" }} colSpan=\"2\">\r\n                        <Grid container spacing={2}>\r\n                          <Grid\r\n                            item\r\n                            xs={12}\r\n                            sm={12}\r\n                            lg={2}\r\n                            style={{ marginTop: \"20px\" }}\r\n                          >\r\n                            {e.ItemNumber}-{e.Name}\r\n                            {this.props.settings.ShowStandardTime &&\r\n                              \"(\" +\r\n                                Helper.timeConvert(Math.round(e.StdTime / 60)) +\r\n                                \")\"}\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={12}\r\n                            sm={12}\r\n                            lg={5}\r\n                            style={{ marginTop: \"20px\" }}\r\n                          >\r\n                            <AirbnbSlider\r\n                              ThumbComponent={AirbnbThumbComponent}\r\n                              aria-label=\"ios slider\"\r\n                              value={e.Progress100}\r\n                              getAriaValueText={valuetext}\r\n                              aria-labelledby=\"discrete-slider\"\r\n                              valueLabelDisplay=\"on\"\r\n                              step={this.props.settings.IncrementPercentage}\r\n                              marks\r\n                              min={0}\r\n                              max={100}\r\n                              onChangeCommitted={(e, val) =>\r\n                                this.handleChange(val, inx)\r\n                              }\r\n                              onChange={(e, val) => this.handleChange(val, inx)}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={12} lg={2}>\r\n                            <OutlinedInput\r\n                              value={e.Progress100 || \"\"}\r\n                              onChange={(event) =>\r\n                                this.handleChange(event.target.value, inx)\r\n                              }\r\n                              type=\"number\"\r\n                              name={`pgs-${e.name}`}\r\n                              key={inx}\r\n                              fullWidth\r\n                            />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={4}\r\n                            sm={4}\r\n                            lg={1}\r\n                            style={{ textAlign: \"right\" }}\r\n                          >\r\n                            <IconButton\r\n                              aria-label=\"remove\"\r\n                              onClick={() =>\r\n                                this.handleBtn(\r\n                                  -this.props.settings.IncrementPercentage,\r\n                                  inx\r\n                                )\r\n                              }\r\n                            >\r\n                              <RemoveIcon />\r\n                            </IconButton>\r\n                          </Grid>\r\n                          <Grid item xs={4} sm={4} lg={1}>\r\n                            <IconButton\r\n                              aria-label=\"add\"\r\n                              onClick={() =>\r\n                                this.handleBtn(\r\n                                  this.props.settings.IncrementPercentage,\r\n                                  inx\r\n                                )\r\n                              }\r\n                            >\r\n                              <AddIcon />\r\n                            </IconButton>\r\n                          </Grid>\r\n                          <Grid item xs={4} sm={4} lg={1}>\r\n                            <Button\r\n                              borderRadius=\"5%\"\r\n                              variant=\"contained\"\r\n                              style={{\r\n                                backgroundColor: \"white\",\r\n                                color: \"#196dc4\",\r\n                                borderRadius: \"5%\",\r\n                                border: \"1px solid #196dc4\",\r\n                              }}\r\n                              onClick={() => this.handleComplete(inx)}\r\n                            >\r\n                              100%\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </CardContent>\r\n          <CardActions\r\n            style={{ justifyContent: \"flex-end\", marginRight: \"20px\" }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              disabled={!this.state.changed}\r\n              style={{\r\n                color: \"#196dc4\",\r\n                backgroundColor: \"#fff\",\r\n              }}\r\n              startIcon={<SaveIcon />}\r\n              onClick={() =>\r\n                this.props.handleSave(\r\n                  this.state.jobItems,\r\n                  this.state.groupPercent,\r\n                  this.props.jobLevel\r\n                )\r\n              }\r\n            >\r\n              Claim\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n//export default JobItems;\r\nexport default withStyles(styles, { withTheme: true })(JobItems);\r\n","import * as React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  BarSeries,\r\n  Title,\r\n  Legend,\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Stack, Animation } from \"@devexpress/dx-react-chart\";\r\n\r\nconst legendStyles = () => ({\r\n  root: {\r\n    display: \"flex\",\r\n    margin: \"auto\",\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\nconst legendRootBase = ({ classes, ...restProps }) => (\r\n  <Legend.Root {...restProps} className={classes.root} />\r\n);\r\nconst Root = withStyles(legendStyles, { name: \"LegendRoot\" })(legendRootBase);\r\nconst legendLabelStyles = () => ({\r\n  label: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n});\r\nconst legendLabelBase = ({ classes, ...restProps }) => (\r\n  <Legend.Label className={classes.label} {...restProps} />\r\n);\r\nconst Label = withStyles(legendLabelStyles, { name: \"LegendLabel\" })(\r\n  legendLabelBase\r\n);\r\n\r\nexport default class Barchart extends React.PureComponent {\r\n  render() {\r\n    // const { data: chartData } = this.state;\r\n\r\n    return (\r\n      <Paper>\r\n        <Chart data={this.props.Columns}>\r\n          <ArgumentAxis />\r\n          <ValueAxis />\r\n\r\n          <BarSeries\r\n            name=\"Actual\"\r\n            valueField=\"actual\"\r\n            argumentField=\"country\"\r\n            color=\"#9abf47\"\r\n          />\r\n          <BarSeries\r\n            name=\"V6. Std\"\r\n            valueField=\"std\"\r\n            argumentField=\"country\"\r\n            color=\"#adadad\"\r\n          />\r\n\r\n          <Animation />\r\n          <Legend\r\n            position=\"bottom\"\r\n            rootComponent={Root}\r\n            labelComponent={Label}\r\n          />\r\n          <Title text=\"Performance\" />\r\n          <Stack />\r\n        </Chart>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport DirectionsWalkIcon from \"@material-ui/icons/DirectionsWalk\";\r\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Fragment } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Helper from \"../../components/logics/Helper\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Barchart from \"../../components/controls/Barchart\";\r\n\r\nconst useStyles = makeStyles({\r\n  btn: {\r\n    marginRight: \"20px\",\r\n    marginLeft: \"20px\",\r\n    backgroundColor: \"white\",\r\n    color: \"#196dc4\",\r\n  },\r\n  textarea: {\r\n    display: \"block\",\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n    resize: \"both\",\r\n    minHight: \"40px\",\r\n    lineHeight: \"20px\",\r\n  },\r\n  root: { backgroundColor: \"#fff\" },\r\n});\r\n\r\nexport default function Summary(props) {\r\n  const [comment, setComment] = useState(\"\");\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    setTimeout(() => {\r\n      props.goBackToStart(4);\r\n    }, 60000);\r\n  });\r\n  var num = 0;\r\n  var avgStd = 0;\r\n  var changedItems = props.claimingItems.filter(\r\n    (x) => x.Progress100 !== x.Main_Progress100\r\n  ).length;\r\n\r\n  const totalminute =\r\n    props.totalPhyCalimgMinutes / (props.jobLevel ? 1 : changedItems);\r\n  const chartData = [];\r\n  function space(n) {\r\n    var s = \"\";\r\n    for (var i = 0; i < n; i++) s += String.fromCharCode(0);\r\n    return s;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {window.scrollTo(0, 0)}\r\n\r\n      <Card className={classes.root}>\r\n        <Grid container spacing={3} style={{ margin: \"30px\" }}>\r\n          <Grid item lg={1} sm={2} xs={4}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                props.handleBack(\r\n                  props.isFullJob ? 2 : props.isAdminJob ? 1 : 3\r\n                );\r\n              }}\r\n              startIcon={<ArrowBack />}\r\n            ></Button>\r\n          </Grid>\r\n          <Grid item lg={10} sm={10} xs={8}>\r\n            <span style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>\r\n              <b>Claim</b>\r\n            </span>\r\n          </Grid>\r\n        </Grid>\r\n        <hr />\r\n        <CardActions style={{ justifyContent: \"flex-end\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            className={classes.btn}\r\n            startIcon={<SaveIcon />}\r\n            onClick={() => props.handleSubmit(comment, props.isAdminJob)}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            className={classes.btn}\r\n            style={{ color: \"white\", backgroundColor: \"#196dc4\" }}\r\n            startIcon={<MeetingRoomIcon />}\r\n            onClick={() => props.handleSubmit(comment, props.isAdminJob, true)}\r\n          >\r\n            Save & Logout\r\n          </Button>\r\n        </CardActions>\r\n        <CardActions>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={9} sm={12} xs={12}>\r\n              <DirectionsWalkIcon />\r\n              <span style={{ fontSize: \"1rem\" }}>\r\n                {\" \"}\r\n                <b>Job: </b> {props.jobName}\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n        </CardActions>\r\n        <CardContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={6} sm={12} xs={12}>\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <AccessibilityNewIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                        Worker\r\n                      </Typography>\r\n                    }\r\n                    secondary={\r\n                      <Typography style={{ fontSize: \"1rem\" }}>\r\n                        {props.claimingName}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n                {!props.isFullJob && (\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <BuildIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                          Work Type\r\n                        </Typography>\r\n                      }\r\n                      secondary={\r\n                        <Typography style={{ fontSize: \"1rem\" }}>\r\n                          {props.worktypeName}\r\n                        </Typography>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                )}\r\n\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n                {/* {props.isFullJob && (\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <DoneAllIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                          Claiming Full Job\r\n                          {\r\n                            <div>\r\n                              <span>(</span>\r\n                              {Helper.timeConvert(props.totalPhyCalimgMinutes)}\r\n                              <span>)</span>\r\n                            </div>\r\n                          }\r\n                        </Typography>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                )} */}\r\n                {!props.isAdminJob && props.jobLevel && (\r\n                  // const avgPrg=props.claimingItems.map((e) => (e.\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <DoneAllIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                          Claiming\r\n                        </Typography>\r\n                      }\r\n                      secondary={\r\n                        <Fragment>\r\n                          <Typography style={{ fontSize: \"1rem\" }}>\r\n                            {props.mainPercent}% to:\r\n                            {props.groupPercent}% {\" took: \"}\r\n                            {Helper.timeConvert(totalminute)}\r\n                            {\" - Std: \"}\r\n                            {Helper.timeConvert(\r\n                              (props.claimingItems.reduce(\r\n                                (a, v) => (a = a + v.StdTime),\r\n                                0\r\n                              ) *\r\n                                (props.groupPercent - props.mainPercent)) /\r\n                                6000\r\n                            )}\r\n                          </Typography>\r\n                        </Fragment>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                )}\r\n                {!props.isAdminJob && !props.jobLevel && (\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <DoneAllIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                          Claiming\r\n                        </Typography>\r\n                      }\r\n                      secondary={props.claimingItems\r\n                        .filter((x) => x.Progress100 !== x.Main_Progress100)\r\n                        .map((e) => (\r\n                          <Fragment>\r\n                            <Typography key={e.id} style={{ fontSize: \"1rem\" }}>\r\n                              {e.Name}: ({e.Main_Progress100}% to:\r\n                              {e.Progress100}% {\") took: \"}\r\n                              {Helper.timeConvert(totalminute)}\r\n                              {\" - Std: \"}\r\n                              {Helper.timeConvert(\r\n                                (e.StdTime *\r\n                                  (e.Progress100 - e.Main_Progress100)) /\r\n                                  6000\r\n                              )}\r\n                            </Typography>\r\n\r\n                            <span style={{ fontSize: \"0.0rem\" }}>\r\n                              {\r\n                                (num =\r\n                                  chartData.filter((x) => x.name == e.Name)\r\n                                    .length + 1)\r\n                              }\r\n                              {!props.jobLevel &&\r\n                                chartData.push({\r\n                                  id: e.OId,\r\n                                  name: e.Name,\r\n                                  country:\r\n                                    num > 1 ? e.Name + space(num) : e.Name,\r\n                                  actual: totalminute,\r\n                                  std:\r\n                                    (e.StdTime *\r\n                                      (e.Progress100 - e.Main_Progress100)) /\r\n                                    6000,\r\n                                })}\r\n                            </span>\r\n                          </Fragment>\r\n                        ))}\r\n                    />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n              {props.jobLevel && (\r\n                <span style={{ fontSize: \"0.0rem\" }}>\r\n                  {chartData.push({\r\n                    country: props.worktypeName,\r\n                    actual: totalminute,\r\n                    std:\r\n                      (props.claimingItems.reduce(\r\n                        (a, v) => (a = a + v.StdTime),\r\n                        0\r\n                      ) *\r\n                        (props.groupPercent - props.mainPercent)) /\r\n                      6000,\r\n                  })}\r\n                </span>\r\n              )}\r\n              {props.settings.PSEnableIndividual && (\r\n                <Barchart Columns={chartData} Title=\"Performance\" />\r\n              )}\r\n              {/* <Hidden only={[\"xs\"]}>\r\n                 <Barchart Columns={data} Title=\"Performance\" /> \r\n              </Hidden> */}\r\n            </Grid>\r\n            <Grid item lg={5} sm={12} xs={12}>\r\n              <TextareaAutosize\r\n                aria-label=\"minimum height\"\r\n                style={{ fontSize: \"20px\" }}\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n                className={classes.textarea}\r\n                rowsMin={20}\r\n                placeholder=\"Comment\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions style={{ justifyContent: \"flex-end\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            className={classes.btn}\r\n            startIcon={<SaveIcon />}\r\n            onClick={() => props.handleSubmit(comment, props.isAdminJob)}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            className={classes.btn}\r\n            style={{ color: \"white\", backgroundColor: \"#196dc4\" }}\r\n            startIcon={<MeetingRoomIcon />}\r\n            onClick={() => props.handleSubmit(comment, props.isAdminJob, true)}\r\n          >\r\n            Save & Logout\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\n\r\nimport gridSearchStyles from \"../../components/controls/Styles\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport FullScreenDialog from \"../../components/controls/FullScreenDialog\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport CallMadeOutlinedIcon from \"@mui/icons-material/CallMadeOutlined\";\r\nimport SubdirectoryArrowLeftOutlinedIcon from \"@mui/icons-material/SubdirectoryArrowLeftOutlined\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport CircularProgressWithLabel from \"../../components/controls/CircularProgressWithLabel\";\r\nimport ClaimLogic from \"../../components/logics/ClaimLogic\";\r\nimport Loading from \"../loading\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport HomeWorkIcon from \"@mui/icons-material/HomeWork\";\r\n\r\nexport default function DividedJobs(props) {\r\n  return (\r\n    <Accordion defaultExpanded={true}>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\"\r\n      >\r\n        <Typography variant=\"h4\" component=\"div\">\r\n          {props.label}\r\n          {props.menuIsOpen ? \"\" : \"(\" + props.claimingName + \")\"}{\" \"}\r\n        </Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails></AccordionDetails>\r\n      <Grid container spacing={1}>\r\n        <Grid ml={0} item lg={12} sm={12} xs={12} md={12}>\r\n          <hr />\r\n        </Grid>\r\n        {props.loading && <Loading mainRoute={props.mainRoute} />}\r\n        {!props.loading &&\r\n          props.jobs &&\r\n          props.jobs\r\n            .sort(function (a, b) {\r\n              return a.JobStageOrder - b.JobStageOrder;\r\n            })\r\n            .filter(\r\n              (x) =>\r\n                (props.activeButton == \"post\" &&\r\n                  x.JobStageName == \"postproduction\") ||\r\n                (props.activeButton == \"pre\" &&\r\n                  x.JobStageName == \"preproduction\") ||\r\n                (props.activeButton == \"prod\" &&\r\n                  x.JobStageName == \"production\") ||\r\n                (props.activeButton == \"site\" && x.JobStageName == \"SiteWork\")\r\n            )\r\n            .filter(\r\n              (x) =>\r\n                (props.activeButton != \"site\" && x.WorkTypes.length > 0) ||\r\n                props.activeButton == \"site\"\r\n            )\r\n            .filter((x) => x.WorkTypes.some((w) => w.Progress < 100))\r\n\r\n            .map((e) => (\r\n              <Grid\r\n                item\r\n                lg={props.jobs.length > 48 ? 1 : 2}\r\n                sm={6}\r\n                xs={12}\r\n                key={e.OId}\r\n                className={props.classes.bolding}\r\n              >\r\n                <Box\r\n                  borderRadius=\"5%\"\r\n                  p={1}\r\n                  boxShadow={4}\r\n                  color=\"white\"\r\n                  className={props.classes.boxBolding}\r\n                  style={{ paddingLeft: \"30px\", paddingRight: \"30px\" }}\r\n                  bgcolor={\r\n                    e.JobStageName == \"production\"\r\n                      ? \"#9abf47\"\r\n                      : e.JobStageName == \"preproduction\"\r\n                      ? \"#b3b31b\"\r\n                      : e.JobStageName == \"postproduction\"\r\n                      ? \"#b4bebf\"\r\n                      : \"white\"\r\n                  }\r\n                  spacing={3}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    fontSize: \"0.8rem\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                  onClick={() => {\r\n                    props.handleJobClick(e.OId);\r\n                  }}\r\n                >\r\n                  <Grid container style={{ color: \"black\" }}>\r\n                    <Hidden only={[\"sm\", \"md\", \"xl\", \"lg\"]}>\r\n                      <Grid item lg={4} xs={4} sm={4} md={4}>\r\n                        {e.Note !== \"\" && e.Note.length > 0 && (\r\n                          <IconButton\r\n                            color=\"inherit\"\r\n                            onClick={(w) => {\r\n                              // alert(e.Note);\r\n                              props.setNote(e.Note);\r\n                              props.setOpenDialog(true);\r\n                              w.stopPropagation();\r\n                            }}\r\n                          >\r\n                            <CommentIcon />\r\n                          </IconButton>\r\n                        )}\r\n                      </Grid>\r\n                      <Grid item lg={4} xs={4} sm={4} md={4}>\r\n                        <span style={{ fontSize: \"large\" }}>{e.Code}</span>\r\n                      </Grid>\r\n\r\n                      <Grid item lg={4} xs={4} sm={4} md={4}>\r\n                        <CircularProgressWithLabel value={e.Progress} />\r\n                      </Grid>\r\n                    </Hidden>\r\n                    <Hidden only={[\"xs\"]}>\r\n                      <Grid\r\n                        item\r\n                        lg={6}\r\n                        xs={6}\r\n                        sm={6}\r\n                        md={6}\r\n                        style={{ backgroundColor: \"#718d35\" }}\r\n                      >\r\n                        {e.Note !== \"\" && e.Note.length > 0 && (\r\n                          <IconButton\r\n                            color=\"inherit\"\r\n                            onClick={(w) => {\r\n                              // alert(e.Note);\r\n                              props.setNote(e.Note);\r\n                              props.setOpenDialog(true);\r\n                              w.stopPropagation();\r\n                            }}\r\n                          >\r\n                            <CommentIcon />\r\n                          </IconButton>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid\r\n                        item\r\n                        lg={6}\r\n                        xs={6}\r\n                        sm={6}\r\n                        md={6}\r\n                        style={{ backgroundColor: \"#718d35\" }}\r\n                      >\r\n                        <CircularProgressWithLabel value={e.Progress} />\r\n                      </Grid>\r\n                      <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                        <hr />\r\n                      </Grid>\r\n                      <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                        <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                          <span style={{ fontSize: \"large\" }}>{e.Code}</span>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Hidden>\r\n\r\n                    <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                      <hr />\r\n                    </Grid>\r\n                    <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                      <div style={{ fontSize: \"small\" }}> {e.Title}</div>\r\n                    </Grid>\r\n                    {/* <Grid item lg={6} xs={6} sm={6} md={6}>\r\n              <CircularProgressWithLabel value={e.Progress} />\r\n            </Grid> */}\r\n                  </Grid>\r\n                </Box>\r\n              </Grid>\r\n            ))}\r\n      </Grid>\r\n    </Accordion>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect, forwardRef } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\n\r\nimport gridSearchStyles from \"../../components/controls/Styles\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport FullScreenDialog from \"../../components/controls/FullScreenDialog\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport CallMadeOutlinedIcon from \"@mui/icons-material/CallMadeOutlined\";\r\nimport SubdirectoryArrowLeftOutlinedIcon from \"@mui/icons-material/SubdirectoryArrowLeftOutlined\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport CircularProgressWithLabel from \"../../components/controls/CircularProgressWithLabel\";\r\nimport DividedJobs from \"./DividedJobs\";\r\nimport ClaimLogic from \"../../components/logics/ClaimLogic\";\r\nimport Barchart from \"../../components/controls/Barchart\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport HomeWorkIcon from \"@mui/icons-material/HomeWork\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function Jobs(props) {\r\n  Date.prototype.addDays = function (days) {\r\n    var date = new Date(this.valueOf());\r\n    date.setDate(date.getDate() + days);\r\n    return date;\r\n  };\r\n  const classes = gridSearchStyles();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [note, setNote] = useState([]);\r\n  const [activeButton, setactiveButton] = useState(\r\n    props.IsSitWorkGroup ? \"site\" : props.stage\r\n  );\r\n\r\n  const [jobs, setJobs] = useState(props.jobs);\r\n  const [isLoading, setisLoading] = useState(true);\r\n  const [preJobs, setPreJobs] = useState([]);\r\n  const [postJobs, setPostJobs] = useState([]);\r\n  const [siteJobs, setSiteJobs] = useState([]);\r\n  const [loadedJobs, setLoadedJobs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchVal, setsearchVal] = useState(\"\");\r\n  const [perfstat, setPerfstat] = useState(false);\r\n  const [perfstatReady, setPerfstatReady] = useState(true);\r\n  const [dateFrom, setDateFrom] = useState(new Date().addDays(-7));\r\n  const [dateTo, setDateTo] = useState(new Date());\r\n  const [chartData, setChartData] = useState([]);\r\n  const [primaryJobs, setPrimaryJobs] = useState([]);\r\n  const [secondaryJobs, setSecondaryJobs] = useState([]);\r\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n    <OutlinedInput\r\n      sx={{ ml: 1, flex: 1 }}\r\n      onClick={onClick}\r\n      ref={ref}\r\n      value={value}\r\n    />\r\n  ));\r\n  useEffect(() => {\r\n    divideJobs(props.jobs);\r\n    setTimeout(() => {\r\n      props.goBackToStart(1);\r\n    }, 60000);\r\n  }, []);\r\n  async function getPerfStatAPI(fromBtn) {\r\n    if (fromBtn && perfstat) {\r\n      setPerfstat(false);\r\n      return;\r\n    }\r\n    try {\r\n      var result = await ClaimLogic.GetPerfStatByAPI(\r\n        props.claimingOId,\r\n        dateFrom.toLocaleDateString(\"en-US\"),\r\n        dateTo.toLocaleDateString(\"en-US\"),\r\n        props.apiRoute\r\n      );\r\n      var data = JSON.parse(result.data);\r\n      var result = [];\r\n      result.push({\r\n        country: data.PointName,\r\n        name: data.PointName,\r\n        actual: data.Actual,\r\n        std: data.Std,\r\n      });\r\n      setChartData(result);\r\n\r\n      setPerfstat(true);\r\n      setPerfstatReady(true);\r\n    } catch (ex) {\r\n      if (ex.response)\r\n        alert(`Error in calling Get performance stat. API- ${ex.response}`);\r\n      else alert(`Error in calling Get performance stat. API- ${ex.message}`);\r\n    }\r\n  }\r\n  function divideJobs(jobs) {\r\n    var pj = [];\r\n    var sj = [];\r\n    setPrimaryJobs([]);\r\n    setSecondaryJobs([]);\r\n    setJobs([]);\r\n    if (props.divideJobs) {\r\n      for (let i = 0; i < jobs.length; i++) {\r\n        const j = jobs[i];\r\n\r\n        var wtIds = j.WorkTypes.filter((x) => x.Progress < 100).map(\r\n          (w) => w.OId\r\n        );\r\n        const intersct = wtIds.filter((value) =>\r\n          props.primaryWorktypeIds.includes(value)\r\n        );\r\n        if (intersct.length > 0) {\r\n          pj.push(j);\r\n        } else sj.push(j);\r\n      }\r\n      setPrimaryJobs(pj);\r\n      setSecondaryJobs(sj);\r\n    } else {\r\n      setJobs(jobs);\r\n    }\r\n  }\r\n\r\n  function searchJobs(event) {\r\n    var txt = event.target.value;\r\n    setsearchVal(txt);\r\n\r\n    if (props.divideJobs) {\r\n      setPrimaryJobs(\r\n        event.target.value.length > 0\r\n          ? primaryJobs.filter(\r\n              (t) =>\r\n                t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n                t.Code.includes(txt)\r\n            )\r\n          : primaryJobs\r\n      );\r\n\r\n      setSecondaryJobs(\r\n        event.target.value.length > 0\r\n          ? secondaryJobs.filter(\r\n              (t) =>\r\n                t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n                t.Code.includes(txt)\r\n            )\r\n          : secondaryJobs\r\n      );\r\n    } else {\r\n      var filterJobs =\r\n        event.target.value.length > 0\r\n          ? jobs.filter(\r\n              (t) =>\r\n                t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n                t.Code.includes(txt)\r\n            )\r\n          : jobs;\r\n      divideJobs(filterJobs);\r\n    }\r\n  }\r\n  function chunkSubstr(str, size) {\r\n    const numChunks = Math.ceil(str.length / size);\r\n    const chunks = new Array(numChunks);\r\n\r\n    for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\r\n      chunks[i] = str.substr(o, size);\r\n    }\r\n\r\n    return chunks;\r\n  }\r\n  function clearSearch() {\r\n    setsearchVal(\"\");\r\n    divideJobs([]);\r\n    divideJobs(props.jobs);\r\n  }\r\n\r\n  function handleJobsButtonClicked(section) {\r\n    var jobType =\r\n      section === \"post\"\r\n        ? 4\r\n        : section === \"pre\"\r\n        ? 2\r\n        : section === \"prod\"\r\n        ? 3\r\n        : section === \"site\"\r\n        ? 4\r\n        : 3;\r\n\r\n    divideJobs([]);\r\n    setsearchVal(\"\");\r\n    setLoading(true);\r\n    ClaimLogic.getJobsOfWorkerFromApi(\r\n      props.apiRoute,\r\n      props.claimingOId,\r\n      jobType,\r\n      section === \"site\"\r\n    )\r\n      .then((r) => {\r\n        const values = JSON.parse(r.data);\r\n        setSiteJobs(values.Item1);\r\n        divideJobs(values.Item1);\r\n        loadedJobs.push(section);\r\n        setLoadedJobs(loadedJobs);\r\n        props.handleJobLoaded(values.Item1);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Error in retrieve Jobs list\");\r\n      });\r\n    setactiveButton(section);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ backgroundColor: \"#ebedf1\" }}>\r\n        <CardContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item ml={0} lg={1} sm={2} xs={2}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                style={{ textAlign: \"right\" }}\r\n                onClick={() => {\r\n                  props.handleBack(0);\r\n                }}\r\n                startIcon={<ArrowBack />}\r\n              ></Button>\r\n            </Grid>\r\n            <Grid item lg={2} sm={9} xs={9}>\r\n              <span style={{ fontSize: \"18px\", marginTop: \"30px\" }}>\r\n                <b>Job&nbsp;Selection</b>\r\n              </span>\r\n            </Grid>\r\n            <Grid item lg={5} md={12} sm={12} xs={12}>\r\n              <IconButton sx={{ p: \"10px\" }} aria-label=\"menu\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n              <InputBase\r\n                sx={{ ml: 1, flex: 1 }}\r\n                placeholder=\"Search\"\r\n                variant=\"outlined\"\r\n                value={searchVal}\r\n                onChange={searchJobs}\r\n              />\r\n              <IconButton\r\n                color=\"primary\"\r\n                sx={{ p: \"10px\" }}\r\n                aria-label=\"directions\"\r\n                onClick={() => clearSearch()}\r\n              >\r\n                <CancelIcon />\r\n              </IconButton>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              ml={0}\r\n              lg={2}\r\n              sm={6}\r\n              md={6}\r\n              xs={6}\r\n              style={{ textAlign: \"right\" }}\r\n            >\r\n              {props.settings.PSEnableIndividual && (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={() => getPerfStatAPI(true)}\r\n                >\r\n                  Performance\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              ml={0}\r\n              lg={2}\r\n              md={6}\r\n              sm={6}\r\n              xs={6}\r\n              style={{ textAlign: \"right\" }}\r\n            >\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={() => props.handleLogOut(props.claimingOId)}\r\n                startIcon={<MeetingRoomIcon />}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {!perfstat && (\r\n            <Fragment>\r\n              <Accordion defaultExpanded={true}>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography variant=\"h4\" component=\"div\">\r\n                    Jobs{\" \"}\r\n                    {props.menuIsOpen ? \"\" : \"(\" + props.claimingName + \")\"}{\" \"}\r\n                    <hr />\r\n                  </Typography>\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails>\r\n                  <Grid ml={1} item lg={2} sm={1} xs={1}></Grid>\r\n                  <Grid\r\n                    ml={0}\r\n                    item\r\n                    lg={2}\r\n                    sm={3}\r\n                    xs={3}\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    {!props.settings.HidePreProductionJobs && (\r\n                      <Button\r\n                        variant={\r\n                          activeButton == \"pre\" ? \"contained\" : \"outlined\"\r\n                        }\r\n                        style={{\r\n                          color: activeButton == \"pre\" ? \"white\" : \"black\",\r\n                          backgroundColor:\r\n                            activeButton == \"pre\" ? \"#196dc4\" : \"white\",\r\n                        }}\r\n                        size=\"small\"\r\n                        onClick={() => handleJobsButtonClicked(\"pre\")}\r\n                        startIcon={<CallMadeOutlinedIcon />}\r\n                        fullWidth\r\n                      >\r\n                        Pre&nbsp;Prod.\r\n                      </Button>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid\r\n                    ml={0}\r\n                    item\r\n                    lg={2}\r\n                    sm={3}\r\n                    xs={3}\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    <Button\r\n                      variant={\r\n                        activeButton == \"prod\" ? \"contained\" : \"outlined\"\r\n                      }\r\n                      style={{\r\n                        color: activeButton == \"prod\" ? \"white\" : \"black\",\r\n                        backgroundColor:\r\n                          activeButton == \"prod\" ? \"#196dc4\" : \"white\",\r\n                      }}\r\n                      size=\"small\"\r\n                      onClick={() => handleJobsButtonClicked(\"prod\")}\r\n                      startIcon={<SettingsIcon />}\r\n                      fullWidth\r\n                    >\r\n                      <span>\r\n                        &nbsp;&nbsp;&nbsp;Prod.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                      </span>\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid\r\n                    ml={0}\r\n                    item\r\n                    lg={2}\r\n                    sm={3}\r\n                    xs={3}\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    {!props.settings.HidePostProductionJobs && (\r\n                      <Button\r\n                        variant={\r\n                          activeButton == \"post\" ? \"contained\" : \"outlined\"\r\n                        }\r\n                        style={{\r\n                          color: activeButton == \"post\" ? \"white\" : \"black\",\r\n                          backgroundColor:\r\n                            activeButton == \"post\" ? \"#196dc4\" : \"white\",\r\n                        }}\r\n                        startIcon={<SubdirectoryArrowLeftOutlinedIcon />}\r\n                        size=\"small\"\r\n                        onClick={() => handleJobsButtonClicked(\"post\")}\r\n                        fullWidth\r\n                      >\r\n                        Post&nbsp;Prod.\r\n                      </Button>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid\r\n                    ml={0}\r\n                    item\r\n                    lg={2}\r\n                    sm={3}\r\n                    xs={3}\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    <Button\r\n                      variant={\r\n                        activeButton == \"site\" ? \"contained\" : \"outlined\"\r\n                      }\r\n                      style={{\r\n                        color: activeButton == \"site\" ? \"white\" : \"black\",\r\n                        backgroundColor:\r\n                          activeButton == \"site\" ? \"#196dc4\" : \"white\",\r\n                      }}\r\n                      startIcon={<HomeWorkIcon />}\r\n                      size=\"small\"\r\n                      onClick={() => handleJobsButtonClicked(\"site\")}\r\n                      fullWidth\r\n                    >\r\n                      Site&nbsp;Work.\r\n                    </Button>\r\n                  </Grid>\r\n                </AccordionDetails>\r\n                {props.settings.DividJobs && (\r\n                  <div>\r\n                    <DividedJobs\r\n                      label=\"Primary Jobs\"\r\n                      menuIsOpen={props.menuIsOpen}\r\n                      claimingName={props.claimingName}\r\n                      loading={loading}\r\n                      jobs={primaryJobs}\r\n                      handleJobClick={props.handleJobClick}\r\n                      setNote={setNote}\r\n                      setOpenDialog={setOpenDialog}\r\n                      classes={classes}\r\n                      activeButton={activeButton}\r\n                      mainRoute={props.mainRoute}\r\n                    />\r\n                    <DividedJobs\r\n                      label=\"Secondary Jobs\"\r\n                      menuIsOpen={props.menuIsOpen}\r\n                      claimingName={props.claimingName}\r\n                      loading={loading}\r\n                      jobs={secondaryJobs}\r\n                      handleJobClick={props.handleJobClick}\r\n                      setNote={setNote}\r\n                      setOpenDialog={setOpenDialog}\r\n                      classes={classes}\r\n                      activeButton={activeButton}\r\n                      mainRoute={props.mainRoute}\r\n                    />\r\n                  </div>\r\n                )}\r\n                {!props.divideJobs && (\r\n                  <DividedJobs\r\n                    label=\"Jobs\"\r\n                    menuIsOpen={props.menuIsOpen}\r\n                    claimingName={props.claimingName}\r\n                    loading={loading}\r\n                    jobs={jobs}\r\n                    handleJobClick={props.handleJobClick}\r\n                    setNote={setNote}\r\n                    setOpenDialog={setOpenDialog}\r\n                    classes={classes}\r\n                    activeButton={activeButton}\r\n                    mainRoute={props.mainRoute}\r\n                  />\r\n                )}\r\n              </Accordion>\r\n\r\n              <Accordion defaultExpanded={true}>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography variant=\"h4\" component=\"div\">\r\n                    Admin Jobs{\" \"}\r\n                    {props.menuIsOpen ? \"\" : \"(\" + props.claimingName + \")\"}{\" \"}\r\n                    <hr />\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails></AccordionDetails>\r\n                <Grid container spacing={1}>\r\n                  {props.jobs &&\r\n                    props.adminJobs.map((e) => (\r\n                      <Grid\r\n                        item\r\n                        lg={2}\r\n                        sm={6}\r\n                        xs={12}\r\n                        key={e.OId}\r\n                        className={classes.bolding}\r\n                      >\r\n                        <Box\r\n                          borderRadius=\"5%\"\r\n                          p={4}\r\n                          boxShadow={4}\r\n                          color=\"black\"\r\n                          spacing={3}\r\n                          style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            fontSize: \"0.9rem\",\r\n                            textAlign: \"center\",\r\n                            backgroundColor: \"#efefef\",\r\n                          }}\r\n                          onClick={() => {\r\n                            props.handleJobClick(e.OId, true);\r\n                          }}\r\n                        >\r\n                          <div>{e.Name}</div>\r\n                        </Box>\r\n                      </Grid>\r\n                    ))}\r\n                </Grid>\r\n              </Accordion>\r\n            </Fragment>\r\n          )}\r\n          {perfstat && (\r\n            <div>\r\n              <Grid\r\n                container\r\n                style={{\r\n                  marginBottom: \"20px\",\r\n                  marginTop: \"40px\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                <Grid item lg={12} sm={12} xs={12}>\r\n                  <hr />\r\n                </Grid>\r\n                <Grid item lg={8} sm={4} xs={12} style={{ marginTop: \"30px\" }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => getPerfStatAPI(false)}\r\n                  >\r\n                    Show\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item lg={2} sm={4} xs={6}>\r\n                  <div>\r\n                    <label>From</label>\r\n                    <DatePicker\r\n                      style={{ zIndex: \"10000\" }}\r\n                      selected={dateFrom}\r\n                      onChange={(e) => setDateFrom(e)}\r\n                      customInput={<ExampleCustomInput />}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid item lg={2} sm={4} xs={6}>\r\n                  <div>\r\n                    <label className=\"datePickerLabel\">To</label>\r\n                    <DatePicker\r\n                      customInput={<ExampleCustomInput />}\r\n                      selected={dateTo}\r\n                      onChange={(e) => setDateTo(e)}\r\n                      style={{ zIndex: \"10000\" }}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Barchart Columns={chartData} Title=\"Performance\" />\r\n            </div>\r\n          )}\r\n          <FullScreenDialog\r\n            header=\"Job Notes\"\r\n            uls={note}\r\n            open={openDialog}\r\n            handleClose={() => setOpenDialog(false)}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport \"../../App.css\";\r\nimport { Button, Grid, Hidden } from \"@material-ui/core\";\r\nexport default function Start(props) {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  });\r\n  return (\r\n    <div>\r\n      <Hidden only={[\"xs\", \"sm\"]}>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <Grid item xs={3}>\r\n            <div>\r\n              <h1\r\n                style={{\r\n                  color: \"grey\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  paddingLeft: \"35%\",\r\n                }}\r\n              >\r\n                Claim&nbsp;Job\r\n              </h1>\r\n              <Button\r\n                id=\"btnStart\"\r\n                name=\"btnStart\"\r\n                className=\"click\"\r\n                style={{\r\n                  backgroundImage: `url(\\\"${props.mainRoute}start.png\\\")`,\r\n                  backgroundColor: \"#fff\",\r\n                  backgroundPosition: \"center\",\r\n                  // hover: {\r\n                  //  ,\r\n                  //   transform: \"scale(0.6)\",\r\n                  //   transitionDuration: \"0.5s\",\r\n                  // },\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  paddingTop: \"-30px\",\r\n\r\n                  width: \"430px\",\r\n                  height: \"240px\",\r\n\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  borderRadius: \"38px\",\r\n                  fontSize: \"40px\",\r\n                }}\r\n                onClick={props.start}\r\n              ></Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n      <Hidden only={[\"xl\", \"lg\", \"md\"]}>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <Grid item xs={3}>\r\n            <div>\r\n              <h1\r\n                style={{\r\n                  color: \"grey\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  paddingLeft: \"35%\",\r\n                }}\r\n              >\r\n                Claim&nbsp;Job\r\n              </h1>\r\n              <Button\r\n                id=\"btnStart\"\r\n                name=\"btnStart\"\r\n                className=\"click\"\r\n                style={{\r\n                  backgroundImage: `url(\\\"${props.mainRoute}start.png\\\")`,\r\n                  backgroundColor: \"#fff\",\r\n                  backgroundPosition: \"center\",\r\n                  // hover: {\r\n                  //  ,\r\n                  //   transform: \"scale(0.6)\",\r\n                  //   transitionDuration: \"0.5s\",\r\n                  // },\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  paddingTop: \"-30px\",\r\n\r\n                  width: \"300px\",\r\n                  height: \"240px\",\r\n\r\n                  display: \"flex\",\r\n                  justifyContent: \"left\",\r\n                  alignItems: \"left\",\r\n                  borderRadius: \"38px\",\r\n                  fontSize: \"40px\",\r\n                }}\r\n                onClick={props.start}\r\n              ></Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config\";\r\nimport Helper from \"./Helper\";\r\n\r\nclass LoginLogic extends React.Component {\r\n  getListOfWorkersFromApi = async (workerId, route) => {\r\n    return await Helper.apiPost(\r\n      `${route}Workers/GetListOfWorkers?workerId=` + workerId,\r\n      {},\r\n      \"Error in calling ESP (Get Workers List)\"\r\n    );\r\n  };\r\n\r\n  searchNames = (event, mainWorkersList) => {\r\n    var txt = event.target.value;\r\n    return event.target.value.length > 0\r\n      ? mainWorkersList.filter((t) =>\r\n          t.Name.toLowerCase().includes(txt.toLowerCase())\r\n        )\r\n      : mainWorkersList;\r\n  };\r\n\r\n  saveLoginInAPI = async (id, comment, route) => {\r\n    var response = {};\r\n    var value = { OId: id, Code: comment };\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    return await Helper.apiPost(`${route}Workers/PostLoginWorker`, value, \"\");\r\n  };\r\n\r\n  saveLogoutAPI = async (id, comment, route) => {\r\n    var response = {};\r\n    var value = { OId: id, Code: comment };\r\n\r\n    try {\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n\r\n      return await Helper.apiPost(`${route}Workers/PostLogoutWorker`, value);\r\n    } catch (err) {\r\n      if (err.response)\r\n        alert(`Error in calling ESP (Logout) API- ${err.response.data}`);\r\n      else alert(`Error in calling ESP (Logout) API- ${err}`);\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n\r\n  checkWorkerLateLogin(worker, trackLateLogin, lateLoginTrack) {\r\n    if (trackLateLogin) {\r\n      var currentTime = new Date();\r\n\r\n      var tempTime = new Date(worker.StartTime);\r\n      var startTime = new Date(tempTime);\r\n      startTime.setMinutes(tempTime.getMinutes() + lateLoginTrack);\r\n      return startTime < currentTime;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  checkWorkerEarlyLeave(worker, trackEarlyLeave, earlyLeaveAllowance) {\r\n    if (trackEarlyLeave) {\r\n      var currentTime = new Date();\r\n\r\n      var tempTime = new Date(worker.EndTime);\r\n      var endTime = new Date(tempTime);\r\n      endTime.setMinutes(tempTime.getMinutes() - earlyLeaveAllowance);\r\n      return endTime > currentTime;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getAsyncSettingsApi = async (url, value, errorName) => {\r\n    const authStr = \"bearer \" + this.getLocalToken();\r\n    try {\r\n      axios.defaults.headers.post[\"Authorization\"] = authStr;\r\n      axios.defaults.headers.post[\"Content-type\"] = \"application/json\";\r\n      const response = await axios.post(\r\n        `${this.props.apiRoute}AdminSettings/GetInfo`,\r\n        null\r\n      );\r\n\r\n      return response;\r\n    } catch (err) {\r\n      alert(`Error in calling ESP (${errorName}) API- ${err}`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <din></din>;\r\n  }\r\n}\r\n//module.exports={_:LoginLogics};\r\nconst Loginlogics = new LoginLogic();\r\nexport default Loginlogics;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function FormDialog(props) {\r\n  const [comment, setComment] = React.useState(\"\");\r\n  const [allow, setAllow] = React.useState(true);\r\n\r\n  const handleommentChange = (e) => {\r\n    setComment(e.target.value);\r\n    setAllow(e.target.value.length < 5);\r\n\r\n    setComment(e.target.value);\r\n  };\r\n  const handleSave = () => {\r\n    if (props.doSaving) {\r\n      props.onCommentSave(comment, !props.logout);\r\n    }\r\n    setAllow(true);\r\n  };\r\n  const handleKeyDown = (event) => {\r\n    if (event.target.value.length > 5 && event.key === \"Enter\") {\r\n      handleSave();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleSave}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">{props.header}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{props.text}</DialogContentText>\r\n          {!props.alert && (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label={props.placeholer}\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={handleommentChange}\r\n              onKeyDown={handleKeyDown}\r\n            />\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleSave}\r\n            color=\"primary\"\r\n            disabled={props.alert ? false : allow}\r\n          >\r\n            {props.alert ? \"Ok\" : \"Save\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport Login from \"./Login\";\r\nimport WorkTypes from \"./WorkTypes\";\r\nimport JobItems from \"./JobItems\";\r\nimport Summary from \"./Summary\";\r\nimport Jobs from \"./Jobs\";\r\nimport Start from \"./Start\";\r\nimport Loginlogics from \"../../components/logics/Login\";\r\nimport ClaimLogic from \"../../components/logics/ClaimLogic\";\r\nimport Loading from \"../loading.js\";\r\nimport FormDialog from \"../../components/controls/FormDialog\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass CalimContainer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      workersList: [],\r\n      settings: null,\r\n      mainWorkersList: [],\r\n      workTypes: [],\r\n      mainWorkTypes: [],\r\n      jobs: [],\r\n      mainJobs: [],\r\n      adminJobs: [],\r\n      mainAdminJobs: [],\r\n      claimingOId: 0,\r\n      claimingUser: \"\",\r\n      claiminWorker: {},\r\n      page: -1,\r\n      loading: false,\r\n      worktypeId: 0,\r\n      workTypeName: \"\",\r\n      jobId: 0,\r\n      isAdminJob: false,\r\n      adminWorkType: null,\r\n      jobItems: [],\r\n      mainJobItems: [],\r\n      primaryJobs: [],\r\n      secondaryJobs: [],\r\n      changedClaimingItems: [],\r\n      canClaimWholeJob: false,\r\n      claimingFullJob: false,\r\n      dialogOpen: false,\r\n      dialogHeader: \"\",\r\n      dialogText: \"\",\r\n      dialogSave: null,\r\n      totalPhyCalimgMinutes: 0,\r\n      LabelText: [],\r\n      isFullJob: false,\r\n      logoutClicked: false,\r\n      totalProgress: 0,\r\n      finishedItems: [],\r\n      logoutChecked: false,\r\n      groupPercent: 0,\r\n      IsSitWorkGroup: false,\r\n      stage: \"\",\r\n      doSaving: true,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // this.setState(\r\n    //   {\r\n    //     ...this.state,\r\n    //     loading: true,\r\n    //   },\r\n    //   () => {\r\n    //     this.loadWorkersList();\r\n    //   }\r\n    // );\r\n    if (this.props.fromPB) {\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          loading: true,\r\n        },\r\n        () => {\r\n          this.loadWorkersList();\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        page: -1,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  /* #region Claim From PB */\r\n  getPBJobItems = async (jid, wid) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true,\r\n    });\r\n\r\n    var labelText = this.state.LabelText;\r\n    var r = await ClaimLogic.getJobItemsFromApi(\r\n      jid,\r\n      wid,\r\n      this.state.claimingOId,\r\n      this.props.apiRoute\r\n    );\r\n    var data = JSON.parse(r.data);\r\n\r\n    labelText.push(this.props.fromPB ? this.props.jobCode : data.WorkType.Name);\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        jobId: jid,\r\n        jobLevel: data.WorkType.JobLevel,\r\n        workTypeName: data.WorkType.Name,\r\n        jobItems: data.jobItems,\r\n        mainJobItems: data.jobItems,\r\n        finishedItems: data.finishedItems,\r\n        canClaimWholeJob: data.canClaimWholeJob,\r\n        totalPhyCalimgMinutes: data.totalPhyCalimgMinutes,\r\n        totalProgress: data.totalProgress,\r\n        page: 3,\r\n        loading: false,\r\n        worktypeId: wid,\r\n        LabelText: labelText,\r\n        JobTitle: data.JobTitle,\r\n      },\r\n      () => {\r\n        this.props.changeStep(5, labelText, this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n  /* #region Claim From PB */\r\n\r\n  /* #region  Login Methods */\r\n\r\n  goBackToStart = (pageId) => {\r\n    if (this.state.page === pageId)\r\n      this.setState({\r\n        ...this.state,\r\n        page: -1,\r\n      });\r\n  };\r\n  start = async () => {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        loading: true,\r\n      },\r\n      () => {\r\n        this.loadWorkersList();\r\n      }\r\n    );\r\n  };\r\n  loadWorkersList = async () => {\r\n    try {\r\n      var r = await Loginlogics.getListOfWorkersFromApi(\r\n        this.props.workerId,\r\n        this.props.apiRoute\r\n      );\r\n      const response = JSON.parse(r.data);\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          workersList: response,\r\n          mainWorkersList: response,\r\n          loading: false,\r\n          settings: this.props.settings,\r\n          LabelText: [],\r\n          page: 0,\r\n        },\r\n        () => {\r\n          this.props.changeStep(2, [], this.state.isAdminJob);\r\n          if (this.props.workerId !== 0) {\r\n            var worker = response.find((x) => x.OId == this.props.workerId);\r\n            if (worker && worker.IsLoggedIn) {\r\n              this.loggedInWorkerClick(worker);\r\n            }\r\n          }\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(\"Error in fetching Workers list \");\r\n    }\r\n  };\r\n\r\n  onCommentSave = async (text, login = true) => {\r\n    if (text)\r\n      if (login)\r\n        await this.saveLoginInAPI(\r\n          this.state.claimingOId,\r\n          text,\r\n          this.props.apiRoute\r\n        );\r\n      else\r\n        await this.saveLogoutAPI(\r\n          this.state.claimingOId,\r\n          text,\r\n          this.props.apiRoute\r\n        );\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        dialogOpen: false,\r\n      },\r\n      () => {\r\n        if (this.props.logout) <Redirect to=\"/ProductionBoard\" />;\r\n        else <Redirect to=\"/\" />;\r\n      }\r\n    );\r\n  };\r\n\r\n  loggedInWorkerClick = (worker) => {\r\n    const page = 1;\r\n    const labelText = [];\r\n    labelText.push(worker.Name);\r\n    var primaryWorktypeIds = worker.Skills.filter((x) => x.Primary).map(\r\n      (i) => i.WorkTypeId\r\n    );\r\n    var secondaryWorktypeIds = worker.Skills.filter((x) => x.Secondary).map(\r\n      (i) => i.WorkTypeId\r\n    );\r\n\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        LabelText: labelText,\r\n        claimingUser: worker.Name,\r\n        claimingOId: worker.OId,\r\n        claiminWorker: worker,\r\n        primaryWorktypeIds,\r\n        secondaryWorktypeIds,\r\n        IsSitWorkGroup: worker.Skills.find((x) => x.IsSitework && x.Primary),\r\n        stage: worker.Stage,\r\n      },\r\n      () => {\r\n        if (this.props.fromPB) {\r\n          this.getPBJobItems(this.props.jobId, this.props.workTypeId);\r\n        } else {\r\n          this.props.changeStep(3, labelText, this.state.isAdminJob);\r\n          this.goToJobsPage(page, worker.OId);\r\n        }\r\n      }\r\n    );\r\n  };\r\n  handleLogin = (sid, isOnLeave, logout) => {\r\n    if (logout || this.props.logout) {\r\n      this.handleLogOut(sid);\r\n\r\n      return;\r\n    }\r\n    if (isOnLeave) {\r\n      this.setState({\r\n        ...this.state,\r\n        dialogOpen: true,\r\n        dialogHeader: \"Cannot Login\",\r\n        dialogText:\r\n          \"You are currenly on leave.Please, log in during your working hours\",\r\n        dialogSave: this.onCommentSave,\r\n        alert: true,\r\n      });\r\n      return false;\r\n    }\r\n    const id = parseInt(sid);\r\n    const workersList = this.state.workersList;\r\n    const worker = workersList.filter((x) => x.OId === id)[0];\r\n    this.props.setClaimingId(id);\r\n\r\n    if (worker.IsLoggedIn) {\r\n      this.loggedInWorkerClick(worker);\r\n    } else {\r\n      let comment = \"\";\r\n      if (\r\n        Loginlogics.checkWorkerLateLogin(\r\n          worker,\r\n          this.state.settings.TrackLateLogin,\r\n          this.state.settings.LateAllowance\r\n        )\r\n      ) {\r\n        this.setState({\r\n          ...this.state,\r\n          claimingOId: id,\r\n          claimingUser: worker.Name,\r\n          dialogOpen: true,\r\n          logoutClicked: false,\r\n          dialogHeader: \"Late Login\",\r\n          dialogText: \"Please, specify the reason to late log in.\",\r\n          dialogSave: this.onCommentSave,\r\n          alert: false,\r\n          LabelText: [worker.Name],\r\n        });\r\n      }\r\n      if (worker.LastDayNotLoggedOut) {\r\n        this.setState({\r\n          ...this.state,\r\n          claimingOId: id,\r\n          claimingUser: worker.Name,\r\n\r\n          logoutClicked: false,\r\n          dialogHeader: \"Missing logout\",\r\n          dialogText:\r\n            \" You did not logout yesterday please advise your manager\",\r\n\r\n          doSaving: true,\r\n          alert: true,\r\n          LabelText: [worker.Name],\r\n\r\n          dialogOpen: true,\r\n          dialogSave: this.onCommentSave,\r\n        });\r\n        this.saveLoginInAPI(id, comment, this.props.apiRoute);\r\n      } else {\r\n        this.saveLoginInAPI(id, comment, this.props.apiRoute);\r\n      }\r\n    }\r\n  };\r\n  saveLoginInAPI = async (id, comment) => {\r\n    const workersList = this.state.workersList;\r\n    const worker = workersList.filter((x) => x.OId === id)[0];\r\n    var labelText = [];\r\n    var r = await Loginlogics.saveLoginInAPI(id, comment, this.props.apiRoute);\r\n\r\n    if (!JSON.parse(r.data).Successful) {\r\n      alert(r.Message);\r\n      return;\r\n    }\r\n\r\n    worker.IsLoggedIn = true;\r\n    var inx = workersList.findIndex((x) => x.OId === id);\r\n\r\n    if (inx !== -1) {\r\n      workersList[inx] = worker;\r\n    }\r\n\r\n    labelText.push(worker.Name);\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        claimingOId: id,\r\n        claimingUser: worker.Name,\r\n        workersList,\r\n        LabelText: labelText,\r\n      },\r\n      () => {\r\n        if (this.props.fromPB) {\r\n          this.getPBJobItems(this.props.jobId, this.props.workTypeId);\r\n        } else {\r\n          this.props.changeStep(3, labelText, this.state.isAdminJob);\r\n        }\r\n      }\r\n    );\r\n  };\r\n  handleLogOut = async (id, comment) => {\r\n    const workersList = this.state.workersList;\r\n    const worker = workersList.filter((x) => x.OId === id)[0];\r\n    if (\r\n      Loginlogics.checkWorkerEarlyLeave(\r\n        worker,\r\n        this.state.settings.TrackEarlyLeave,\r\n        this.state.settings.EarlyLeaveAllowance\r\n      )\r\n    ) {\r\n      this.setState({\r\n        ...this.state,\r\n        claimingOId: id,\r\n        claimingUser: worker.Name,\r\n        dialogOpen: true,\r\n        logoutClicked: true,\r\n        dialogHeader: \"Early Leave\",\r\n        dialogText: \"Please, specify the reason to early leaving.\",\r\n        dialogSave: this.onCommentSave,\r\n        alert: false,\r\n        LabelText: [worker.Name],\r\n      });\r\n    } else {\r\n      var response = await this.saveLogoutAPI(id, comment, this.props.apiRoute);\r\n      if (this.props.logout)\r\n        <Redirect to={`${this.props.apiRoute}ProductionBoard`} />;\r\n      else {\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            page: -1,\r\n          },\r\n          () => {\r\n            <Redirect to={`${this.props.apiRoute}claim`} />;\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleJobLoaded = (newJobs) => {\r\n    var stateJobs = this.state.jobs;\r\n    var mainStateJobs = this.state.mainJobs;\r\n    stateJobs.push(...newJobs);\r\n    //   mainStateJobs.push(...newJobs);\r\n\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        jobs: stateJobs,\r\n        mainJobs: mainStateJobs,\r\n      },\r\n      () => {\r\n        return true;\r\n      }\r\n    );\r\n  };\r\n  saveLogoutAPI = async (id, comment) => {\r\n    var r = await Loginlogics.saveLogoutAPI(id, comment, this.props.apiRoute);\r\n\r\n    var obj = JSON.parse(r.data);\r\n    if (!obj.Successful) {\r\n      alert(obj.Message);\r\n      return false;\r\n    }\r\n\r\n    const workersList = this.setWorkerLOgout(id);\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        page: 0,\r\n        workersList,\r\n        dialogOpen: false,\r\n      },\r\n      () => {\r\n        this.props.changeStep(2, [], this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n  setWorkerLOgout = (id) => {\r\n    const workersList = this.state.workersList;\r\n    const worker = workersList.filter((x) => x.OId === id)[0];\r\n    worker.IsLoggedIn = false;\r\n    var inx = workersList.findIndex((x) => x.OId === id);\r\n    if (inx !== -1) {\r\n      workersList[inx] = worker;\r\n    }\r\n    return workersList;\r\n  };\r\n  searchNames = (event) => {\r\n    this.setState({\r\n      ...this.state,\r\n      workersList: Loginlogics.searchNames(event, this.state.mainWorkersList),\r\n    });\r\n  };\r\n  /* #endregion */\r\n\r\n  /* #region  WorkType */\r\n\r\n  clearSearchWorkTypes = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      workTypes: this.state.mainWorkTypes,\r\n    });\r\n  };\r\n  handleWorkTypeClick = async (worktypeId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true,\r\n    });\r\n    const workType = this.state.mainWorkTypes.find((x) => x.OId == worktypeId);\r\n    var labelText = this.state.LabelText;\r\n    var r = await ClaimLogic.getJobItemsFromApi(\r\n      this.state.jobId,\r\n      worktypeId,\r\n      this.state.claimingOId,\r\n      this.props.apiRoute\r\n    );\r\n    var data = JSON.parse(r.data);\r\n    labelText.push(workType.Name);\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        jobLevel: workType.JobLevel,\r\n        jobItems: data.jobItems,\r\n        mainJobItems: data.jobItems,\r\n        finishedItems: data.finishedItems,\r\n        canClaimWholeJob: data.canClaimWholeJob,\r\n        totalPhyCalimgMinutes: data.totalPhyCalimgMinutes,\r\n        totalProgress: data.totalProgress,\r\n        page: 3,\r\n        loading: false,\r\n        worktypeId: worktypeId,\r\n        LabelText: labelText,\r\n        workTypeName: workType.Name,\r\n      },\r\n      () => {\r\n        this.props.changeStep(5, labelText, this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n\r\n  /* #endregion */\r\n\r\n  /*#region Job*/\r\n\r\n  searchJobs = (event) => {\r\n    var txt = event.target.value;\r\n    var jobs =\r\n      event.target.value.length > 0\r\n        ? this.state.mainJobs.filter(\r\n            (t) =>\r\n              t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n              t.Code.includes(txt)\r\n          )\r\n        : this.state.mainJobs;\r\n\r\n    var adminJobs =\r\n      event.target.value.length > 0\r\n        ? this.state.mainAdminJobs.filter((t) =>\r\n            t.Name.toLowerCase().includes(txt.toLowerCase())\r\n          )\r\n        : this.state.mainAdminJobs;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      jobs,\r\n      adminJobs,\r\n    });\r\n  };\r\n\r\n  handleFullJob = () => {\r\n    var labelText = this.state.LabelText;\r\n    labelText.push(\"Full Job\");\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        page: 4,\r\n        isFullJob: true,\r\n        LabelText: labelText,\r\n      },\r\n      () => {\r\n        this.props.changeStep(6, labelText, this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n\r\n  goToJobsPage = async (page, claimingOId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true,\r\n    });\r\n    var jobStage =\r\n      this.state.stage == \"prod\"\r\n        ? 3\r\n        : this.state.stage == \"pre\"\r\n        ? 2\r\n        : this.state.stage == \"post\"\r\n        ? 4\r\n        : 3;\r\n    var r = this.state.IsSitWorkGroup\r\n      ? await ClaimLogic.getJobsOfWorkerFromApi(\r\n          this.props.apiRoute,\r\n          claimingOId,\r\n          jobStage,\r\n          true\r\n        )\r\n      : await ClaimLogic.getJobsOfWorkerFromApi(\r\n          this.props.apiRoute,\r\n          claimingOId,\r\n          jobStage\r\n        );\r\n    const values = JSON.parse(r.data);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      jobs: values.Item1,\r\n      mainJobs: values.Item1,\r\n      adminJobs: values.Item2,\r\n      mainAdminJobs: values.Item2,\r\n      loading: false,\r\n      claimingOId,\r\n      page,\r\n    });\r\n  };\r\n  handleBack = (pageId) => {\r\n    var labelText = this.state.LabelText;\r\n    switch (pageId) {\r\n      case 0:\r\n        labelText = [];\r\n        break;\r\n      case 1:\r\n        labelText = labelText.slice(0, 1);\r\n        break;\r\n      case 2:\r\n        labelText = labelText.slice(0, 2);\r\n        break;\r\n    }\r\n    //this.props.history.push(\"/productionBoard\");\r\n    if (pageId == 2 && this.props.fromPB) {\r\n      pageId = 0;\r\n      labelText = [];\r\n    }\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        page: pageId,\r\n        LabelText: labelText,\r\n        jobs: this.state.mainJobs,\r\n        jobItems: this.state.mainJobItems,\r\n        adminJobs: this.state.mainAdminJobs,\r\n        workersList: this.state.mainWorkersList,\r\n        workTypes: this.state.mainWorkTypes,\r\n      },\r\n      () => {\r\n        this.props.changeStep(\r\n          pageId + 2,\r\n          this.state.LabelText,\r\n          this.state.isAdminJob\r\n        );\r\n      }\r\n    );\r\n  };\r\n  handleJobClick = (jobId, isAdmin = false) => {\r\n    if (isAdmin) {\r\n      const selectedAdminJob = this.state.adminJobs.find(\r\n        (x) => x.OId === jobId\r\n      );\r\n      var labelText = this.state.LabelText;\r\n\r\n      labelText.push(selectedAdminJob.Name);\r\n      labelText[2] = \"\";\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          adminWorkType: selectedAdminJob,\r\n          page: 4,\r\n          isAdminJob: isAdmin,\r\n          LabelText: labelText,\r\n        },\r\n        () => {\r\n          this.props.changeStep(6, labelText, this.state.isAdminJob);\r\n        }\r\n      );\r\n    } else {\r\n      const jobs = this.state.jobs;\r\n      const selectedJob = jobs.find((x) => x.OId === jobId);\r\n      var labelText = this.state.LabelText;\r\n      labelText.push(selectedJob.Code);\r\n\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          jobId,\r\n          // workTypes: selectedJob.WorkTypes.filter((x) => x.HasJobItems),\r\n          // mainWorkTypes: selectedJob.WorkTypes.filter((x) => x.HasJobItems),\r\n          workTypes: selectedJob.WorkTypes,\r\n          mainWorkTypes: selectedJob.WorkTypes,\r\n\r\n          selectedJobCode: selectedJob.Code,\r\n          page: 2,\r\n          isAdminJob: false,\r\n          LabelText: labelText,\r\n          JobTitle: selectedJob.Code,\r\n        },\r\n        () => {\r\n          this.props.changeStep(4, labelText, this.state.isAdminJob);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  /* #endregion */\r\n\r\n  /*#region jobItem*/\r\n\r\n  handleSaveClaim = (\r\n    changedClaimingItems,\r\n    groupPercent = 0,\r\n    jobLevel = false\r\n  ) => {\r\n    // if (fullJob) {\r\n    //   this.setState({\r\n    //     ...this.state,\r\n    //     claimingFullJob: true,\r\n    //     page: 4,\r\n    //   });\r\n    // } else {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        changedClaimingItems,\r\n        groupPercent,\r\n        page: 4,\r\n      },\r\n      () => {\r\n        this.props.changeStep(5, this.state.LabelText, this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSubmitClaim = async (comment, isAdmin = false, logout = false) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true,\r\n    });\r\n\r\n    if (!isAdmin) {\r\n      if (this.state.isFullJob) {\r\n        var e = await ClaimLogic.submitFullJobClaimInAPI(\r\n          this.state.claimingOId,\r\n          this.state.jobId,\r\n          comment,\r\n          this.props.apiRoute\r\n        );\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            loading: false,\r\n            page: this.props.role == \"a\" || this.props.public ? -1 : 1,\r\n            LabelText: [],\r\n          },\r\n          () => {\r\n            if (this.props.role == \"a\" || this.props.public)\r\n              this.props.changeStep(1, [], this.state.isAdminJob);\r\n            else this.props.changeStep(2, [], this.state.isAdminJob);\r\n          }\r\n        );\r\n      } else {\r\n        var jobItems =\r\n          this.state.groupPercent > 0\r\n            ? this.state.jobItems\r\n            : this.state.jobItems.filter(\r\n                (x) => x.Progress100 !== x.Main_Progress100\r\n              );\r\n        var e = await ClaimLogic.submitClaimInAPI(\r\n          this.state.claimingOId,\r\n          this.state.jobId,\r\n          jobItems,\r\n          this.state.groupPercent,\r\n          comment,\r\n          logout,\r\n          this.props.apiRoute\r\n        );\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            loading: false,\r\n            page: -1,\r\n            LabelText: [],\r\n            workersList: logout\r\n              ? this.setWorkerLOgout(this.state.claimingOId)\r\n              : this.state.workersList,\r\n          },\r\n          () => {\r\n            if (this.props.fromPB)\r\n              this.props.history.push(`${this.props.mainRoute}productionBoard`);\r\n            else {\r\n              if (this.props.role == \"a\" || this.props.public)\r\n                this.props.changeStep(1, [], this.state.isAdminJob);\r\n              else this.props.changeStep(2, [], this.state.isAdminJob);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      var e = await ClaimLogic.submitAdminJobClaimInAPI(\r\n        this.state.claimingOId,\r\n        this.state.adminWorkType.OId,\r\n        comment,\r\n        logout,\r\n        this.props.apiRoute\r\n      );\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          loading: false,\r\n          page: -1,\r\n          LabelText: [],\r\n          workersList: logout\r\n            ? this.setWorkerLOgout(this.state.claimingOId)\r\n            : this.state.workersList,\r\n        },\r\n        () => {\r\n          if (this.props.role == \"a\" || this.props.public)\r\n            this.props.changeStep(1, [], this.state.isAdminJob);\r\n          else this.props.changeStep(2, [], this.state.isAdminJob);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  handleFullSubmitClaim = (comment, isAdmin = false) => {};\r\n  /* #endregion */\r\n\r\n  render() {\r\n    const renderConditionaly = () => {\r\n      if (this.state.loading) {\r\n        return <Loading mainRoute={this.props.mainRoute} />;\r\n      }\r\n      switch (this.state.page) {\r\n        case -1: {\r\n          return (\r\n            <Start mainRoute={this.props.mainRoute} start={this.start}></Start>\r\n          );\r\n        }\r\n        case 0: {\r\n          return (\r\n            <Login\r\n              items={this.state.workersList}\r\n              searchNames={this.searchNames}\r\n              handleLogin={this.handleLogin}\r\n              settings={this.state.settings}\r\n              logoutChecked={this.state.logoutChecked}\r\n              loggingOut={this.props.logout}\r\n              fromPB={this.props.fromPB}\r\n              apiRoute={this.props.apiRoute}\r\n              mainRoute={this.props.mainRoute}\r\n              goBackToStart={this.goBackToStart}\r\n            />\r\n          );\r\n        }\r\n        case 1: {\r\n          return (\r\n            <Jobs\r\n              claimingOId={this.state.claimingOId}\r\n              claimingName={this.state.claimingUser}\r\n              searchJobs={this.searchJobs}\r\n              jobs={this.state.mainJobs}\r\n              adminJobs={this.state.adminJobs}\r\n              primaryJobs={this.state.primaryJobs}\r\n              secondaryJobs={this.state.secondaryJobs}\r\n              prejobs={this.state.prejobs}\r\n              postjobs={this.state.postjobs}\r\n              settings={this.state.settings}\r\n              handleJobClick={this.handleJobClick}\r\n              handleBack={this.handleBack}\r\n              handleLogOut={this.handleLogOut}\r\n              handleJobLoaded={this.handleJobLoaded}\r\n              menuIsOpen={this.props.menuSize == 240}\r\n              IsSitWorkGroup={this.state.IsSitWorkGroup}\r\n              stage={this.state.stage}\r\n              apiRoute={this.props.apiRoute}\r\n              divideJobs={this.state.settings.DividJobs}\r\n              mainRoute={this.props.mainRoute}\r\n              primaryWorktypeIds={this.state.primaryWorktypeIds}\r\n              goBackToStart={this.goBackToStart}\r\n            />\r\n          );\r\n        }\r\n        case 2: {\r\n          return (\r\n            <WorkTypes\r\n              claimingOId={this.state.claimingOId}\r\n              settings={this.props.settings}\r\n              workTypes={this.state.workTypes}\r\n              handleBack={this.handleBack}\r\n              handleWorkTypeClick={this.handleWorkTypeClick}\r\n              handleFullJob={this.handleFullJob}\r\n              jobCode={this.state.selectedJobCode}\r\n              claimingName={this.state.claimingUser}\r\n              menuIsOpen={this.props.menuSize == 240}\r\n              primaryWorktypeIds={this.state.primaryWorktypeIds}\r\n              secondaryWorktypeIds={this.state.secondaryWorktypeIds}\r\n              apiRoute={this.props.apiRoute}\r\n              goBackToStart={this.goBackToStart}\r\n            />\r\n          );\r\n        }\r\n\r\n        case 3: {\r\n          return (\r\n            <JobItems\r\n              claimingOId={this.state.claimingOId}\r\n              searchJobs={this.searchJobs}\r\n              items={this.state.mainJobItems}\r\n              finishedItems={this.state.finishedItems}\r\n              totalProgress={this.state.totalProgress}\r\n              handleBack={this.handleBack}\r\n              handleSave={this.handleSaveClaim}\r\n              settings={this.props.settings}\r\n              canClaimWholeJob={this.state.canClaimWholeJob}\r\n              jobLevel={this.state.jobLevel}\r\n              claimingName={this.state.claimingUser}\r\n              menuIsOpen={this.props.menuSize == 240}\r\n              goBackToStart={this.goBackToStart}\r\n              worktypeName={\r\n                this.state.isFullJob\r\n                  ? \"Full Job\"\r\n                  : this.state.adminWorkType\r\n                  ? \"Admin Work\"\r\n                  : this.state.workTypeName\r\n              }\r\n              jobName={\r\n                this.state.adminWorkType\r\n                  ? this.state.adminWorkType.Name\r\n                  : this.state.JobTitle\r\n              }\r\n              apiRoute={this.props.apiRoute}\r\n            />\r\n          );\r\n        }\r\n        case 4: {\r\n          return (\r\n            <Summary\r\n              claimingOId={this.state.claimingOId}\r\n              totalPhyCalimgMinutes={this.state.totalPhyCalimgMinutes}\r\n              claimingName={\r\n                this.state.mainWorkersList.find(\r\n                  (x) => x.OId === this.state.claimingOId\r\n                ).Name\r\n              }\r\n              goBackToStart={this.goBackToStart}\r\n              worktypeName={\r\n                this.state.isFullJob\r\n                  ? \"Full Job\"\r\n                  : this.state.adminWorkType\r\n                  ? \"Admin Work\"\r\n                  : this.state.workTypeName\r\n              }\r\n              jobName={\r\n                this.state.adminWorkType\r\n                  ? this.state.adminWorkType.Name\r\n                  : this.state.JobTitle\r\n              }\r\n              claimingItems={this.state.changedClaimingItems}\r\n              isAdminJob={this.state.isAdminJob}\r\n              handleBack={this.handleBack}\r\n              isFullJob={this.state.isFullJob}\r\n              handleSubmit={this.handleSubmitClaim}\r\n              settings={this.props.settings}\r\n              groupPercent={this.state.groupPercent}\r\n              mainPercent={this.state.totalProgress}\r\n              jobLevel={\r\n                this.state.isAdminJob\r\n                  ? true\r\n                  : this.props.fromPB\r\n                  ? this.props.jobLevel\r\n                  : this.state.mainWorkTypes.find(\r\n                      (x) => x.OId == this.state.worktypeId\r\n                    ).JobLevel\r\n              }\r\n              apiRoute={this.props.apiRoute}\r\n            />\r\n          );\r\n        }\r\n        default:\r\n          return <div></div>;\r\n      }\r\n    };\r\n    return (\r\n      <Fragment>\r\n        <FormDialog\r\n          logout={this.state.logoutClicked}\r\n          header={this.state.dialogHeader}\r\n          text={this.state.dialogText}\r\n          placeholer=\"Please describe\"\r\n          open={this.state.dialogOpen}\r\n          onCommentSave={this.state.dialogSave}\r\n          alert={this.state.alert}\r\n          doSaving={this.state.doSaving}\r\n        />\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#ebedf1\",\r\n            paddingRight: \"10px\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          {renderConditionaly()}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default CalimContainer;\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://www.aplnz.co.nz/\">\r\n        APL\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const emailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const passwordChange = (e) => {\r\n    if (e.keyCode === 13) {\r\n      handleSignInClicked();\r\n    }\r\n    setPassword(e.target.value);\r\n  };\r\n  const handleSignInClicked = () => {\r\n    props.handleSignIn(email, password);\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/APL.png\"}\r\n          alt=\"APL\"\r\n          style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}\r\n        />\r\n        <Typography component=\"h4\" variant=\"h4\">\r\n          Sign in\r\n        </Typography>\r\n        <div className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Username\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={(e) => emailChange(e)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onKeyUp={(e) => passwordChange(e)}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> \\\\*/}\r\n          <Button\r\n            // type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            type=\"text\"\r\n            onClick={handleSignInClicked}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </div>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ESPSelect from \"../../components/controls/ESPSelect\";\r\nimport ESPTextField from \"../../components/controls/ESPTextField\";\r\nimport ESPCheckbox from \"../../components/controls/ESPCheckbox\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport {\r\n  Avatar,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TableCell,\r\n  TableContainer,\r\n  TableBody,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Helper from \"../../components/logics/Helper\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Fragment } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass UserManagement extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loginUsers: [],\r\n      model: {},\r\n      changes: [],\r\n      changePassword: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.usermanagementInitData();\r\n  }\r\n  usermanagementInitData = () => {\r\n    Helper.apiPost(`${this.props.apiRoute}Account/InitClaimUserManagement`)\r\n      .then((r) => {\r\n        var data = r.data;\r\n        this.setState({\r\n          loginUsers: data.Item1,\r\n\r\n          model: {\r\n            Email: \"\",\r\n            Password: \"\",\r\n            EspUsers: data.Item2,\r\n            IsAdmin: false,\r\n            IsPublic: false,\r\n            IsDisabled: false,\r\n            EspUserId: \"\",\r\n            LoginId: \"\",\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Error in getting user management Data\");\r\n      });\r\n  };\r\n  onSave = () => {\r\n    if (!this.state.changePassword) {\r\n      Helper.apiPost(`${this.props.apiRoute}Account/Register`, {\r\n        Email: this.state.model.Email,\r\n        Password: this.state.model.Password,\r\n        ConfirmPassword: this.state.model.Password,\r\n        IsAdmin: this.state.model.IsAdmin,\r\n        IsPublic: this.state.model.IsPublic,\r\n        UserId: this.state.model.EspUserId,\r\n      })\r\n        .then((r) => {\r\n          alert(\"Successfuly added\");\r\n          //window.location.reload(false);\r\n          <Redirect to=\"/\" />;\r\n        })\r\n        .catch((err) => {\r\n          if (err.response) alert(\"Error in adding user\" + err.response.data);\r\n          else alert(\"Error in adding user\" + err);\r\n          window.location.href = \".\";\r\n        });\r\n    } else {\r\n      Helper.apiPost(`${this.props.apiRoute}Account/SetPassword`, {\r\n        Id: this.state.model.LoginId,\r\n        NewPassword: this.state.model.Password,\r\n        ConfirmPassword: this.state.model.Password,\r\n      })\r\n        .then((r) => {\r\n          alert(\"Successfuly Save\");\r\n          const model = this.state.model;\r\n\r\n          model.Email = \"\";\r\n          model.Password = \"\";\r\n          model.IsAdmin = false;\r\n          model.IsPublic = false;\r\n          model.IsDisabled = false;\r\n          model.EspUserId = \"\";\r\n          model.LoginId = \"\";\r\n          model.EspUsers.map((e) => {\r\n            e.Selected = false;\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            model,\r\n            changePassword: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          if (err.response)\r\n            alert(\"Error in saving new password\" + err.response.data);\r\n          else alert(\"Error in saving new password\" + err);\r\n        });\r\n    }\r\n  };\r\n  onChangePassword = (id) => {\r\n    const user = this.state.loginUsers.find((x) => x.Id == id);\r\n    const EspUsers = this.state.model.EspUsers;\r\n    if (!user.IsPublic) {\r\n      const espUser = EspUsers.find((x) => x.Value == user.WorkerId);\r\n      const espInx = EspUsers.indexOf(espUser);\r\n      espUser.Selected = true;\r\n\r\n      EspUsers.splice(espInx, 1, espUser);\r\n    }\r\n    const model = {\r\n      Email: user.Email,\r\n      IsAdmin: user.IsAdmin,\r\n      IsPublic: user.IsPublic,\r\n      EspUserId: user.WorkerId,\r\n      LoginId: id,\r\n      EspUsers,\r\n    };\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        changePassword: true,\r\n        model,\r\n      },\r\n      () => {\r\n        console.log(user.Email + \" \" + user.Name);\r\n      }\r\n    );\r\n  };\r\n\r\n  onPropertyChange = (event) => {\r\n    var model = this.state.model;\r\n\r\n    let value = \"\";\r\n    if (event.target.type !== undefined && event.target.type === \"checkbox\")\r\n      value = event.target.checked;\r\n    else value = event.target.value;\r\n\r\n    model[event.target.name] = value;\r\n    this.setState({\r\n      ...this.state,\r\n      model,\r\n    });\r\n  };\r\n  onSelectChange = (event) => {\r\n    var model = this.state.model;\r\n    var newSelectedId = event.target.value;\r\n    let newValues = [];\r\n    model[event.target.name].map((item) => {\r\n      if (item.Value === newSelectedId)\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Selected: true,\r\n        });\r\n      else\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Selected: false,\r\n        });\r\n    });\r\n\r\n    model[event.target.name] = newValues;\r\n    model[\"EspUserId\"] = newSelectedId;\r\n    this.setState({\r\n      ...this.state,\r\n      model,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <CardHeader\r\n            title=\"User Management\"\r\n            subheader=\"\"\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" style={{ backgroundColor: \"blue\" }}>\r\n                {\" \"}\r\n                U{\" \"}\r\n              </Avatar>\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={4} xs={12}>\r\n                <ESPTextField\r\n                  name=\"Email\"\r\n                  label=\"Email\"\r\n                  helptext=\"\"\r\n                  type=\"email\"\r\n                  onPropertyChange={this.onPropertyChange}\r\n                  value={this.state.model.Email}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={12}>\r\n                <ESPTextField\r\n                  name=\"Password\"\r\n                  label=\"Password\"\r\n                  helptext=\"\"\r\n                  type=\"password\"\r\n                  onPropertyChange={this.onPropertyChange}\r\n                  value={this.state.model.Password}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={12}>\r\n                <ESPSelect\r\n                  name=\"EspUsers\"\r\n                  label=\"User Id in ESP\"\r\n                  helptext=\"\"\r\n                  items={this.state.model.EspUsers}\r\n                  onPropertyChange={this.onSelectChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={6}>\r\n                <ESPCheckbox\r\n                  name=\"IsAdmin\"\r\n                  label=\"Is admin user\"\r\n                  checked={this.state.model.IsAdmin}\r\n                  onPropertyChange={this.onPropertyChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={6}>\r\n                <ESPCheckbox\r\n                  name=\"IsPublic\"\r\n                  label=\"Is Public User\"\r\n                  checked={this.state.model.IsPublic}\r\n                  onPropertyChange={this.onPropertyChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={12} mx=\"auto\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  // className={classes.saveBtn}\r\n                  size=\"large\"\r\n                  onClick={this.onSave}\r\n                  startIcon={<SaveIcon />}\r\n                  disabled={\r\n                    !(\r\n                      this.state.model.Email &&\r\n                      this.state.model.Password &&\r\n                      (this.state.model.EspUserId || this.state.model.IsPublic)\r\n                    )\r\n                  }\r\n                >\r\n                  {this.state.changePassword ? \"Save Password\" : \"Add User\"}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item lg={12}>\r\n                <hr />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Hidden only={[\"xs\"]}>\r\n                <Grid item lg={4} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>Email</h4>\r\n                </Grid>\r\n                <Grid item lg={4} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>ESP User</h4>\r\n                </Grid>\r\n                <Grid item lg={1} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>Admin</h4>\r\n                </Grid>\r\n                <Grid item lg={1} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>Public User</h4>\r\n                </Grid>\r\n                <Grid item lg={2} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>Change Password</h4>\r\n                </Grid>\r\n              </Hidden>\r\n\r\n              <Grid item lg={12} xs={12}>\r\n                <hr />\r\n              </Grid>\r\n              {this.state.loginUsers.map((row) => (\r\n                <Fragment>\r\n                  <Grid item lg={4} xs={12}>\r\n                    <Hidden only={[\"sm\", \"lg\", \"xl\", \"md\"]}>Email: </Hidden>\r\n                    {row.Email}\r\n                  </Grid>\r\n                  <Grid item lg={4} xs={12}>\r\n                    <Hidden only={[\"sm\", \"lg\", \"xl\", \"md\"]}>Name: </Hidden>\r\n                    {row.Name}\r\n                  </Grid>\r\n                  <Grid item lg={1} xs={12}>\r\n                    <Hidden only={[\"sm\", \"lg\", \"xl\", \"md\"]}>Admin:</Hidden>\r\n                    {row.IsAdmin ? <CheckIcon /> : <CloseIcon />}\r\n                  </Grid>\r\n                  <Grid item lg={1} xs={12}>\r\n                    <Hidden only={[\"sm\", \"lg\", \"xl\", \"md\"]}>Public:</Hidden>\r\n                    {row.IsPublic ? <CheckIcon /> : <CloseIcon />}\r\n                  </Grid>\r\n                  <Grid item lg={2} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      // className={classes.saveBtn}\r\n                      size=\"medium\"\r\n                      onClick={() => this.onChangePassword(row.Id)}\r\n                      startIcon={<SaveIcon />}\r\n                    >\r\n                      Change Password\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid lg={12} xs={12}>\r\n                    <hr />\r\n                  </Grid>\r\n                </Fragment>\r\n              ))}\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default UserManagement;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport DrawerContainer from \"./components/DrawerContainer\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Performance from \"./pages/Performance\";\r\nimport Settings from \"./pages/AdminSettings/AdminSettingsContainer\";\r\nimport ProductionBoard from \"./pages/ProductionBoard/ProductionBoardContainer\";\r\nimport ClaimContainer from \"./pages/Claim/ClaimContainer\";\r\nimport Helper from \"./components/logics/Helper\";\r\nimport SignIn from \"./pages/SignIn\";\r\nimport UserManagement from \"./pages/UserManagement\";\r\nimport Loading from \"../src/pages/loading\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      step: 0,\r\n      page: -1,\r\n      fromPB: false,\r\n      logout: false,\r\n      settings: null,\r\n      texts: [],\r\n      isAdmin: false,\r\n      loggedIn: false,\r\n      isPublic: false,\r\n      loading: true,\r\n      claimingId: 0,\r\n      workerName: \"\",\r\n      joblevel: false,\r\n      jobCode: \"\",\r\n      claims: {\r\n        user_t: \"\",\r\n        a: false,\r\n        p: false,\r\n        w: 0,\r\n        pa: 0,\r\n      },\r\n      menuSize: 240,\r\n      mainRoute: \"\",\r\n      apiRoute: \"\",\r\n      localSettings: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"data.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            localSettings: json,\r\n            mainRoute: json.route,\r\n            apiRoute: json.apiRoute,\r\n            cookieId: json.name,\r\n          },\r\n          () => {\r\n            if (new Cookies().get(this.state.cookieId))\r\n              this.getServerSettings();\r\n          }\r\n        );\r\n      });\r\n  }\r\n  setSettings = (settings) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loggedIn: true,\r\n      settings: settings,\r\n    });\r\n  };\r\n  getServerSettings = () => {\r\n    try {\r\n      var url = `${this.state.apiRoute}AdminSettings/GetInfo`;\r\n      var claims = new Cookies().get(this.state.cookieId);\r\n      Helper.apiPost(url, claims, \"\")\r\n        .then((response) => {\r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              loggedIn: true,\r\n              settings: JSON.parse(response.data),\r\n              claims,\r\n            },\r\n            () => {\r\n              this.setState({\r\n                ...this.state,\r\n                loading: false,\r\n              });\r\n            }\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          if (err.response)\r\n            alert(\r\n              `Error in calling ESP (Admin Settings) API- ${err.response.data}`\r\n            );\r\n          else alert(`Error in calling ESP (Admin Settings) API- ${err}`);\r\n        });\r\n    } catch (err) {\r\n      alert(`Error in calling ESP (Admin Settings) API- ${err}`);\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n  setClaimingId = (id) => {\r\n    this.setState({\r\n      ...this.state,\r\n      claimingId: id,\r\n    });\r\n  };\r\n\r\n  changeStep = (j, texts, isAdmin = false) => {\r\n    this.setState({\r\n      ...this.state,\r\n      step: j,\r\n      texts,\r\n      isAdmin,\r\n    });\r\n  };\r\n  changeMenuSize = () => {\r\n    if (this.state.menuSize === 10)\r\n      this.setState({\r\n        ...this.state,\r\n        menuSize: 240,\r\n      });\r\n    else\r\n      this.setState({\r\n        ...this.state,\r\n        menuSize: 10,\r\n      });\r\n  };\r\n  handleSignIn = (email, password) => {\r\n    var response = Helper.setAsyncApiToken(\r\n      email,\r\n      password,\r\n      this.state.apiRoute\r\n    );\r\n    response\r\n      .then((r) => {\r\n        if (r && r.data && r.data.access_token) {\r\n          const model = {\r\n            user_t: r.data.access_token,\r\n            a: r.data.a,\r\n            p: r.data.p,\r\n            w: r.data.w,\r\n            pa: r.data.pa,\r\n          };\r\n          new Cookies().set(this.state.cookieId, JSON.stringify(model), {\r\n            path: \"/\",\r\n          });\r\n\r\n          this.getServerSettings();\r\n        }\r\n      })\r\n      .catch(function (response) {\r\n        if (response && response.response && response.response.status === 400)\r\n          alert(\"Username and password are not match\");\r\n        else alert(\"Error in get security code\" + response);\r\n        return null;\r\n      });\r\n  };\r\n  claimOnPB = (jid, wid, jl, jobCode) => {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        step: 1,\r\n        page: 0,\r\n        pbWorkTypeId: wid,\r\n        pbJobId: jid,\r\n        fromPB: true,\r\n        joblevel: jl,\r\n        jobCode,\r\n      },\r\n      () => {\r\n        this.props.history.push(`${this.state.mainRoute}claimpb`);\r\n      }\r\n    );\r\n  };\r\n  logoutFromPB = () => {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        step: 1,\r\n        page: -1,\r\n        fromPB: false,\r\n        logout: true,\r\n      },\r\n      () => {\r\n        this.props.history.push(`${this.state.mainRoute}claim`);\r\n      }\r\n    );\r\n  };\r\n  FadingRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n      <Route {...rest} render={(routeProps) => <Component {...routeProps} />} />\r\n    );\r\n  };\r\n  render() {\r\n    const role = this.state.claims.a ? \"a\" : \"u\";\r\n    const isPublic = this.state.claims.p;\r\n    const w = this.state.claims.w;\r\n    return (\r\n      <div style={{ backgroundColor: \"#ebedf1\" }}>\r\n        {this.state.loading && this.state.loggedIn && (\r\n          <Loading mainRoute={this.state.mainRoute} />\r\n        )}\r\n        {!this.state.loggedIn && <SignIn handleSignIn={this.handleSignIn} />}\r\n        {this.state.loggedIn && role === \"u\" && (\r\n          <div style={{ display: \"flex\" }}>\r\n            <DrawerContainer\r\n              step={this.state.step}\r\n              texts={this.state.texts}\r\n              isAdmin={this.state.isAdmin}\r\n              isSystemAdmin={false}\r\n              ShowProductionBoard={this.state.settings.PBShowProductionBoard}\r\n              menuSize={this.state.menuSize}\r\n              changeMenuSize={this.changeMenuSize}\r\n              cookieId={this.state.cookieId}\r\n            />\r\n            <main\r\n              style={{\r\n                flexGrow: 1,\r\n                paddingLeft: \"30px\",\r\n                paddingRight: \"10px\",\r\n                paddingTop: \"80px\",\r\n              }}\r\n            >\r\n              <Route\r\n                path={`${this.state.mainRoute}claim`}\r\n                render={(props) => (\r\n                  <ClaimContainer\r\n                    public={isPublic}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    fromPB={false}\r\n                    logout={this.state.logout}\r\n                    jobId={this.state.pbJobId}\r\n                    workTypeId={this.state.pbWorkTypeId}\r\n                    changeStep={this.changeStep}\r\n                    workerId={w}\r\n                    menuSize={this.state.menuSize}\r\n                    page={this.state.page}\r\n                    jobLevel={this.state.joblevel}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}claimpb`}\r\n                render={(props) => (\r\n                  <ClaimContainer\r\n                    public={isPublic}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    fromPB={this.state.fromPB}\r\n                    logout={this.state.logout}\r\n                    jobId={this.state.pbJobId}\r\n                    workTypeId={this.state.pbWorkTypeId}\r\n                    jobLevel={this.state.joblevel}\r\n                    changeStep={this.changeStep}\r\n                    workerId={w}\r\n                    menuSize={this.state.menuSize}\r\n                    page={this.state.page}\r\n                    jobCode={this.state.jobCode}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}productionBoard`}\r\n                render={(props) => (\r\n                  <ProductionBoard\r\n                    settings={this.state.settings}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    claimingId={this.state.claimingId}\r\n                    claimOnPB={this.claimOnPB}\r\n                    logoutFromPB={this.logoutFromPB}\r\n                  />\r\n                )}\r\n              />\r\n            </main>\r\n          </div>\r\n        )}\r\n        {this.state.loggedIn && role === \"a\" && (\r\n          <div style={{ display: \"flex\" }}>\r\n            <DrawerContainer\r\n              step={this.state.step}\r\n              texts={this.state.texts}\r\n              isAdmin={this.state.isAdmin}\r\n              isSystemAdmin={true}\r\n              menuSize={this.state.menuSize}\r\n              changeMenuSize={this.changeMenuSize}\r\n              cookieId={this.state.cookieId}\r\n            />\r\n            <main\r\n              style={{\r\n                flexGrow: 1,\r\n                paddingLeft: \"30px\",\r\n                paddingRight: \"0px\",\r\n                paddingTop: \"80px\",\r\n                marginLeft: this.state.menuSize === 0 ? \"-100px\" : \"0px\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  drawerPaper: { width: this.state.menuSize },\r\n                }}\r\n              />\r\n              {/* <Route path={`${this.state.mainRoute}`} component={Welcome} /> */}\r\n              <Route\r\n                path={`${this.state.mainRoute}claim`}\r\n                render={(props) => (\r\n                  <ClaimContainer\r\n                    public={false}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    changeStep={this.changeStep}\r\n                    isUser={false}\r\n                    fromPB={false}\r\n                    logout={this.state.logout}\r\n                    jobId={this.state.pbJobId}\r\n                    workTypeId={this.state.pbWorkTypeId}\r\n                    page={this.state.page}\r\n                    workerId=\"0\"\r\n                    menuSize={this.state.menuSize}\r\n                    jobLevel={this.state.joblevel}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}claimpb`}\r\n                render={(props) => (\r\n                  <ClaimContainer\r\n                    public={false}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    changeStep={this.changeStep}\r\n                    isUser={false}\r\n                    fromPB={this.state.fromPB}\r\n                    logout={this.state.logout}\r\n                    jobId={this.state.pbJobId}\r\n                    workTypeId={this.state.pbWorkTypeId}\r\n                    jobLevel={this.state.joblevel}\r\n                    page={this.state.page}\r\n                    workerId=\"0\"\r\n                    menuSize={this.state.menuSize}\r\n                    jobCode={this.state.jobCode}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}settings`}\r\n                render={(props) => (\r\n                  <Settings\r\n                    changeStep={this.changeStep}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    getServerSettings\r\n                    onChangeSettings={this.setSettings}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}performanceState`}\r\n                component={Performance}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}users`}\r\n                render={(props) => (\r\n                  <UserManagement\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}productionBoard`}\r\n                render={(props) => (\r\n                  <ProductionBoard\r\n                    claimingId={this.state.claimingId}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    claimOnPB={this.claimOnPB}\r\n                    logoutFromPB={this.logoutFromPB}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                  />\r\n                )}\r\n              />\r\n            </main>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter, withRouter } from \"react-router-dom\";\r\n\r\nconst AppWithRouter = withRouter(App);\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <AppWithRouter />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}