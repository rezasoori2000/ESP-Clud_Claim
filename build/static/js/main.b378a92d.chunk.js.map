{"version":3,"sources":["components/controls/VerticalStepper.jsx","components/DrawerContainer.js","pages/Performance.jsx","components/controls/ESPSelect.jsx","components/controls/ESPTextField.jsx","components/controls/ESPCheckbox.jsx","pages/AdminSettings/AdminSettingsPage.jsx","components/logics/Helper.jsx","pages/AdminSettings/AdminSettingsContainer.jsx","components/controls/IosSwitch.jsx","components/controls/ItemsList.jsx","components/controls/FullScreenDialog.jsx","pages/loading.js","pages/ProductionBoard/ProductionBoardPage.jsx","pages/ProductionBoard/ProductionBoardContainer.jsx","components/controls/Styles.jsx","pages/Claim/Login.jsx","components/controls/CircularProgressWithLabel.jsx","components/logics/ClaimLogic.jsx","pages/Claim/WorkTypes.jsx","pages/Claim/JobItems.jsx","components/controls/Barchart.jsx","pages/Claim/Summary.jsx","pages/Claim/DividedJobs.jsx","pages/Claim/Jobs.jsx","pages/Claim/Start.jsx","components/logics/Login.jsx","components/controls/FormDialog.jsx","pages/Claim/ClaimContainer.jsx","pages/SignIn.jsx","pages/UserManagement/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","backgroundColor","color","fontSize","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","getLabel","label","text","length","getLabels","p","index","adminJon","texts","VerticalStepper","props","classes","steps","step","className","Stepper","activeStep","orientation","map","isAdmin","Step","StepLabel","Typography","style","StepContent","Paper","square","elevation","DrawerContainer","drawerWidth","menuSize","createStyles","listItemText","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","background","menuButton","toolbar","mixins","drawerPaper","content","flexGrow","link","textDecoration","whiteColor","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","Cookies","height","Divider","List","textAlign","src","alt","isSystemAdmin","to","ListItem","ListItemIcon","ListItemText","primary","Button","variant","size","onClick","set","path","document","cookie","window","location","reload","href","mainRoute","startIcon","ShowProductionBoard","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Grid","container","item","lg","Hidden","only","changeMenuSize","noWrap","smUp","implementation","Drawer","anchor","open","onClose","paper","ModalProps","keepMounted","xsDown","Performance","ESPSelect","name","helptext","onPropertyChange","items","FormControl","fullWidth","Select","labelId","id","value","filter","x","Selected","Value","onChange","type","MenuItem","e","Text","FormHelperText","ESPTextField","OutlinedInput","ESPCheckbox","memo","checked","row","FormControlLabel","control","Checkbox","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","AdminSettingsPage","minWidth","flexWrap","textField","bullet","margin","transform","title","pos","saveBtn","saveBtnTop","useEffect","scrollTo","undefined","adminSettings","Groups","Card","CardHeader","subheader","avatar","Avatar","onSave","CardContent","TextField","disabled","placeholder","helperText","ServerAddress","InputLabelProps","shrink","Username","DatabaseName","Password","Factories","onSelectChange","AllowClaimingOutOfFactoryWork","IncrementPercentage","ShowingCode","TrackLateLogin","LateAllowance","multiple","i","onGroupsSelectChange","input","renderValue","selected","join","JobListOrdering","TrackEarlyLeave","EarlyLeaveAllowance","ShowStandardTime","NoClaimAllowance","HidePreProductionJobs","DividJobs","TrackNotLoggedOut","PBShowProductionBoard","PBHideOutOfFactoryWorkTypes","ClaimOnPB","PBTitleColumn","PBCustomerColumn","PBHourColumn","PBDueDateColumn","ShowRework","ShowColour","ShowQty","ShowSalesPerson","ShowEstimator","PBJobOrders","Z2A","PSShowPerformanceStates","PSStatisticChart","PSEnableIndividual","PSStatisticGroup","PSPerformanceChart","mx","Helper","getLocalToken","get","user_t","setAsyncApiToken","username","password","route","a","grant_type","withCredentials","data","Object","keys","key","encodeURIComponent","headers","axios","post","apiPost","url","errorName","defaults","Authorization","Accept","apiGet","alert","timeConvert","num","hours","rhours","Math","floor","toString","minutes","rminutes","round","Component","AdminSettingsContainer","handelPropertyChange","event","adSettings","state","target","changes","push","setState","newSelectedId","newValues","includes","Disabled","Group","n","getGroupsByAPI","apiRoute","captureIPAddress","fetch","method","then","res","ip","oid","response","oldAdminSettings","JSON","parse","catch","err","getAdminSettingsByAPI","onChangeSettings","saveAdminSettingsByAPI","history","user","this","changeStep","IOSSwitchMain","styled","Switch","focusVisibleClassName","disableRipple","transitionDuration","palette","mode","opacity","border","grey","boxSizing","borderRadius","transition","transitions","create","duration","IOSSwitch","maxWidth","inline","ItemsList","alignItems","ListItemAvatar","Author","Resource","secondary","Fragment","component","Date","IsBold","fontWeight","Comment","flex","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","StyledTableCell","withStyles","head","common","black","white","body","TableCell","StyledTableRow","action","hover","TableRow","handleClose","Dialog","fullScreen","TransitionComponent","header","uls","textList","TableContainer","sm","xs","Table","table","TableHead","TableBody","scope","align","Name","Std","Phy","Loading","ProductionBoardPage","openDialog","setOpenDialog","note","setNote","searchVal","setsearchVal","jobs","setJobs","wt","setWt","pie","setPie","createMuiTheme","overrides","MuiTooltip","tooltip","defaultLabelStyle","fontFamily","beginTr","code","wts","chuncked","myArray","chunk_size","arrayLength","tempArray","myChunk","slice","chunkArray","htd","trs","element","section","j","Progress","Tooltip","ChartObj","t","placement","radius","PieChart","defaultProps","segmentsShift","dataEntry","labelStyle","InputLabel","htmlFor","float","sx","InputBase","ml","txt","filterJobs","Title","toLowerCase","Code","Customer","md","logoutFromPB","s","settings","WorkTypes","w","Comments","TitleBackgroundColor","TitleColor","Hours","Due","UnitQty","SalesPerson","Estimator","Colour","verticalAlign","r","claimOnPB","Oid","JobLevel","paddingRight","paddingLeft","colSpan","ProductionBoardContainer","getProductionBoardInfoByAPI","loaded","jid","wid","jl","jobCode","gridSearchStyles","search","shape","fade","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","bolding","cursor","zIndex","boxBolding","boxShadow","borderBottom","borderRight","Login","logoutChecked","logout","useHistory","personList","loggingOut","IsLoggedIn","IsOnLeave","LastClaimTime","setTimeout","goBackToStart","fromPB","paddingTop","pathname","alignContent","Input","startAdornment","InputAdornment","searchNames","Box","bgcolor","handleLogin","OId","CircularProgressWithLabel","CircularProgress","top","left","bottom","right","CircularStatic","progress","Loginlogics","getJobItemsFromApi","jobId","worktypeId","workerId","WorkTypeId","message","getJobsOfWorkerFromApi","jobStage","siteWork","submitClaimInAPI","jobItems","groupPercent","comment","submitFullJobClaimInAPI","submitAdminJobClaimInAPI","claimingOId","GetClaimedByAPI","worktypId","GetPerfStatByAPI","from","Worktypes","workTypes","setSearchItems","setSearcVal","handleWorktypeNoteClicked","ClaimLogic","handleBack","menuIsOpen","claimingName","primaryWorktypeIds","sort","b","CategoryOrder","CategoryName","handleWorkTypeClick","clickable","stopPropagation","secondaryWorktypeIds","AirbnbSlider","thumb","active","track","valueLabel","rail","Slider","AirbnbThumbComponent","JobItems","mainJobItems","checkChange","Progress100","Main_Progress100","handleChange","val","inx","parseInt","changed","groupSliderValue","handleBtn","roundNumber","handleComplete","searchItems","jItems","clearSearch","some","totalProgress","v","g","ceil","btn","reduce","allItemsV6","StdTime","valuetext","handleSave","jobLevel","finishedItems","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","m","marginButtm","marginButtom","ThumbComponent","getAriaValueText","aria-labelledby","valueLabelDisplay","marks","min","max","onChangeCommitted","handleGroupedChanged","handleChanged","ItemNumber","CardActions","withTheme","Root","flexDirection","restProps","Label","whiteSpace","Barchart","Columns","valueField","argumentField","rootComponent","labelComponent","textarea","overflow","resize","minHight","lineHeight","Summary","setComment","changedItems","claimingItems","totalminute","totalPhyCalimgMinutes","chartData","space","String","fromCharCode","isFullJob","isAdminJob","handleSubmit","jobName","worktypeName","mainPercent","country","actual","std","TextareaAutosize","rowsMin","DividedJobs","defaultExpanded","loading","JobStageOrder","activeButton","JobStageName","handleJobClick","Note","Jobs","prototype","addDays","days","date","valueOf","setDate","getDate","IsSitWorkGroup","setactiveButton","setSiteJobs","loadedJobs","setLoadedJobs","setLoading","perfstat","setPerfstat","setPerfstatReady","dateFrom","setDateFrom","dateTo","setDateTo","setChartData","primaryJobs","setPrimaryJobs","secondaryJobs","setSecondaryJobs","ExampleCustomInput","getPerfStatAPI","fromBtn","toLocaleDateString","result","PointName","Actual","divideJobs","pj","sj","handleJobsButtonClicked","jobType","values","Item1","handleJobLoaded","handleLogOut","HidePostProductionJobs","adminJobs","customInput","Start","justify","minHeight","backgroundImage","backgroundPosition","backgroundRepeat","start","getListOfWorkersFromApi","mainWorkersList","saveLoginInAPI","saveLogoutAPI","getAsyncSettingsApi","authStr","worker","trackLateLogin","lateLoginTrack","currentTime","tempTime","StartTime","startTime","setMinutes","getMinutes","trackEarlyLeave","earlyLeaveAllowance","EndTime","endTime","FormDialog","allow","setAllow","doSaving","onCommentSave","DialogTitle","DialogContent","DialogContentText","autoFocus","placeholer","onKeyDown","DialogActions","CalimContainer","getPBJobItems","labelText","LabelText","WorkType","workTypeName","canClaimWholeJob","page","JobTitle","pageId","loadWorkersList","workersList","find","loggedInWorkerClick","console","log","login","dialogOpen","Skills","Primary","Secondary","claimingUser","claiminWorker","IsSitework","workTypeId","goToJobsPage","sid","isOnLeave","dialogHeader","dialogText","dialogSave","setClaimingId","checkWorkerLateLogin","logoutClicked","LastDayNotLoggedOut","Successful","Message","findIndex","checkWorkerEarlyLeave","newJobs","stateJobs","mainStateJobs","mainJobs","obj","setWorkerLOgout","clearSearchWorkTypes","mainWorkTypes","workType","searchJobs","mainAdminJobs","handleFullJob","Item2","selectedAdminJob","adminWorkType","selectedJob","selectedJobCode","handleSaveClaim","changedClaimingItems","handleSubmitClaim","role","public","handleFullSubmitClaim","claimingFullJob","prejobs","postjobs","renderConditionaly","Copyright","Link","getFullYear","main","form","submit","SignIn","email","setEmail","setPassword","handleSignInClicked","handleSignIn","Container","process","noValidate","required","autoComplete","emailChange","onKeyUp","keyCode","passwordChange","mt","UserManagement","usermanagementInitData","loginUsers","model","Email","EspUsers","IsAdmin","IsPublic","IsDisabled","EspUserId","LoginId","changePassword","Id","NewPassword","ConfirmPassword","UserId","onChangePassword","espUser","WorkerId","espInx","indexOf","splice","App","setSettings","loggedIn","getServerSettings","claims","claimingId","access_token","pa","stringify","status","pbWorkTypeId","pbJobId","joblevel","FadingRoute","rest","render","routeProps","isPublic","workerName","localSettings","json","ClaimContainer","isUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppWithRouter","withRouter","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b378a92d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport StepContent from \"@material-ui/core/StepContent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: \"#3a3d57\",\r\n    color: \"#fff!important\",\r\n    fontSize: \"0.7rem\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"Start\",\r\n    \"Login\",\r\n    \"Job Selection\",\r\n    \"WorkType Selection\",\r\n    \"Claiming\",\r\n    \"Finish\",\r\n  ];\r\n}\r\n\r\n// function getStepContent(index, p) {\r\n//   return \"\";\r\n//   switch (index) {\r\n//     case 0:\r\n//       return \"\";\r\n//     case 1:\r\n//       return \"\";\r\n//     case 2:\r\n//       return ``;\r\n//     default:\r\n//       return \"\";\r\n//   }\r\n// }\r\nfunction getLabel(label, text) {\r\n  if (text && text.length > 1) return `(${text})`;\r\n  //return label;\r\n}\r\nfunction getLabels(p, label, index, adminJon) {\r\n  switch (index) {\r\n    case 1:\r\n      return getLabel(label, p.texts[0]);\r\n    case 2:\r\n      return getLabel(label, p.texts[1]);\r\n    case 3:\r\n      return getLabel(label, p.texts[2]);\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nconst VerticalStepper = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    props.step > 0 && (\r\n      <div className={classes.root}>\r\n        <Stepper\r\n          activeStep={props.step - 1}\r\n          orientation=\"vertical\"\r\n          className={classes.root}\r\n        >\r\n          {steps.map(\r\n            (label, index) =>\r\n              !(props.isAdmin && index === 3) && (\r\n                <Step key={label}>\r\n                  <StepLabel>\r\n                    <Typography style={{ color: \"white\", fontSize: \"0.8rem\" }}>\r\n                      {label}\r\n                      <br />\r\n                      <span> {getLabels(props, label, index)}</span>\r\n                    </Typography>\r\n                  </StepLabel>\r\n                  <StepContent>\r\n                    <Typography></Typography>\r\n                    <div className={classes.actionsContainer}>\r\n                      <div></div>\r\n                    </div>\r\n                  </StepContent>\r\n                </Step>\r\n              )\r\n          )}\r\n        </Stepper>\r\n        {props.step - 1 === steps.length && (\r\n          <Paper square elevation={0} className={classes.resetContainer}>\r\n            <Typography>All steps completed - you&apos;re finished</Typography>\r\n          </Paper>\r\n        )}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default VerticalStepper;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport VerticalStepper from \"./controls/VerticalStepper\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport FormatIndentDecreaseIcon from \"@mui/icons-material/FormatIndentDecrease\";\r\nimport FormatIndentIncreaseIcon from \"@mui/icons-material/FormatIndentIncrease\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nconst DrawerContainer = (props) => {\r\n  const drawerWidth = props.menuSize;\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      listItemText: {\r\n        fontSize: \"0.8rem\",\r\n      },\r\n\r\n      root: {\r\n        display: \"flex\",\r\n      },\r\n      drawer: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n        },\r\n      },\r\n      appBar: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          width: `calc(100% - ${drawerWidth}px)`,\r\n          marginLeft: drawerWidth,\r\n          background: \"#ebedf1\",\r\n          color: \"Black\",\r\n        },\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n          display: \"none\",\r\n        },\r\n      },\r\n      // necessary for content to be below app bar\r\n      toolbar: theme.mixins.toolbar,\r\n      drawerPaper: {\r\n        width: drawerWidth,\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n      },\r\n      link: {\r\n        textDecoration: \"none\",\r\n        color: \"#fff\",\r\n      },\r\n      whiteColor: {\r\n        color: \"#fff\",\r\n      },\r\n    })\r\n  );\r\n  const classes = useStyles();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const cookies = new Cookies();\r\n  //const { forwardRef, useRef, useImperativeHandle } = React;\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div\r\n      style={{ backgroundColor: \"#242845\", height: \"100%\", fontSize: \"0.7rem\" }}\r\n    >\r\n      <div className=\"theme.mixins.toolbar, drawerPaper: 200\" />\r\n      <Divider />\r\n      <List className=\"mt-5\">\r\n        <div style={{ textAlign: \"center\", background: \"#000\" }}>\r\n          <img src=\"./favicon.png\" alt=\"APL\" />\r\n        </div>\r\n        <br />\r\n        <br />\r\n\r\n        <br />\r\n        {props.isSystemAdmin && (\r\n          <div>\r\n            <Link\r\n              to=\"./claim\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"1\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <InboxIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Claim\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                >\r\n                  <h4>Claim</h4>\r\n                </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n            <Link\r\n              to=\"./settings\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"2\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <SettingsIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Admin Settings\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <Link\r\n              to=\"./ProductionBoard\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"2\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <SettingsIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Production&nbsp;Board\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <Link\r\n              to=\"./users\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"2\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <SettingsIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"User&nbsp;Management\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n            <VerticalStepper\r\n              step={props.step}\r\n              texts={props.texts}\r\n              isAdmin={props.isAdmin}\r\n            />\r\n            <Divider />\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              style={{ color: \"#fff\", marginTop: \"30px\" }}\r\n              onClick={() => {\r\n                new Cookies().set(\"_claim\", null, { path: \"/\" });\r\n                document.cookie =\r\n                  \"_claim=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n                window.location.reload(true);\r\n                window.location.href = `${this.props.mainRoute}`;\r\n              }}\r\n              startIcon={<MeetingRoomIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        )}\r\n        {!props.isSystemAdmin && (\r\n          <div>\r\n            <Link\r\n              to=\"./claim\"\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n            >\r\n              <ListItem button key=\"1\">\r\n                <ListItemIcon style={{ color: \"#fff\" }}>\r\n                  <InboxIcon />{\" \"}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Claim\"\r\n                  classes={{ primary: classes.listItemText }}\r\n                >\r\n                  <h4>Claim</h4>\r\n                </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n            {props.ShowProductionBoard && (\r\n              <Link\r\n                to=\"./ProductionBoard\"\r\n                style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n              >\r\n                <ListItem button key=\"2\">\r\n                  <ListItemIcon style={{ color: \"#fff\" }}>\r\n                    <SettingsIcon />{\" \"}\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary=\"Production&nbsp;Board\"\r\n                    classes={{ primary: classes.listItemText }}\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            )}\r\n            <VerticalStepper\r\n              step={props.step}\r\n              texts={props.texts}\r\n              isAdmin={props.isAdmin}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              color=\"white\"\r\n              style={{ color: \"#fff\", marginTop: \"30px\" }}\r\n              onClick={() => {\r\n                new Cookies().set(\"_claim\", null, { path: \"/\" });\r\n                document.cookie =\r\n                  \"_claim=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n                window.location.reload(true);\r\n                window.location.href = `${this.props.mainRoute}`;\r\n              }}\r\n              startIcon={<MeetingRoomIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  // const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div>\r\n      {/* {setStep(props.step)} */}\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar style={{ backgroundColor: \"#fff\", color: \"black\" }}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={1}>\r\n              <Hidden only={(\"xs\", \"sm\")}>\r\n                <Button\r\n                  onClick={() => {\r\n                    props.changeMenuSize();\r\n                  }}\r\n                  startIcon={\r\n                    props.menuSize === 240 ? (\r\n                      <FormatIndentDecreaseIcon />\r\n                    ) : (\r\n                      <FormatIndentIncreaseIcon />\r\n                    )\r\n                  }\r\n                ></Button>\r\n              </Hidden>\r\n            </Grid>\r\n            <Grid item lg={10}>\r\n              <Typography noWrap>ESP-Cloud Claim</Typography>\r\n            </Grid>\r\n            <Grid item lg={1}></Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            // container={container}\r\n            variant=\"temporary\"\r\n            anchor=\"left\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true,\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawerContainer;\r\n","import React from 'react';\r\n\r\nconst Performance=()=>(\r\n    <div>\r\n        <h1>the Performance page</h1>\r\n    </div>\r\n);\r\n\r\nexport default Performance;\r\n","import React from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nconst ESPSelect = ({ name, label, helptext,onPropertyChange, items }) => {\r\n    if (!items)\r\n        return <div></div>\r\n    else\r\n        return (\r\n\r\n            <FormControl fullWidth variant=\"outlined\" style={{ marginBottom: 20 }}>\r\n                {label}\r\n                <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id={name}\r\n                    value={items && items.length > 0 ? (items.filter(x => x.Selected).length>0? items.filter(x => x.Selected)[0].Value: -1) : -1}\r\n                    onChange={onPropertyChange}\r\n                    name={name}\r\n                    type='select'\r\n                >\r\n                    <MenuItem value=\"-1\">\r\n                        <em>Select</em>\r\n                    </MenuItem>\r\n                    {items && items.map(e => <MenuItem key={e.Value} value={e.Value}>{e.Text}</MenuItem>)}\r\n                </Select>\r\n                <FormHelperText>{helptext}</FormHelperText>\r\n            </FormControl>\r\n        )\r\n}\r\nexport default ESPSelect;","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\n\r\n\r\nconst ESPTextField =({name,label,helptext,value,type='text',onPropertyChange})=>{\r\n    \r\n    return(\r\n        <FormControl variant=\"outlined\"  fullWidth style={{marginBottom:20}} >\r\n        {label}\r\n        <OutlinedInput \r\n            value={value||''}\r\n            //onChange={handleChange}\r\n            name={name}\r\n            type={type}\r\n            id={name}\r\n            label={label}\r\n            onChange={onPropertyChange}\r\n            fullWidth\r\n        /> \r\n        <FormHelperText>{helptext}</FormHelperText>\r\n    </FormControl>\r\n    )\r\n}\r\nexport default ESPTextField;","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst ESPCheckbox = React.memo(({ name, label, checked,onPropertyChange,row=12 }) => {\r\n    return (\r\n            <Grid item lg={row}>\r\n            <FormControlLabel  style={{marginBottom:20}} control={\r\n                <Checkbox\r\n                \r\n                    checked={typeof checked ==='undefined'? false: checked}\r\n                    onChange={onPropertyChange}\r\n                    name={name}\r\n                    id={name}\r\n                    color=\"primary\"\r\n                />\r\n            }\r\n                label={label}\r\n            />\r\n            </Grid>\r\n        \r\n    \r\n    )});\r\n    export default ESPCheckbox;","import React, { useEffect } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ESPSelect from \"../../components/controls/ESPSelect\";\r\nimport ESPTextField from \"../../components/controls/ESPTextField\";\r\nimport ESPCheckbox from \"../../components/controls/ESPCheckbox\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Select from \"@mui/material/Select\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst AdminSettingsPage = (props) => {\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        minWidth: 275,\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n      },\r\n\r\n      textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: \"25ch\",\r\n      },\r\n      bullet: {\r\n        display: \"inline-block\",\r\n        margin: \"0 2px\",\r\n        transform: \"scale(0.8)\",\r\n      },\r\n      title: {\r\n        fontSize: 14,\r\n      },\r\n      pos: {\r\n        marginBottom: 12,\r\n      },\r\n      saveBtn: {\r\n        marginTop: 40,\r\n      },\r\n      saveBtnTop: {\r\n        marginTop: 10,\r\n      },\r\n    })\r\n  );\r\n\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    props.adminSettings.Groups !== undefined && (\r\n      <div>\r\n        <Card>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={10}>\r\n              <CardHeader\r\n                title=\"Database Settings\"\r\n                subheader=\"ESP database connection settings \"\r\n                avatar={\r\n                  <Avatar\r\n                    aria-label=\"recipe\"\r\n                    style={{ backgroundColor: \"blue\" }}\r\n                  >\r\n                    {\" \"}\r\n                    D{\" \"}\r\n                  </Avatar>\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item lg={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.saveBtnTop}\r\n                size=\"medium\"\r\n                onClick={props.onSave}\r\n                startIcon={<SaveIcon />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <CardContent></CardContent>\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={6}>\r\n                <TextField\r\n                  id=\"ServerAddress\"\r\n                  label=\"DB Server\"\r\n                  style={{ margin: 8 }}\r\n                  disabled\r\n                  placeholder=\"DB Server\"\r\n                  helperText=\"Database Server Address\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  value={props.adminSettings.ServerAddress || \"\"}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n\r\n                <TextField\r\n                  id=\"Username\"\r\n                  label=\"Login\"\r\n                  style={{ margin: 8 }}\r\n                  disabled\r\n                  placeholder=\"Login\"\r\n                  value={props.adminSettings.Username || \"\"}\r\n                  helperText=\"Database Username\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={6}>\r\n                <TextField\r\n                  id=\"DatabaseName\"\r\n                  label=\"DB Name\"\r\n                  style={{ margin: 8 }}\r\n                  disabled\r\n                  placeholder=\"Database Name\"\r\n                  helperText=\"Database Name\"\r\n                  fullWidth\r\n                  value={props.adminSettings.DatabaseName || \"\"}\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  id=\"Password\"\r\n                  label=\"Password\"\r\n                  style={{ margin: 8 }}\r\n                  disabled\r\n                  value={props.adminSettings.Password || \"\"}\r\n                  placeholder=\"Placeholder\"\r\n                  helperText=\"Database password\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <hr />\r\n        <Card>\r\n          <CardHeader\r\n            title=\"General Settings\"\r\n            subheader=\"Job Claim section settings \"\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" style={{ backgroundColor: \"blue\" }}>\r\n                {\" \"}\r\n                G{\" \"}\r\n              </Avatar>\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={6}>\r\n                <ESPSelect\r\n                  disabled\r\n                  name=\"Factories\"\r\n                  label=\"Default Factory\"\r\n                  helptext=\"Name of default Factory\"\r\n                  items={props.adminSettings.Factories}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n                {/* <ESPCheckbox\r\n                name=\"MultipleJobs\"\r\n                label=\"Enable Multiple Jobs\"\r\n                checked={props.adminSettings.MultipleJobs}\r\n                onPropertyChange={props.onPropertyChange}\r\n              /> */}\r\n                <ESPCheckbox\r\n                  name=\"AllowClaimingOutOfFactoryWork\"\r\n                  label=\"Allow claiming on Out of Factory work\"\r\n                  checked={props.adminSettings.AllowClaimingOutOfFactoryWork}\r\n                  onPropertyChange={props.onPropertyChange}\r\n                />\r\n                <ESPTextField\r\n                  name=\"IncrementPercentage\"\r\n                  label=\"Increment\"\r\n                  helptext=\"Percentage (%) increment\"\r\n                  type=\"number\"\r\n                  onPropertyChange={props.onPropertyChange}\r\n                  value={props.adminSettings.IncrementPercentage}\r\n                />\r\n                <ESPSelect\r\n                  name=\"ShowingCode\"\r\n                  label=\"Show Quote Number\"\r\n                  helptext=\"Show V6 Quote Number/ESP Code on Job\"\r\n                  items={props.adminSettings.ShowingCode}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n\r\n                <Grid container>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"TrackLateLogin\"\r\n                      label=\"Track late login\"\r\n                      checked={props.adminSettings.TrackLateLogin}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={9}>\r\n                    <ESPTextField\r\n                      name=\"LateAllowance\"\r\n                      label=\"Late Login Min\"\r\n                      helptext=\"Number of minutes allowed for late login\"\r\n                      type=\"number\"\r\n                      value={props.adminSettings.LateAllowance}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item lg={6}>\r\n                {/* <ESPSelect\r\n                name=\"Groups\"\r\n                label=\"Default Groups\"\r\n                helptext=\"Select Groups for claim\"\r\n                items={props.adminSettings.Groups}\r\n                onPropertyChange={props.onSelectChange}\r\n              /> */}\r\n                <FormControl\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: 20 }}\r\n                >\r\n                  Select Groups for claim\r\n                  <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    name=\"Groups\"\r\n                    value={props.adminSettings.Groups.filter(\r\n                      (x) => x.Selected\r\n                    ).map((i) => i.Text)}\r\n                    onChange={(e) => props.onGroupsSelectChange(e)}\r\n                    input={<OutlinedInput label=\"Tag\" />}\r\n                    renderValue={(selected) => selected.join(\", \")}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {props.adminSettings.Groups.map((item) => (\r\n                      <MenuItem key={item.Text} value={item.Text}>\r\n                        <Checkbox checked={item.Selected} />\r\n                        <ListItemText primary={item.Text} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                {/* <ESPCheckbox\r\n                name=\"ScheduledJobs\"\r\n                label=\"Show Scheduled Jobs After Claim\"\r\n                checked={props.adminSettings.ScheduledJobs}\r\n                onPropertyChange={props.onPropertyChange}\r\n              /> */}\r\n                <ESPSelect\r\n                  name=\"JobListOrdering\"\r\n                  label=\"Job List Order\"\r\n                  helptext=\"Order Showed in Job List Page\"\r\n                  items={props.adminSettings.JobListOrdering}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n                {/* <ESPCheckbox\r\n                name=\"CanFinishWholeJob\"\r\n                label=\"Enable Finish Whole Job feature\"\r\n                checked={props.adminSettings.CanFinishWholeJob}\r\n                onPropertyChange={props.onPropertyChange}\r\n              /> */}\r\n                <Grid container>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"TrackEarlyLeave\"\r\n                      label=\"Track early leave\"\r\n                      checked={props.adminSettings.TrackEarlyLeave}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={9}>\r\n                    <ESPTextField\r\n                      name=\"EarlyLeaveAllowance\"\r\n                      label=\"Early Leave Min\"\r\n                      helptext=\"Number of minutes allowed for early leave\"\r\n                      type=\"number\"\r\n                      value={props.adminSettings.EarlyLeaveAllowance}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={12}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowStandardTime\"\r\n                      label=\"Show Standard Time\"\r\n                      checked={props.adminSettings.ShowStandardTime}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item lg={12}>\r\n                    <ESPTextField\r\n                      name=\"NoClaimAllowance\"\r\n                      label=\"No Claim Allowance\"\r\n                      helptext=\"Seconds No Claim Allowance Before Logout. (Zero= disable)\"\r\n                      type=\"number\"\r\n                      value={props.adminSettings.NoClaimAllowance}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item lg={4}>\r\n                  <ESPCheckbox\r\n                    name=\"HidePreProductionJobs\"\r\n                    label=\"Hide PreProduction Jobs\"\r\n                    checked={props.adminSettings.HidePreProductionJobs}\r\n                    onPropertyChange={props.onPropertyChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={4}>\r\n                  <ESPCheckbox\r\n                    name=\"DividJobs\"\r\n                    label=\"Enable Dividing jobs\"\r\n                    checked={props.adminSettings.DividJobs}\r\n                    onPropertyChange={props.onPropertyChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item lg={4}>\r\n                  <ESPCheckbox\r\n                    name=\"TrackNotLoggedOut\"\r\n                    label=\"Alert not logged out worker\"\r\n                    checked={props.adminSettings.TrackNotLoggedOut}\r\n                    onPropertyChange={props.onPropertyChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n        <hr />\r\n\r\n        <Card>\r\n          <CardHeader\r\n            title=\"Production Board\"\r\n            subheader=\"Production Board Section Settings\"\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" style={{ backgroundColor: \"blue\" }}>\r\n                {\" \"}\r\n                P{\" \"}\r\n              </Avatar>\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={8}>\r\n                <Grid container>\r\n                  <Grid item lg={4}>\r\n                    <ESPCheckbox\r\n                      name=\"PBShowProductionBoard\"\r\n                      label=\"Enable Production Board\"\r\n                      checked={props.adminSettings.PBShowProductionBoard}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={4}>\r\n                    <ESPCheckbox\r\n                      name=\"PBHideOutOfFactoryWorkTypes\"\r\n                      label=\"Hide Out of Factory WorkTypes\"\r\n                      checked={props.adminSettings.PBHideOutOfFactoryWorkTypes}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={4}>\r\n                    <ESPCheckbox\r\n                      name=\"ClaimOnPB\"\r\n                      label=\"Claim on Production Board\"\r\n                      checked={props.adminSettings.ClaimOnPB}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container>\r\n                  <Grid item lg={12}>\r\n                    <label>Extra Columns</label>\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"PBTitleColumn\"\r\n                      label=\"Title\"\r\n                      checked={props.adminSettings.PBTitleColumn}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"PBCustomerColumn\"\r\n                      label=\"Customer\"\r\n                      checked={props.adminSettings.PBCustomerColumn}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"PBHourColumn\"\r\n                      label=\"Hours\"\r\n                      checked={props.adminSettings.PBHourColumn}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"PBDueDateColumn\"\r\n                      label=\"Due Date\"\r\n                      checked={props.adminSettings.PBDueDateColumn}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowRework\"\r\n                      label=\"Show Rework\"\r\n                      checked={props.adminSettings.ShowRework}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowColour\"\r\n                      label=\"Show Colour\"\r\n                      checked={props.adminSettings.ShowColour}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowQty\"\r\n                      label=\"Show Unit Qty\"\r\n                      checked={props.adminSettings.ShowQty}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowSalesPerson\"\r\n                      label=\"Show SalesPerson\"\r\n                      checked={props.adminSettings.ShowSalesPerson}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item lg={3}>\r\n                    <ESPCheckbox\r\n                      name=\"ShowEstimator\"\r\n                      label=\"Show Estimator\"\r\n                      checked={props.adminSettings.ShowEstimator}\r\n                      onPropertyChange={props.onPropertyChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item lg={3}>\r\n                <ESPSelect\r\n                  name=\"PBJobOrders\"\r\n                  label=\"Job Order\"\r\n                  helptext=\"Listing Job Order\"\r\n                  items={props.adminSettings.PBJobOrders}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={1}>\r\n                <ESPCheckbox\r\n                  name=\"Z2A\"\r\n                  label=\"Z to A\"\r\n                  checked={props.adminSettings.Z2A}\r\n                  onPropertyChange={props.onPropertyChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n        <hr />\r\n\r\n        <Card>\r\n          <CardHeader\r\n            title=\"Performance Statistics\"\r\n            subheader=\"Performance Statistics Section Settings\"\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" style={{ backgroundColor: \"blue\" }}>\r\n                {\" \"}\r\n                S{\" \"}\r\n              </Avatar>\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={6}>\r\n                <ESPCheckbox\r\n                  name=\"PSShowPerformanceStates\"\r\n                  label=\"Enable Performance Stats\"\r\n                  checked={props.adminSettings.PSShowPerformanceStates}\r\n                  onPropertyChange={props.onPropertyChange}\r\n                />\r\n                <ESPSelect\r\n                  name=\"PSStatisticChart\"\r\n                  label=\"Statistic Chart Type\"\r\n                  helptext=\"\"\r\n                  items={props.adminSettings.PSStatisticChart}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={6}>\r\n                <ESPCheckbox\r\n                  name=\"PSEnableIndividual\"\r\n                  label=\"Enable Individual Performance Stats\"\r\n                  checked={props.adminSettings.PSEnableIndividual}\r\n                  onPropertyChange={props.onPropertyChange}\r\n                />\r\n                <ESPSelect\r\n                  name=\"PSStatisticGroup\"\r\n                  label=\"Statistic Group\"\r\n                  helptext=\"\"\r\n                  items={props.adminSettings.PSStatisticGroup}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={5}>\r\n                <ESPSelect\r\n                  name=\"PSPerformanceChart\"\r\n                  label=\"Performance Chart Duration\"\r\n                  helptext=\"\"\r\n                  items={props.adminSettings.PSPerformanceChart}\r\n                  onPropertyChange={props.onSelectChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={5}></Grid>\r\n              <Grid item lg={2} mx=\"auto\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.saveBtn}\r\n                  size=\"medium\"\r\n                  onClick={props.onSave}\r\n                  startIcon={<SaveIcon />}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default AdminSettingsPage;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nclass HelperLogic extends React.Component {\r\n  getLocalToken = () => {\r\n    const cookies = new Cookies();\r\n    var claims = cookies.get(\"_claim\");\r\n\r\n    return claims.user_t;\r\n  };\r\n\r\n  setAsyncApiToken = async (username, password, route) => {\r\n    var value = {\r\n      grant_type: \"password\",\r\n      username: username,\r\n      password: password,\r\n      withCredentials: true,\r\n    };\r\n    var data = Object.keys(value)\r\n      .map(function (key) {\r\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(value[key]);\r\n      })\r\n      .join(\"&\");\r\n    var headers = {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Access-Control-Allow-Credentials\": \"true\",\r\n      \"Access-Control-Allow-Methods\": \"*\",\r\n    };\r\n    return await axios.post(`${route}token`, data, headers);\r\n  };\r\n\r\n  apiPost = async (url, value, errorName) => {\r\n    var response = {};\r\n    // var data = JSON.stringify(value);\r\n    axios.defaults.headers.post[\"Authorization\"] =\r\n      \"bearer \" + this.getLocalToken();\r\n    axios.defaults.headers.post[\"Content-Type\"] =\r\n      \"application/json; charset=UTF-8\";\r\n    axios.defaults.headers.post[\"Accept\"] = \"application/json\";\r\n\r\n    var headers = {\r\n      // \"Access-Control-Allow-Origin\": \"*\",\r\n      // \"Access-Control-Allow-Credentials\": \"true\",\r\n      // \"Access-Control-Allow-Methods\": \"*\",\r\n      Authorization: \"bearer \" + this.getLocalToken(),\r\n      \"Content-Type\": \"application/json; charset=UTF-8\",\r\n      Accept: \"application/json\",\r\n    };\r\n    return await axios.post(`${url}`, value, headers);\r\n  };\r\n\r\n  apiGet = async (url, errorName) => {\r\n    try {\r\n      axios.defaults.headers.post[\"Authorization\"] =\r\n        \"bearer \" + this.getLocalToken();\r\n      axios.defaults.headers.post[\"Content-type\"] = \"application/json\";\r\n\r\n      await axios.get(url);\r\n    } catch (err) {\r\n      alert(`Error in calling ESP (${errorName}) API- ${err}`);\r\n    }\r\n  };\r\n  /*\r\n  apiAsyncPost = async (url, value, errorName) => {\r\n    var response = {};\r\n    var data = JSON.stringify(value);\r\n    try {\r\n      axios.defaults.headers.post[\"Authorization\"] =\r\n        \"bearer \" + this.getLocalToken();\r\n      axios.defaults.headers.post[\"Content-type\"] = \"application/json\";\r\n\r\n      response = await axios.post(`${config.apiUrl}${url}`, data);\r\n      return response;\r\n    } catch (err) {\r\n      alert(` ${err.response.data}`);\r\n    }\r\n  };\r\n\r\n  */\r\n  timeConvert = (num) => {\r\n    var hours = num / 60;\r\n    var rhours = Math.floor(hours).toString();\r\n    var minutes = (hours - rhours) * 60;\r\n    var rminutes = Math.round(minutes).toString();\r\n    return (\r\n      (rhours.length == 1 ? \"0\" + rhours : rhours) +\r\n      \":\" +\r\n      (rminutes.length == 1 ? \"0\" + rminutes : rminutes)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <din></din>;\r\n  }\r\n}\r\n\r\nconst Helper = new HelperLogic();\r\nexport default Helper;\r\n","import React from \"react\";\r\nimport AdminSettingsPage from \"./AdminSettingsPage\";\r\nimport Helper from \"../../components/logics/Helper\";\r\n\r\nclass AdminSettingsContainer extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      adminSettings: {},\r\n      user: {},\r\n      changes: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getAdminSettingsByAPI();\r\n    this.captureIPAddress();\r\n    this.props.changeStep(0);\r\n  }\r\n  handelPropertyChange = (event) => {\r\n    var adSettings = this.state.adminSettings;\r\n\r\n    let value = \"\";\r\n    if (event.target.type !== undefined && event.target.type === \"checkbox\")\r\n      value = event.target.checked;\r\n    else value = event.target.value;\r\n\r\n    var changes = this.state.changes;\r\n    changes.push({\r\n      name: event.target.name,\r\n      value: value,\r\n    });\r\n\r\n    adSettings[event.target.name] = value;\r\n    this.setState({\r\n      ...this.state,\r\n      changes,\r\n      adSettings,\r\n    });\r\n  };\r\n  onGroupsSelectChange = (event) => {\r\n    var adSettings = this.state.adminSettings;\r\n    var newSelectedId = event.target.value;\r\n    let newValues = [];\r\n    adSettings[\"Groups\"].map((item) => {\r\n      if (newSelectedId.includes(item.Text))\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Disabled: false,\r\n          Group: null,\r\n          Selected: true,\r\n        });\r\n      else\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Disabled: false,\r\n          Group: null,\r\n          Selected: false,\r\n        });\r\n    });\r\n\r\n    adSettings[event.target.name] = newValues;\r\n\r\n    adSettings[\"GroupsIds\"] = newValues\r\n      .filter((x) => x.Selected)\r\n      .map((n) => {\r\n        return n.Value;\r\n      })\r\n      .join(\",\");\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      adminSettings: adSettings,\r\n    });\r\n  };\r\n  onSelectChange = (event) => {\r\n    var adSettings = this.state.adminSettings;\r\n    var newSelectedId = event.target.value;\r\n    let newValues = [];\r\n    adSettings[event.target.name].map((item) => {\r\n      if (item.Value === newSelectedId)\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Disabled: false,\r\n          Group: null,\r\n          Selected: true,\r\n        });\r\n      else\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Disabled: false,\r\n          Group: null,\r\n          Selected: false,\r\n        });\r\n    });\r\n    var changes = this.state.changes;\r\n\r\n    changes.push({\r\n      name: event.target.name,\r\n      value: newSelectedId,\r\n    });\r\n    if (event.target.name === \"Factories\") {\r\n      this.getGroupsByAPI(newSelectedId, this.props.apiRoute);\r\n    }\r\n    adSettings[event.target.name] = newValues;\r\n    adSettings[event.target.name + \"Id\"] = newSelectedId;\r\n    this.setState({\r\n      ...this.state,\r\n      changes,\r\n      adminSettings: adSettings,\r\n    });\r\n  };\r\n  captureIPAddress = async () => {\r\n    fetch(\"https://api.ipify.org?format=jsonp?callback=?\", {\r\n      method: \"GET\",\r\n      headers: {},\r\n    })\r\n      .then((res) => {\r\n        return res.text();\r\n      })\r\n      .then((ip) => {\r\n        this.setState({\r\n          ...this.state,\r\n          ip,\r\n        });\r\n      });\r\n  };\r\n\r\n  getGroupsByAPI = async (oid, route) => {\r\n    var response = {};\r\n    var oldAdminSettings = this.state.adminSettings;\r\n    try {\r\n      Helper.apiPost(`${route}adminSettings/GetGroup?oid=` + oid, {}, \"\")\r\n        .then((res) => {\r\n          response = JSON.parse(res.data);\r\n          oldAdminSettings.Groups = response;\r\n\r\n          this.setState({\r\n            ...this.state,\r\n            adminSettings: oldAdminSettings,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Error in get Groups data\");\r\n        });\r\n    } catch (err) {\r\n      if (err.response) alert(`Error in calling ESP API- ${err.response.data}`);\r\n      else alert(`Error in calling ESP API- ${err}`);\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n\r\n  getAdminSettingsByAPI = async () => {\r\n    var response = {};\r\n    try {\r\n      var res = await Helper.apiPost(\r\n        `${this.props.apiRoute}adminSettings/GetInfo`,\r\n        {},\r\n        \"\"\r\n      );\r\n\r\n      response = JSON.parse(res.data);\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          adminSettings: response,\r\n        },\r\n        () => {\r\n          this.props.onChangeSettings(response);\r\n        }\r\n      );\r\n    } catch (err) {\r\n      if (err.response) alert(`Error in calling ESP API- ${err.response.data}`);\r\n      else alert(`Error in calling ESP API- ${err}`);\r\n    }\r\n  };\r\n\r\n  saveAdminSettingsByAPI = async () => {\r\n    let state = this.state.adminSettings;\r\n\r\n    //var data = JSON.stringify(state);\r\n    try {\r\n      Helper.apiPost(`${this.props.apiRoute}adminSettings/PostData`, state, \"\")\r\n        .then((res) => {\r\n          this.props.history.push(`${this.props.mainRoute}`);\r\n          this.getAdminSettingsByAPI();\r\n          window.location.reload(true);\r\n          window.location.href = `${this.props.mainRoute}`;\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Error in get Groups data\");\r\n        });\r\n    } catch (err) {\r\n      if (err.response) alert(`Error in calling ESP API- ${err.response.data}`);\r\n      else alert(`Error in calling ESP API- ${err}`);\r\n    }\r\n  };\r\n\r\n  render(props) {\r\n    return (\r\n      <AdminSettingsPage\r\n        adminSettings={this.state.adminSettings || null}\r\n        onPropertyChange={this.handelPropertyChange}\r\n        onSelectChange={this.onSelectChange}\r\n        onGroupsSelectChange={this.onGroupsSelectChange}\r\n        onSave={this.saveAdminSettingsByAPI}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminSettingsContainer;\r\n","import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Switch, { SwitchProps } from \"@mui/material/Switch\";\r\n\r\nconst IOSSwitchMain = styled((props: SwitchProps) => (\r\n  <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />\r\n))(({ theme }) => ({\r\n  width: 45,\r\n  height: 26,\r\n  padding: 0,\r\n  \"& .MuiSwitch-switchBase\": {\r\n    padding: 0,\r\n    margin: 2,\r\n    color: \"#fff\",\r\n    transitionDuration: \"700ms\",\r\n    \"&.Mui-checked\": {\r\n      transform: \"translateX(20px)\",\r\n      color: \"#3f51b5\",\r\n      \"& + .MuiSwitch-track\": {\r\n        backgroundColor: theme.palette.mode === \"dark\" ? \"#9abf47\" : \"#9abf47\",\r\n        color: \"#000\",\r\n        opacity: 0.8,\r\n        border: 0,\r\n      },\r\n      \"&.Mui-disabled + .MuiSwitch-track\": {\r\n        opacity: 0.9,\r\n      },\r\n    },\r\n    \"&.Mui-focusVisible .MuiSwitch-thumb\": {\r\n      color: \"#fff\",\r\n      border: \"6px solid #fff\",\r\n    },\r\n    \"&.Mui-disabled .MuiSwitch-thumb\": {\r\n      color:\r\n        theme.palette.mode === \"light\"\r\n          ? theme.palette.grey[100]\r\n          : theme.palette.grey[600],\r\n    },\r\n    \"&.Mui-disabled + .MuiSwitch-track\": {\r\n      opacity: theme.palette.mode === \"light\" ? 0.7 : 0.3,\r\n    },\r\n  },\r\n  \"& .MuiSwitch-thumb\": {\r\n    boxSizing: \"border-box\",\r\n    width: 22,\r\n    height: 22,\r\n  },\r\n  \"& .MuiSwitch-track\": {\r\n    borderRadius: 26 / 2,\r\n    backgroundColor: theme.palette.mode === \"light\" ? \"#c5c6c9\" : \"#000\",\r\n    opacity: 1,\r\n    transition: theme.transitions.create([\"background-color\"], {\r\n      duration: 500,\r\n    }),\r\n  },\r\n}));\r\n\r\nexport default function IOSSwitch(props) {\r\n  return <IOSSwitchMain {...props} />;\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: \"90%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nexport default function ItemsList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {props.items &&\r\n        props.items\r\n          .filter((x) => x !== \"Claim from ESP-Claim\")\r\n          .map((i) => (\r\n            <Fragment>\r\n              <ListItem alignItems=\"flex-start\" key={i.Resource}>\r\n                <ListItemAvatar>\r\n                  <Avatar\r\n                    aria-label=\"recipe\"\r\n                    style={{ backgroundColor: \"blue\" }}\r\n                  >\r\n                    {\" \"}\r\n                    C{\" \"}\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={`Author:${i.Author} ${\r\n                    i.Resource != null && i.Resource.length > 0\r\n                      ? `Resource:${i.Resource}`\r\n                      : ``\r\n                  } `}\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes.inline}\r\n                        color=\"textPrimary\"\r\n                      >\r\n                        {i.Date}\r\n                      </Typography>\r\n                      <br />\r\n                      {i.IsBold ? (\r\n                        <b>\r\n                          <span\r\n                            style={{\r\n                              fontSize: \"15px\",\r\n                              fontWeight: \"1000\",\r\n                              color: \"black\",\r\n                            }}\r\n                          >\r\n                            {i.Comment}\r\n                          </span>\r\n                        </b>\r\n                      ) : (\r\n                        <span style={{ fontSize: \"15px\" }}>{i.Comment}</span>\r\n                      )}\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </Fragment>\r\n          ))}\r\n    </List>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ItemsList from \"./../../components/controls/ItemsList\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog(props) {\r\n  const classes = useStyles();\r\n  // const [open, setOpen] = React.useState(false);\r\n\r\n  const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n  const handleClose = () => {\r\n    props.handleClose(false);\r\n    //setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              {props.header}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <p>{props.text}</p>\r\n        {props.uls && <ItemsList items={props.uls} />}\r\n        {props.textList && props.textList.length > 0 && (\r\n          <TableContainer component={Paper} lg={6} sm={12} xs={12}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow></TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.textList.map((row) => (\r\n                  <StyledTableRow hover key={row.Date}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {row.Date}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{row.Name}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{row.Std}</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{row.Phy}</StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Loading(props) {\r\n  return (\r\n    <img\r\n      src={`${props.mainRoute}loading.gif`}\r\n      alt=\"LOADING...\"\r\n      style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}\r\n    />\r\n  );\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Grid, Input, InputAdornment, InputLabel } from \"@material-ui/core\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport IOSSwitch from \"../../components/controls/IosSwitch\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport FullScreenDialog from \"../../components/controls/FullScreenDialog\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport {\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Loading from \"../loading.js\";\r\n\r\nconst ProductionBoardPage = (props) => {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [note, setNote] = useState([]);\r\n  const [searchVal, setsearchVal] = useState(\"\");\r\n  const [jobs, setJobs] = useState(props.jobs);\r\n  const [wt, setWt] = useState(true);\r\n  const [pie, setPie] = useState(false);\r\n\r\n  const theme = createMuiTheme({\r\n    overrides: {\r\n      MuiTooltip: {\r\n        tooltip: {\r\n          fontSize: \"0.7em\",\r\n          color: \"yellow\",\r\n          backgroundColor: \"#eeeeee\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n  const defaultLabelStyle = {\r\n    fontSize: \"1.8em\",\r\n    fontFamily: \"sans-serif\",\r\n  };\r\n  function clearSearch() {\r\n    setsearchVal(\"\");\r\n    setJobs([]);\r\n    setJobs(props.jobs);\r\n  }\r\n  function searchJobs(event) {\r\n    var txt = event.target.value;\r\n    setsearchVal(txt);\r\n    var filterJobs =\r\n      event.target.value.length > 0\r\n        ? props.jobs.filter(\r\n            (t) =>\r\n              t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n              t.Code.includes(txt) ||\r\n              t.Customer.includes(txt)\r\n          )\r\n        : props.jobs;\r\n    setJobs(filterJobs);\r\n  }\r\n  function chunkArray(myArray, chunk_size) {\r\n    var index = 0;\r\n    var arrayLength = myArray.length;\r\n    var tempArray = [];\r\n    var myChunk = [];\r\n    for (index = 0; index < arrayLength; index += chunk_size) {\r\n      myChunk = myArray.slice(index, index + chunk_size);\r\n      // Do something if you want with the group\r\n      tempArray.push(myChunk);\r\n    }\r\n\r\n    return tempArray;\r\n  }\r\n  function getChart() {}\r\n  function beginTr(code, wts) {\r\n    var chuncked = chunkArray(wts, 4);\r\n\r\n    var items = [];\r\n    var htd = [];\r\n    var trs = [];\r\n    var element = {};\r\n    for (var i = 0; i < chuncked.length; i++) {\r\n      var section = chuncked[i];\r\n      htd = [];\r\n      for (var j = 0; j < section.length; j++) {\r\n        htd.push(<td>{section[j].Name}</td>);\r\n      }\r\n      trs.push(<tr>{htd}</tr>);\r\n      htd = [];\r\n      for (var j = 0; j < section.length; j++) {\r\n        if (section[j].Progress == 100) element = <CheckIcon />;\r\n        if (section[j].Progress == 0) element = <dir />;\r\n        else {\r\n          element = (\r\n            <MuiThemeProvider theme={theme}>\r\n              <Tooltip\r\n                title={section[j].ChartObj.filter((x) => x.value > 0).map(\r\n                  (t) => (\r\n                    <tr>\r\n                      <td style={{ backgroundColor: t.color }}> </td>\r\n                      <td>\r\n                        <h1> {t.value}</h1>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                )}\r\n                placement=\"top\"\r\n              >\r\n                {pie ? (\r\n                  <PieChart\r\n                    data={section[j].ChartObj.filter((x) => x.value > 0)}\r\n                    radius={PieChart.defaultProps.radius - 10}\r\n                    segmentsShift={(index) => (index === 0 ? 10 : 0.5)}\r\n                    label={({ dataEntry }) => dataEntry.value}\r\n                    labelStyle={{\r\n                      ...defaultLabelStyle,\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <table\r\n                    style={{\r\n                      padding: 0,\r\n                      margin: 0,\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      {section[j].ChartObj.filter((x) => x.value > 0).map(\r\n                        (t) => (\r\n                          <td\r\n                            style={{\r\n                              width: t.value,\r\n                              backgroundColor: t.color,\r\n                              fontSize: \"0.8em\",\r\n                            }}\r\n                          >\r\n                            {t.value}\r\n                          </td>\r\n                        )\r\n                      )}\r\n                    </tr>\r\n                  </table>\r\n                )}\r\n              </Tooltip>\r\n            </MuiThemeProvider>\r\n          );\r\n        }\r\n        htd.push(<td>{element}</td>);\r\n        element = {};\r\n      }\r\n      trs.push(<tr>{htd}</tr>);\r\n      htd = [];\r\n    }\r\n    items.push(<table>{trs}</table>);\r\n\r\n    return items;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div style={{ width: \"99%\" }}>\r\n        <Grid container spacing={5}>\r\n          <Hidden only={[\"xs\"]}>\r\n            <Grid item lg={2} sm={6}>\r\n              <h1>Production&nbsp;Board</h1>\r\n            </Grid>\r\n            <Grid item lg={1} sm={6}>\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Bar/Pie\r\n              </InputLabel>\r\n\r\n              <IOSSwitch\r\n                onChange={(e) => {\r\n                  setPie(e.target.checked);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={4} sm={6}>\r\n              <table style={{ width: \"100%\" }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#00C400\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Finished</td>\r\n\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#ffa500\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>High Priority</td>\r\n\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#808080\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Out Of Factory</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#ffff00\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Scheduled</td>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#d3d3d3\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Non-scheduled</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Grid>\r\n          </Hidden>\r\n\r\n          <Grid item lg={2} sm={6} xs={6}>\r\n            <IconButton sx={{ p: \"10px\" }} aria-label=\"menu\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              sx={{ ml: 1, flex: 1 }}\r\n              placeholder=\"Search\"\r\n              variant=\"outlined\"\r\n              value={searchVal}\r\n              onChange={searchJobs}\r\n            />\r\n            <IconButton\r\n              color=\"primary\"\r\n              sx={{ p: \"10px\" }}\r\n              aria-label=\"directions\"\r\n              onClick={() => clearSearch()}\r\n            >\r\n              <CancelIcon />\r\n            </IconButton>\r\n\r\n            {/* <Input\r\n              id=\"input-with-icon-adornment\"\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              }\r\n              value={searchVal}\r\n              onChange={searchJobs}\r\n            /> */}\r\n          </Grid>\r\n          <Grid item xs={6} lg={2} md={4}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onClick={() => props.logoutFromPB()}\r\n              startIcon={<MeetingRoomIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Grid>\r\n          <Hidden only={[\"lg\", \"xl\", \"md\"]}>\r\n            <Grid item xs={4}>\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Show W/T\r\n              </InputLabel>\r\n\r\n              <IOSSwitch\r\n                checked={wt}\r\n                onChange={(s) => {\r\n                  setWt(s.target.checked);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Pie/Bar\r\n              </InputLabel>\r\n\r\n              <IOSSwitch\r\n                onChange={(e) => {\r\n                  setPie(e.target.checked);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <table style={{ width: \"100%\" }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#00C400\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Finished</td>\r\n\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#ffa500\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>High Priority</td>\r\n\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#808080\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Out Of Factory</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#ffff00\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Scheduled</td>\r\n                    <td style={{ width: \"10%\" }}>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#d3d3d3\",\r\n                          float: \"left\",\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                        }}\r\n                      >\r\n                        <span>&nbsp;&nbsp;&nbsp;</span>\r\n                      </div>\r\n                    </td>\r\n                    <td>Non-scheduled</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Grid>\r\n          </Hidden>\r\n        </Grid>\r\n        <Hidden only={[\"xs\"]}>\r\n          <table id=\"pbDesktop\">\r\n            <thead>\r\n              <tr>\r\n                <th xs={2}>Code</th>\r\n                {props.settings.PBCustomerColumn && <th>Customer</th>}\r\n                {props.settings.PBTitleColumn && <th>Title</th>}\r\n                {props.settings.PBHourColumn && <th>Hours</th>}\r\n                {props.settings.PBDueDateColumn && <th>Due Date</th>}\r\n                {props.settings.ShowQty && <th>Unit Qty</th>}\r\n                {props.settings.ShowSalesPerson && <th>SalesPerson</th>}\r\n                {props.settings.ShowEstimator && <th>Estimator</th>}\r\n                {props.settings.ShowColour && <th>Colour</th>}\r\n                <th>Prog.</th>\r\n                {jobs &&\r\n                  jobs[0] &&\r\n                  jobs[0].WorkTypes &&\r\n                  jobs[0].WorkTypes.map((w) => (\r\n                    <th style={{ minWidth: \"65px\" }}>{w.Name}</th>\r\n                  ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {jobs &&\r\n                jobs.map((e, i) => (\r\n                  <tr\r\n                    style={{\r\n                      backgroundColor: `${i % 2 == 0 ? \"#fff\" : \"#fafafa\"}`,\r\n                    }}\r\n                    className=\"border-bottom\"\r\n                  >\r\n                    <td>\r\n                      {e.Comments.length > 0 && (\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          style={{ textAlign: \"right\", color: \"#196dc4\" }}\r\n                          onClick={(w) => {\r\n                            setNote(e.Comments);\r\n                            setOpenDialog(true);\r\n                          }}\r\n                        >\r\n                          <span style={{ textDecoration: \"underline\" }}>\r\n                            {\" \"}\r\n                            {e.Code}\r\n                          </span>\r\n                        </Button>\r\n                      )}\r\n                      {e.Comments.length == 0 && e.Code}\r\n                    </td>\r\n                    {props.settings.PBCustomerColumn && <td>{e.Customer}</td>}\r\n                    {props.settings.PBTitleColumn && (\r\n                      <td\r\n                        className=\"border-bottom\"\r\n                        style={{\r\n                          backgroundColor: `${\r\n                            e.TitleBackgroundColor !== \"\"\r\n                              ? e.TitleBackgroundColor\r\n                              : i % 2 == 0\r\n                              ? \"#fff\"\r\n                              : \"#fafafa\"\r\n                          }`,\r\n                          color: `${e.TitleColor}`,\r\n                        }}\r\n                      >\r\n                        {e.Title}\r\n                      </td>\r\n                    )}\r\n                    {props.settings.PBHourColumn && <td>{e.Hours}</td>}\r\n                    {props.settings.PBDueDateColumn && <td>{e.Due}</td>}\r\n                    {props.settings.ShowQty && <td>{e.UnitQty}</td>}\r\n                    {props.settings.ShowSalesPerson && <td>{e.SalesPerson}</td>}\r\n                    {props.settings.ShowEstimator && <td>{e.Estimator}</td>}\r\n                    {props.settings.ShowColour && <td>{e.Colour}</td>}\r\n                    <td>{e.Progress}%</td>\r\n                    {e.WorkTypes &&\r\n                      e.WorkTypes.map((w) =>\r\n                        w.Progress == 100 ? (\r\n                          <td\r\n                            style={{\r\n                              margin: 0,\r\n                              padding: 0,\r\n                              verticalAlign: \"middle\",\r\n                            }}\r\n                          >\r\n                            <CheckIcon />\r\n                          </td>\r\n                        ) : w.Progress == 0 ? (\r\n                          <td\r\n                            style={{\r\n                              margin: 0,\r\n                              padding: 0,\r\n                              verticalAlign: \"middle\",\r\n                            }}\r\n                            onClick={(r) =>\r\n                              props.settings.ClaimOnPB &&\r\n                              w.Progress != -1 &&\r\n                              props.claimOnPB(e.Oid, w.Oid, w.JobLevel, e.Code)\r\n                            }\r\n                          >\r\n                            0%\r\n                          </td>\r\n                        ) : (\r\n                          <MuiThemeProvider theme={theme}>\r\n                            <Tooltip\r\n                              title={w.ChartObj.filter((x) => x.value > 0).map(\r\n                                (t) => (\r\n                                  <tr>\r\n                                    <td style={{ backgroundColor: t.color }}>\r\n                                      {\" \"}\r\n                                    </td>\r\n                                    <td>\r\n                                      <h1> {t.value}</h1>\r\n                                    </td>\r\n                                  </tr>\r\n                                )\r\n                              )}\r\n                              placement=\"top\"\r\n                            >\r\n                              <td\r\n                                style={{\r\n                                  paddingRight: \"5px\",\r\n                                  paddingLeft: \"2px\",\r\n                                  verticalAlign: \"middle\",\r\n                                }}\r\n                                onClick={(r) =>\r\n                                  props.settings.ClaimOnPB &&\r\n                                  w.Progress != -1 &&\r\n                                  props.claimOnPB(\r\n                                    e.Oid,\r\n                                    w.Oid,\r\n                                    w.JobLevel,\r\n                                    e.Code\r\n                                  )\r\n                                }\r\n                              >\r\n                                {pie && (\r\n                                  <PieChart\r\n                                    style={{\r\n                                      margin: 0,\r\n                                      padding: 0,\r\n                                      marginLeft: \"10px\",\r\n                                      fontSize: \"1.2em\",\r\n                                    }}\r\n                                    data={w.ChartObj.filter((x) => x.value > 0)}\r\n                                    radius={PieChart.defaultProps.radius - 10}\r\n                                    segmentsShift={(index) =>\r\n                                      index === 0 ? 10 : 0.5\r\n                                    }\r\n                                    label={({ dataEntry }) => dataEntry.value}\r\n                                    labelStyle={{\r\n                                      ...defaultLabelStyle,\r\n                                    }}\r\n                                  />\r\n                                )}\r\n                                {!pie && (\r\n                                  <table\r\n                                    style={{\r\n                                      padding: 0,\r\n                                      margin: 0,\r\n                                      width: \"100%\",\r\n                                      height: \"100%\",\r\n                                    }}\r\n                                  >\r\n                                    <tr>\r\n                                      {w.ChartObj.filter(\r\n                                        (x) => x.value > 0\r\n                                      ).map((t) => (\r\n                                        <td\r\n                                          style={{\r\n                                            width: t.value,\r\n                                            marginLeft: \"3px\",\r\n                                            marginRight: \"3px\",\r\n                                            backgroundColor: t.color,\r\n                                            fontSize: \"1.2em\",\r\n                                            // padding: \"2px\",\r\n                                          }}\r\n                                        >\r\n                                          {t.value}\r\n                                        </td>\r\n                                      ))}\r\n                                    </tr>\r\n                                  </table>\r\n                                )}\r\n                              </td>\r\n                            </Tooltip>\r\n                          </MuiThemeProvider>\r\n                        )\r\n                      )}\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </Hidden>\r\n        <Hidden only={[\"lg\", \"xl\", \"md\"]}>\r\n          <table style={{ border: \"none!important\", backgroundColor: \"white\" }}>\r\n            {jobs &&\r\n              jobs.map((e, i) => (\r\n                <Fragment>\r\n                  <tr>\r\n                    <td colSpan=\"4\">\r\n                      <hr />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"2\">\r\n                      {e.Comments.length > 0 && (\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          style={{ textAlign: \"right\" }}\r\n                          onClick={(w) => {\r\n                            setNote(e.Comments);\r\n                            setOpenDialog(true);\r\n                          }}\r\n                        >\r\n                          {e.Code}\r\n                        </Button>\r\n                      )}\r\n                      {e.Comments.length == 0 && e.Code}\r\n                    </td>\r\n                    <td colSpan=\"1\">{e.Progress}%</td>\r\n                  </tr>\r\n                  <tr>\r\n                    {props.settings.PBCustomerColumn && (\r\n                      <td colSpan=\"4\">{e.Customer}</td>\r\n                    )}\r\n                  </tr>\r\n                  {props.settings.PBTitleColumn && (\r\n                    <tr>\r\n                      <td\r\n                        colSpan=\"4\"\r\n                        style={{\r\n                          backgroundColor: `${\r\n                            e.TitleBackgroundColor !== \"\"\r\n                              ? e.TitleBackgroundColor\r\n                              : i % 2 == 0\r\n                              ? \"#fff\"\r\n                              : \"#fafafa\"\r\n                          }`,\r\n                          color: `${e.TitleColor}`,\r\n                        }}\r\n                      >\r\n                        {e.Title}\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                  {props.settings.PBDueDateColumn && (\r\n                    <tr>\r\n                      <td colSpan=\"1\">Due:</td>\r\n                      <td colSpan=\"3\">{e.Due}</td>\r\n                    </tr>\r\n                  )}\r\n                  {props.settings.PBHourColumn && (\r\n                    <tr>\r\n                      <td colSpan=\"1\">Hours:</td>\r\n                      <td colSpan=\"3\">{e.Hours}</td>\r\n                    </tr>\r\n                  )}\r\n\r\n                  <tr>\r\n                    {e.WorkTypes && wt && (\r\n                      <td\r\n                        onClick={(r) =>\r\n                          props.settings.ClaimOnPB &&\r\n                          props.claimOnPB(e.Oid, wt.Oid, wt.JobLevel, e.Code)\r\n                        }\r\n                        colSpan=\"4\"\r\n                      >\r\n                        {beginTr(e.Code, e.WorkTypes)}\r\n                      </td>\r\n                    )}\r\n                  </tr>\r\n                  <tr>\r\n                    <td colSpan=\"4\">\r\n                      <hr />\r\n                    </td>\r\n                  </tr>\r\n                </Fragment>\r\n              ))}\r\n          </table>\r\n        </Hidden>\r\n        <FullScreenDialog\r\n          header=\"Job Notes\"\r\n          uls={note}\r\n          open={openDialog}\r\n          handleClose={() => setOpenDialog(false)}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default ProductionBoardPage;\r\n","import React, { Fragment } from \"react\";\r\nimport ProductionBoard from \"./ProductionBoardPage\";\r\nimport config from \"../../config\";\r\nimport axios from \"axios\";\r\nimport Helper from \"../../components/logics/Helper\";\r\nimport Loading from \"../loading.js\";\r\n\r\nclass ProductionBoardContainer extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      jobs: [],\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getProductionBoardInfoByAPI();\r\n  }\r\n\r\n  getProductionBoardInfoByAPI = async () => {\r\n    var response = {};\r\n    try {\r\n      Helper.apiPost(\r\n        `${this.props.apiRoute}ProductionBoard/GetProductionBoardInfo`,\r\n        {},\r\n        \"\"\r\n      )\r\n        .then((res) => {\r\n          response = JSON.parse(res.data);\r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              jobs: response,\r\n            },\r\n            () => {\r\n              this.setState({\r\n                ...this.state,\r\n                loaded: true,\r\n              });\r\n            }\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Error in get production board data\");\r\n        });\r\n    } catch (err) {\r\n      if (err.response)\r\n        alert(\r\n          `Error in calling ESP API (production board)- ${err.response.data}`\r\n        );\r\n      else alert(`Error in calling ESP API (production board)- ${err}`);\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n  claimOnPB = async (jid, wid, jl, jobCode) => {\r\n    this.props.claimOnPB(jid, wid, jl, jobCode);\r\n  };\r\n  logoutFromPB = () => {\r\n    this.props.logoutFromPB();\r\n  };\r\n  render(props) {\r\n    return (\r\n      <Fragment>\r\n        {!this.state.loaded && <Loading />}\r\n        {this.state.loaded && (\r\n          <ProductionBoard\r\n            jobs={this.state.jobs}\r\n            settings={this.props.settings}\r\n            claimOnPB={this.claimOnPB}\r\n            logoutFromPB={this.props.logoutFromPB}\r\n          />\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductionBoardContainer;\r\n","import { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst gridSearchStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.black, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n\r\n  bolding: {\r\n    fontSize: \"0.9rem\",\r\n    \"&:hover\": {\r\n      //textShadow: '3px 3px 0px #ffd324',\r\n      cursor: \"pointer\",\r\n\r\n      //    transformOrigin: \"-100px -100px\",\r\n      //   transform: \"scale(1.05) translate(-17px, -10px)\",\r\n      zIndex: \"1000\",\r\n      // backgroundColor: \"#ddd\",\r\n      // backgroundImage: 'url(\"/work1.png\")',\r\n      //  backgroundRepeat: \"no-repeat\",\r\n      //  backgroundSize: \"90%\",\r\n\r\n      //    backgroundPosition: \"top\",\r\n    },\r\n  },\r\n  boxBolding: {\r\n    \"&:hover\": {\r\n      boxSizing: \"border-box\",\r\n      boxShadow: \"3px 3px #eee\",\r\n      borderBottom: \"2px  solid #5584c0\",\r\n      borderRight: \"2px  solid #5584c0\",\r\n      marginLeft: \"-2px\",\r\n      marginTop: \"-2px\",\r\n    },\r\n  },\r\n}));\r\nexport default gridSearchStyles;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport gridSearchStyles from \"../../components/controls/Styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { InputLabel, Switch } from \"@material-ui/core\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router\";\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function Login(props) {\r\n  const classes = gridSearchStyles();\r\n  const [logout, setLogout] = useState(props.logoutChecked);\r\n  const [lastmove, setLastMove] = useState(null);\r\n  const history = useHistory();\r\n  const personList = props.loggingOut\r\n    ? props.items.filter((x) => x.IsLoggedIn)\r\n    : props.items;\r\n  function getLabel(e) {\r\n    var name = e.Name + (e.IsOnLeave ? \"(on leave)\" : \"\");\r\n\r\n    return e.LastClaimTime != null ? (\r\n      <Tooltip title={`Your last claim/ login was ${e.LastClaimTime} ago`}>\r\n        <span>\r\n          {name}{\" \"}\r\n          <span style={{ fontSize: \"small\" }}>\r\n            <br />\r\n            &nbsp;&nbsp;({e.LastClaimTime})\r\n          </span>\r\n        </span>\r\n      </Tooltip>\r\n    ) : (\r\n      <div>{name}</div>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    setTimeout(() => {\r\n      props.goBackToStart(0);\r\n    }, 60000);\r\n  });\r\n  return (\r\n    <div>\r\n      <div className={classes.search}>\r\n        <Grid container spacing={1} style={{ backgroundColor: \"#ebedf1\" }}>\r\n          {(props.loggingOut || props.fromPB) && (\r\n            <Grid\r\n              item\r\n              lg={1}\r\n              sm={1}\r\n              xs={6}\r\n              style={{ fontSize: \"24px\", paddingTop: \"30px\" }}\r\n            >\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                style={{ textAlign: \"right\" }}\r\n                onClick={() => {\r\n                  history.push({\r\n                    pathname: `${props.mainRoute}productionBoard`,\r\n                  });\r\n                }}\r\n                startIcon={<ArrowBack />}\r\n              ></Button>\r\n            </Grid>\r\n          )}\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            sm={4}\r\n            xs={6}\r\n            style={{ fontSize: \"24px\", paddingTop: \"30px\" }}\r\n          >\r\n            <span\r\n              style={{ fontSize: \"24px\", padding: \"30px\", marginTop: \"30px\" }}\r\n            >\r\n              <b> Login</b>\r\n            </span>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={3}\r\n            xs={6}\r\n            style={{ marginTop: \"20px\", alignContent: \"right\" }}\r\n          ></Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            sm={4}\r\n            xs={12}\r\n            style={{ marginTop: \"20px\", alignContent: \"right\" }}\r\n          >\r\n            <InputLabel htmlFor=\"input-with-icon-adornment\">Search</InputLabel>\r\n            <Input\r\n              id=\"input-with-icon-adornment\"\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              }\r\n              onChange={props.searchNames}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        style={{ marginTop: 10, backgroundColor: \"#ebedf1\" }}\r\n      >\r\n        {personList &&\r\n          personList.map((e) => (\r\n            <Grid\r\n              item\r\n              lg={2}\r\n              sm={6}\r\n              xs={12}\r\n              key={e.OId}\r\n              style={{ padding: \"15px\" }}\r\n              className={classes.bolding}\r\n            >\r\n              <Box\r\n                borderRadius=\"5%\"\r\n                p={2}\r\n                key={e.OId}\r\n                className={classes.boxBolding}\r\n                boxShadow={2}\r\n                color=\"black\"\r\n                bgcolor={\r\n                  e.IsOnLeave ? \"#b4bebf\" : e.IsLoggedIn ? \"#9abf47\" : \"white\"\r\n                }\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  fontSize: \"1.2rem\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                onClick={() => {\r\n                  props.handleLogin(e.OId, e.IsOnLeave, logout);\r\n                }}\r\n              >\r\n                {getLabel(e)}\r\n              </Box>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography\r\n          variant=\"caption\"\r\n          component=\"div\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate variant.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function CircularStatic(props) {\r\n  const [progress] = React.useState(props.value);\r\n\r\n  // React.useEffect(() => {\r\n  //   const timer = setInterval(() => {\r\n  //     setProgress((prevProgress) =>\r\n  //       prevProgress >= 100 ? 0 : prevProgress + 10\r\n  //     );\r\n  //   }, 800);\r\n  //   return () => {\r\n  //     clearInterval(timer);\r\n  //   };\r\n  // }, []);\r\n\r\n  return <CircularProgressWithLabel value={progress} />;\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config\";\r\nimport Helper from \"./Helper\";\r\nclass ClaimLogic extends React.Component {\r\n  getJobItemsFromApi = async (jobId, worktypeId, workerId, route) => {\r\n    var response = {};\r\n    try {\r\n      return await Helper.apiPost(\r\n        `${route}Claim/GetJobItems`,\r\n        {\r\n          jobId: jobId,\r\n          WorkTypeId: worktypeId,\r\n          workerId: workerId,\r\n        },\r\n        \"\"\r\n      );\r\n    } catch (ex) {\r\n      if (ex.response)\r\n        alert(\r\n          `Error in calling ESP (Claim / Get Job items) API- ${ex.response.data}`\r\n        );\r\n      else\r\n        alert(\r\n          `Error in calling ESP (Claim / Get Job items) API- ${ex.message}`\r\n        );\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n\r\n  getJobsOfWorkerFromApi = async (\r\n    route,\r\n    workerId,\r\n    jobStage,\r\n    siteWork = false\r\n  ) => {\r\n    var data = {\r\n      id: workerId,\r\n      jobStage,\r\n    };\r\n    return await Helper.apiPost(\r\n      `${route}Claim/GetJobsOfWorker?id=${workerId}&jobStage=${jobStage}&siteWork=${siteWork}`,\r\n      data,\r\n      \"\"\r\n    );\r\n  };\r\n\r\n  submitClaimInAPI = async (\r\n    workerId,\r\n    jobId,\r\n    jobItems,\r\n    groupPercent,\r\n    comment,\r\n    logout,\r\n    route\r\n  ) => {\r\n    var value = {\r\n      workerId: workerId,\r\n      jobId: jobId,\r\n      jobItems: jobItems,\r\n      groupPercent: groupPercent,\r\n      comment: comment,\r\n      logout,\r\n    };\r\n    return await Helper.apiPost(\r\n      `${route}Claim/PostSubmitClaim`,\r\n      value,\r\n      \"Submit Claim Job\"\r\n    );\r\n  };\r\n  submitFullJobClaimInAPI = async (workerId, jobId, comment, route) => {\r\n    var value = {\r\n      workerId: workerId,\r\n      jobId: jobId,\r\n      comment: comment,\r\n    };\r\n    return await Helper.apiPost(\r\n      `${route}Claim/PostClaimWholeJob`,\r\n      value,\r\n      \"Submit Claim Full Job\"\r\n    );\r\n  };\r\n\r\n  submitAdminJobClaimInAPI = async (\r\n    claimingOId,\r\n    OId,\r\n    comment,\r\n    logout,\r\n    route\r\n  ) => {\r\n    var value = {\r\n      workerId: claimingOId,\r\n      WorkTypeId: OId,\r\n      comment: comment,\r\n      logout,\r\n    };\r\n    return await Helper.apiPost(\r\n      `${route}Claim/PostSubmitClaimAdminTask`,\r\n      value,\r\n      \"Submit Admin Job\"\r\n    );\r\n  };\r\n  GetClaimedByAPI = async (jobCode, worktypId, route) => {\r\n    var value = {\r\n      jobCode,\r\n      worktypId,\r\n    };\r\n    return Helper.apiPost(\r\n      `${route}Claim/GetWorkTypeClaimedBy?jobCode=${jobCode}&worktypeId=${worktypId}`,\r\n      value,\r\n      \"Get Work Type Claimed by\"\r\n    );\r\n  };\r\n  GetPerfStatByAPI = async (id, from, to, route) => {\r\n    var value = {\r\n      id,\r\n      from,\r\n      to,\r\n    };\r\n    return Helper.apiPost(\r\n      `${route}PerformanceStat/GetWorkerPS?id=${id}&from=${from}&to=${to}`,\r\n      value,\r\n      \"Get performance stat\"\r\n    );\r\n  };\r\n  render() {\r\n    return <din></din>;\r\n  }\r\n}\r\n//module.exports={_:LoginLogics};\r\nconst Loginlogics = new ClaimLogic();\r\nexport default Loginlogics;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport gridSearchStyles from \"../../components/controls/Styles\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport FullScreenDialog from \"../../components/controls/FullScreenDialog\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\r\nimport CircularProgressWithLabel from \"../../components/controls/CircularProgressWithLabel\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport ClaimLogic from \"../../components/logics/ClaimLogic\";\r\n\r\nexport default function Worktypes(props) {\r\n  const classes = gridSearchStyles();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  });\r\n  const [note, setNote] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [items, setSearchItems] = useState(props.workTypes);\r\n  const [searchVal, setSearcVal] = useState(\"\");\r\n\r\n  function searchItems(event) {\r\n    var txt = event.target.value;\r\n    setSearcVal(txt);\r\n    var workTypes =\r\n      event.target.value.length > 0\r\n        ? props.workTypes.filter((t) =>\r\n            t.Name.toLowerCase().includes(txt.toLowerCase())\r\n          )\r\n        : props.workTypes;\r\n\r\n    setSearchItems(workTypes);\r\n  }\r\n  function clearSearch() {\r\n    setSearchItems([]);\r\n    setSearchItems(props.workTypes);\r\n    setSearcVal(\"\");\r\n  }\r\n  function handleWorktypeNoteClicked(id, code, route) {\r\n    const response = ClaimLogic.GetClaimedByAPI(code, id, route);\r\n    response.then((e) => {\r\n      setNote(JSON.parse(e.data));\r\n      setOpenDialog(true);\r\n    });\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ backgroundColor: \"#fff\" }}>\r\n        <CardContent>\r\n          <Grid container spacing={2}>\r\n            <Grid ml={0} item lg={1} sm={4} xs={4}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                style={{ textAlign: \"right\" }}\r\n                onClick={() => {\r\n                  props.handleBack(1);\r\n                }}\r\n                startIcon={<ArrowBack />}\r\n              ></Button>\r\n            </Grid>\r\n            <Grid item lg={7} sm={4} xs={4}>\r\n              <span style={{ fontSize: \"22px\", marginTop: \"30px\" }}>\r\n                <b>\r\n                  Work&nbsp;Type{\" \"}\r\n                  {props.menuIsOpen ? \"\" : \" (\" + props.claimingName + \")\"}{\" \"}\r\n                </b>\r\n              </span>\r\n            </Grid>\r\n            <Hidden only={[\"xl\", \"lg\", \"md\"]}>\r\n              <Grid\r\n                ml={0}\r\n                item\r\n                lg={1}\r\n                sm={4}\r\n                xs={4}\r\n                style={{ textAlign: \"right\" }}\r\n              >\r\n                {/* <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={props.handleFullJob}\r\n                  startIcon={<PlaylistAddCheckIcon />}\r\n                >\r\n                  FullJob\r\n                </Button> */}\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item lg={3} sm={12} xs={12}>\r\n              <IconButton sx={{ p: \"10px\" }} aria-label=\"menu\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n              <InputBase\r\n                sx={{ ml: 1, flex: 1 }}\r\n                id=\"worktypeSearchVal\"\r\n                placeholder=\"Search\"\r\n                variant=\"outlined\"\r\n                value={searchVal}\r\n                onChange={searchItems}\r\n              />\r\n              <IconButton\r\n                color=\"primary\"\r\n                sx={{ p: \"10px\" }}\r\n                aria-label=\"directions\"\r\n                onClick={() => {\r\n                  clearSearch();\r\n                }}\r\n              >\r\n                <CancelIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Hidden only={[\"sm\", \"xs\"]}>\r\n              <Grid ml={0} item lg={1} sm={1} style={{ textAlign: \"right\" }}>\r\n                {/* <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={props.handleFullJob}\r\n                  startIcon={<PlaylistAddCheckIcon />}\r\n                >\r\n                  FullJob\r\n                </Button> */}\r\n              </Grid>\r\n            </Hidden>\r\n          </Grid>\r\n\r\n          <hr />\r\n          <h2>Primary</h2>\r\n          <Grid container spacing={1}>\r\n            {items &&\r\n              items\r\n                .filter(\r\n                  (x) =>\r\n                    x.Progress < 100 && props.primaryWorktypeIds.includes(x.OId)\r\n                )\r\n\r\n                .sort(function (a, b) {\r\n                  return a.CategoryOrder - b.CategoryOrder;\r\n                })\r\n                .map((e) => (\r\n                  <Grid\r\n                    item\r\n                    lg={2}\r\n                    sm={6}\r\n                    xs={12}\r\n                    key={e.OId}\r\n                    className={classes.bolding}\r\n                  >\r\n                    <Box\r\n                      p={4}\r\n                      borderRadius=\"5%\"\r\n                      className={classes.boxBolding}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        fontSize: \"0.9rem\",\r\n                        textAlign: \"center\",\r\n                        backgroundColor:\r\n                          e.CategoryName == \"production\"\r\n                            ? \"#9abf47\"\r\n                            : e.CategoryName == \"preproduction\"\r\n                            ? \"#b3b31b\"\r\n                            : e.CategoryName == \"postproduction\"\r\n                            ? \"#adadad\"\r\n                            : \"white\",\r\n                      }}\r\n                      onClick={() => {\r\n                        props.handleWorkTypeClick(e.OId);\r\n                      }}\r\n                      // onDelete={()=>{}}\r\n\r\n                      clickable\r\n                    >\r\n                      {e.Name}\r\n                      <hr />\r\n                      <Grid container>\r\n                        <Grid item lg={6} sm={5} xs={5}>\r\n                          <IconButton color=\"inherit\">\r\n                            <CommentIcon\r\n                              onClick={(w) => {\r\n                                handleWorktypeNoteClicked(\r\n                                  e.OId,\r\n                                  props.jobCode,\r\n                                  props.apiRoute\r\n                                );\r\n                                w.stopPropagation();\r\n                              }}\r\n                            />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid item lg={6} sm={6} xs={6}>\r\n                          <CircularProgressWithLabel value={e.Progress} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n                ))}\r\n          </Grid>\r\n          <h2>Secondary</h2>\r\n          <Grid container spacing={1}>\r\n            {items &&\r\n              items\r\n                .filter(\r\n                  (x) =>\r\n                    x.Progress < 100 &&\r\n                    props.secondaryWorktypeIds.includes(x.OId)\r\n                )\r\n\r\n                .sort(function (a, b) {\r\n                  return a.CategoryOrder - b.CategoryOrder;\r\n                })\r\n                .map((e) => (\r\n                  <Grid\r\n                    item\r\n                    lg={2}\r\n                    sm={6}\r\n                    xs={12}\r\n                    key={e.OId}\r\n                    className={classes.bolding}\r\n                  >\r\n                    <Box\r\n                      p={4}\r\n                      borderRadius=\"5%\"\r\n                      className={classes.boxBolding}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        fontSize: \"0.9rem\",\r\n                        textAlign: \"center\",\r\n                        backgroundColor:\r\n                          e.CategoryName == \"production\"\r\n                            ? \"#9abf47\"\r\n                            : e.CategoryName == \"preproduction\"\r\n                            ? \"#b3b31b\"\r\n                            : e.CategoryName == \"postproduction\"\r\n                            ? \"#adadad\"\r\n                            : \"white\",\r\n                      }}\r\n                      onClick={() => {\r\n                        props.handleWorkTypeClick(e.OId);\r\n                      }}\r\n                      // onDelete={()=>{}}\r\n\r\n                      clickable\r\n                    >\r\n                      {e.Name}\r\n                      <hr />\r\n                      <Grid container>\r\n                        <Grid item lg={6} sm={5} xs={5}>\r\n                          <IconButton color=\"inherit\">\r\n                            <CommentIcon\r\n                              onClick={(w) => {\r\n                                handleWorktypeNoteClicked(\r\n                                  e.OId,\r\n                                  props.jobCode,\r\n                                  props.apiRoute\r\n                                );\r\n                                w.stopPropagation();\r\n                              }}\r\n                            />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid item lg={6} sm={6} xs={6}>\r\n                          <CircularProgressWithLabel value={e.Progress} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </Grid>\r\n                ))}\r\n          </Grid>\r\n        </CardContent>\r\n        <FullScreenDialog\r\n          header=\"Claimed By\"\r\n          textList={note}\r\n          open={openDialog}\r\n          handleClose={() => setOpenDialog(false)}\r\n        />\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { withStyles, fade } from \"@material-ui/core/styles\";\r\nimport Helper from \"../../components/logics/Helper\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\n\r\nconst AirbnbSlider = withStyles({\r\n  root: {\r\n    color: \"#196dc4\",\r\n    height: 3,\r\n    padding: \"13px 0\",\r\n  },\r\n  thumb: {\r\n    height: 27,\r\n    width: 27,\r\n    backgroundColor: \"#fff\",\r\n    border: \"1px solid currentColor\",\r\n    marginTop: -12,\r\n    marginLeft: -13,\r\n    boxShadow: \"#ebebeb 0 2px 2px\",\r\n    \"&:focus, &:hover, &$active\": {\r\n      boxShadow: \"#eee 0 2px 3px 1px\",\r\n    },\r\n    \"& .bar\": {\r\n      // display: inline-block !important;\r\n      height: 9,\r\n      width: 1,\r\n      backgroundColor: \"currentColor\",\r\n      marginLeft: 1,\r\n      marginRight: 1,\r\n    },\r\n  },\r\n  active: {},\r\n  track: {\r\n    height: 3,\r\n  },\r\n  valueLabel: {\r\n    left: \"calc(-50% + 8px)\",\r\n  },\r\n  rail: {\r\n    color: \"#eee\",\r\n    opacity: 1,\r\n    height: 3,\r\n  },\r\n})(Slider);\r\n\r\nfunction AirbnbThumbComponent(props) {\r\n  return (\r\n    <span {...props}>\r\n      {/* //     <span className=\"bar\" />\r\n    //     <span className=\"bar\" />\r\n    //     <span className=\"bar\" /> */}\r\n    </span>\r\n  );\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.black, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n});\r\nclass JobItems extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      jobItems: props.items,\r\n      changed: props.items.some((x) => x.Progress100 !== x.Main_Progress100),\r\n      groupPercent: 0,\r\n      searchVal: \"\",\r\n    };\r\n  }\r\n  mainJobItems = () => [];\r\n  componentWillMount() {\r\n    this.setState({\r\n      //groupPercent: this.groupSliderValue(),\r\n      groupPercent: this.props.totalProgress,\r\n    });\r\n    this.mainJobItems = this.state.jobItems;\r\n  }\r\n  componentDidMount() {}\r\n  checkChange = (item) => {\r\n    for (var i = 0; i < item.length; i++) {\r\n      if (item[i].Progress100 !== item[i].Main_Progress100) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  handleChange = (val, inx) => {\r\n    const items = this.state.jobItems;\r\n    if (val >= items[inx].Main_Progress100 && val <= 100)\r\n      items[inx].Progress100 = parseInt(val);\r\n    var changed = this.checkChange(items);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: items,\r\n      changed,\r\n      groupPercent: this.groupSliderValue(),\r\n    });\r\n  };\r\n  handleBtn = (val, inx) => {\r\n    let items = this.state.jobItems;\r\n\r\n    if (!items[inx].Progress100) items[inx].Progress100 = 0;\r\n    if (items[inx].Progress100 + val >= items[inx].Main_Progress100) {\r\n      if (items[inx].Progress100 + val > 100) {\r\n        items[inx].Progress100 = 100;\r\n      } else {\r\n        items[inx].Progress100 = this.roundNumber(\r\n          items[inx].Progress100 + val,\r\n          items[inx].Progress100\r\n        );\r\n      }\r\n      var changed = this.checkChange(items);\r\n      this.setState({\r\n        ...this.state,\r\n        jobItems: items,\r\n        changed,\r\n      });\r\n    }\r\n  };\r\n  handleComplete = (inx) => {\r\n    let items = this.state.jobItems;\r\n\r\n    items[inx].Progress100 = 100;\r\n\r\n    var changed = this.checkChange(items);\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: items,\r\n      changed,\r\n    });\r\n  };\r\n\r\n  roundNumber(v, g) {\r\n    return v > g\r\n      ? v % this.props.settings.IncrementPercentage == 0\r\n        ? v\r\n        : Math.ceil(\r\n            (v - this.props.settings.IncrementPercentage - 1) /\r\n              this.props.settings.IncrementPercentage\r\n          ) * this.props.settings.IncrementPercentage\r\n      : v % this.props.settings.IncrementPercentage == 0\r\n      ? v\r\n      : Math.floor(\r\n          (v + this.props.settings.IncrementPercentage - 1) /\r\n            this.props.settings.IncrementPercentage\r\n        ) * this.props.settings.IncrementPercentage;\r\n  }\r\n  handleGroupedChanged(v, btn = false) {\r\n    if (v < 0) return false;\r\n    if (v > 100) v = 100;\r\n    if (v < this.props.totalProgress) return false;\r\n    const items = this.state.jobItems;\r\n    v = btn ? this.roundNumber(v, this.state.groupPercent) : v;\r\n\r\n    var changed = v != this.props.totalProgress;\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: items,\r\n      groupPercent: v,\r\n      changed,\r\n    });\r\n  }\r\n  handleChanged(v) {\r\n    if (v > 100 || v < 0) return false;\r\n\r\n    //const items = this.state.jobItems;\r\n    // this.state.jobItems.map((e, i) => {\r\n    //   if (items[i].Main_Progress100 <= v) items[i].Progress100 = v;\r\n    // });\r\n    //  var changed = items.some((e) => e.Progress100 !== e.Main_Progress100);\r\n    this.setState({\r\n      ...this.state,\r\n      //    jobItems: items,\r\n      groupPercent: v,\r\n      //   changed,\r\n    });\r\n  }\r\n  groupSliderValue() {\r\n    var val =\r\n      this.state.jobItems.length > 0\r\n        ? Math.round(\r\n            this.state.jobItems\r\n              .map((e) => e.Progress100)\r\n              .reduce((a, b) => a + b) / this.state.jobItems.length\r\n          )\r\n        : 0;\r\n    return val;\r\n  }\r\n\r\n  searchItems = (e) => {\r\n    var txt = e.target.value;\r\n    var jItems =\r\n      e.target.value.length > 0\r\n        ? this.mainJobItems.filter((t) => t.Name.toLowerCase().includes(txt))\r\n        : this.mainJobItems;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: jItems,\r\n      searchVal: txt,\r\n    });\r\n  };\r\n  clearSearch = () => {\r\n    this.setState([]);\r\n    this.setState({\r\n      ...this.state,\r\n      jobItems: this.mainJobItems,\r\n      searchVal: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    var allItemsV6 = this.state.jobItems\r\n      .map((e) => e.StdTime)\r\n      .reduce(function (a, b) {\r\n        return a + b;\r\n      }, 0);\r\n    function valuetext(value) {\r\n      return `${value}%`;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Card style={{ backgroundColor: \"#fff\" }}>\r\n          <CardContent>\r\n            <Table aria-label=\"customized table\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell colSpan=\"2\">\r\n                    <Grid container spacing={2}>\r\n                      <Grid ml={0} item lg={1} sm={4} xs={3}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          style={{ textAlign: \"right\" }}\r\n                          onClick={() => {\r\n                            this.props.handleBack(2);\r\n                          }}\r\n                          startIcon={<ArrowBack />}\r\n                        ></Button>\r\n                      </Grid>\r\n                      <Grid item lg={7} sm={8} xs={8}>\r\n                        <span style={{ fontSize: \"24px\", marginTop: \"30px\" }}>\r\n                          <b>\r\n                            Job&nbsp;Items{\" \"}\r\n                            {this.props.menuIsOpen\r\n                              ? \"\"\r\n                              : \" (\" + this.props.claimingName + \")\"}{\" \"}\r\n                          </b>\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item lg={3} sm={12} xs={12}>\r\n                        <IconButton sx={{ p: \"10px\" }} aria-label=\"menu\">\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                        <InputBase\r\n                          sx={{ ml: 1, flex: 1 }}\r\n                          id=\"worktypeSearchVal\"\r\n                          placeholder=\"Search\"\r\n                          variant=\"outlined\"\r\n                          value={this.state.searchVal}\r\n                          onChange={this.searchItems}\r\n                        />\r\n                        <IconButton\r\n                          color=\"primary\"\r\n                          sx={{ p: \"10px\" }}\r\n                          aria-label=\"directions\"\r\n                          onClick={this.clearSearch}\r\n                        >\r\n                          <CancelIcon />\r\n                        </IconButton>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        lg={1}\r\n                        sm={4}\r\n                        xs={4}\r\n                        style={{\r\n                          justifyContent: \"flex-end\",\r\n\r\n                          display: \"flex\",\r\n                          alignItems: \"flex-end\",\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          disabled={!this.state.changed}\r\n                          backgroundColor=\"#fff\"\r\n                          startIcon={<SaveIcon />}\r\n                          onClick={() =>\r\n                            this.props.handleSave(\r\n                              this.state.jobItems,\r\n                              this.state.groupPercent,\r\n                              this.props.jobLevel\r\n                            )\r\n                          }\r\n                        >\r\n                          Claim\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </TableCell>\r\n                </TableRow>\r\n                {this.props.finishedItems &&\r\n                  this.props.finishedItems.length > 0 && (\r\n                    <Accordion>\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                      >\r\n                        <Typography>\r\n                          <b>Completed Items</b>\r\n                        </Typography>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        <TableRow hover=\"true\" m={1}>\r\n                          <TableCell\r\n                            style={{\r\n                              width: \"100%\",\r\n                              marginButtm: \"40px!important\",\r\n                            }}\r\n                          >\r\n                            <ul>\r\n                              {this.props.finishedItems.map((e, inx) => (\r\n                                <li>{e}</li>\r\n                              ))}\r\n                            </ul>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  )}\r\n                {this.state.jobItems && this.state.jobItems.length >= 1 && (\r\n                  <TableRow\r\n                    hover=\"true\"\r\n                    m={1}\r\n                    style={{\r\n                      backgroundColor: \"#eee\",\r\n                    }}\r\n                  >\r\n                    <TableCell\r\n                      style={{ width: \"100%\", marginButtom: \"40px!important\" }}\r\n                      colSpan=\"2\"\r\n                    >\r\n                      {this.props.jobLevel && (\r\n                        <div>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={12} lg={2}>\r\n                              All Items{\" \"}\r\n                              {this.props.settings.ShowStandardTime &&\r\n                                \" (\" +\r\n                                  Helper.timeConvert(\r\n                                    Math.round(allItemsV6 / 60)\r\n                                  ) +\r\n                                  \")\"}\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} lg={5}>\r\n                              <AirbnbSlider\r\n                                ThumbComponent={AirbnbThumbComponent}\r\n                                aria-label=\"ios slider\"\r\n                                value={this.state.groupPercent}\r\n                                getAriaValueText={valuetext}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"on\"\r\n                                step={this.props.settings.IncrementPercentage}\r\n                                marks\r\n                                min={0}\r\n                                max={100}\r\n                                onChangeCommitted={(e, val) =>\r\n                                  this.handleGroupedChanged(val)\r\n                                }\r\n                                onChange={(e, val) => this.handleChanged(val)}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} lg={2}>\r\n                              <OutlinedInput\r\n                                value={this.state.groupPercent}\r\n                                onChange={(event) =>\r\n                                  this.handleGroupedChanged(event.target.value)\r\n                                }\r\n                                type=\"number\"\r\n                                name={`pgs`}\r\n                                fullWidth\r\n                              />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={4}\r\n                              sm={4}\r\n                              lg={1}\r\n                              style={{ textAlign: \"right\" }}\r\n                            >\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                onClick={() =>\r\n                                  this.handleGroupedChanged(\r\n                                    parseInt(this.state.groupPercent) -\r\n                                      this.props.settings.IncrementPercentage,\r\n                                    true\r\n                                  )\r\n                                }\r\n                                startIcon={<RemoveIcon />}\r\n                              ></Button>\r\n                            </Grid>\r\n                            <Grid item xs={4} sm={4} lg={1}>\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() =>\r\n                                  this.handleGroupedChanged(\r\n                                    parseInt(this.state.groupPercent) +\r\n                                      this.props.settings.IncrementPercentage,\r\n                                    true\r\n                                  )\r\n                                }\r\n                                startIcon={<AddIcon />}\r\n                              ></Button>\r\n                            </Grid>\r\n                            <Grid item xs={4} sm={4} lg={1}>\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"#196dc4\"\r\n                                border=\"#196dc4\"\r\n                                backgroundColor=\"#fff\"\r\n                                onClick={() => this.handleGroupedChanged(100)}\r\n                              >\r\n                                100%\r\n                              </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </div>\r\n                      )}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n                {this.props.jobLevel !== true &&\r\n                  this.state.jobItems &&\r\n                  this.state.jobItems.map((e, inx) => (\r\n                    <TableRow hover=\"true\">\r\n                      <TableCell style={{ width: \"100%\" }} colSpan=\"2\">\r\n                        <Grid container spacing={2}>\r\n                          <Grid\r\n                            item\r\n                            xs={12}\r\n                            sm={12}\r\n                            lg={2}\r\n                            style={{ marginTop: \"20px\" }}\r\n                          >\r\n                            {e.ItemNumber}-{e.Name}\r\n                            {this.props.settings.ShowStandardTime &&\r\n                              \"(\" +\r\n                                Helper.timeConvert(Math.round(e.StdTime / 60)) +\r\n                                \")\"}\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={12}\r\n                            sm={12}\r\n                            lg={5}\r\n                            style={{ marginTop: \"20px\" }}\r\n                          >\r\n                            <AirbnbSlider\r\n                              ThumbComponent={AirbnbThumbComponent}\r\n                              aria-label=\"ios slider\"\r\n                              value={e.Progress100}\r\n                              getAriaValueText={valuetext}\r\n                              aria-labelledby=\"discrete-slider\"\r\n                              valueLabelDisplay=\"on\"\r\n                              step={this.props.settings.IncrementPercentage}\r\n                              marks\r\n                              min={0}\r\n                              max={100}\r\n                              onChangeCommitted={(e, val) =>\r\n                                this.handleChange(val, inx)\r\n                              }\r\n                              onChange={(e, val) => this.handleChange(val, inx)}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={12} lg={2}>\r\n                            <OutlinedInput\r\n                              value={e.Progress100 || \"\"}\r\n                              onChange={(event) =>\r\n                                this.handleChange(event.target.value, inx)\r\n                              }\r\n                              type=\"number\"\r\n                              name={`pgs-${e.name}`}\r\n                              key={inx}\r\n                              fullWidth\r\n                            />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={4}\r\n                            sm={4}\r\n                            lg={1}\r\n                            style={{ textAlign: \"right\" }}\r\n                          >\r\n                            <IconButton\r\n                              aria-label=\"remove\"\r\n                              onClick={() =>\r\n                                this.handleBtn(\r\n                                  -this.props.settings.IncrementPercentage,\r\n                                  inx\r\n                                )\r\n                              }\r\n                            >\r\n                              <RemoveIcon />\r\n                            </IconButton>\r\n                          </Grid>\r\n                          <Grid item xs={4} sm={4} lg={1}>\r\n                            <IconButton\r\n                              aria-label=\"add\"\r\n                              onClick={() =>\r\n                                this.handleBtn(\r\n                                  this.props.settings.IncrementPercentage,\r\n                                  inx\r\n                                )\r\n                              }\r\n                            >\r\n                              <AddIcon />\r\n                            </IconButton>\r\n                          </Grid>\r\n                          <Grid item xs={4} sm={4} lg={1}>\r\n                            <Button\r\n                              borderRadius=\"5%\"\r\n                              variant=\"contained\"\r\n                              style={{\r\n                                backgroundColor: \"white\",\r\n                                color: \"#196dc4\",\r\n                                borderRadius: \"5%\",\r\n                                border: \"1px solid #196dc4\",\r\n                              }}\r\n                              onClick={() => this.handleComplete(inx)}\r\n                            >\r\n                              100%\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </CardContent>\r\n          <CardActions\r\n            style={{ justifyContent: \"flex-end\", marginRight: \"20px\" }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              disabled={!this.state.changed}\r\n              backgroundColor=\"#fff\"\r\n              startIcon={<SaveIcon />}\r\n              onClick={() =>\r\n                this.props.handleSave(\r\n                  this.state.jobItems,\r\n                  this.state.groupPercent,\r\n                  this.props.jobLevel\r\n                )\r\n              }\r\n            >\r\n              Claim\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n//export default JobItems;\r\nexport default withStyles(styles, { withTheme: true })(JobItems);\r\n","import * as React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  BarSeries,\r\n  Title,\r\n  Legend,\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Stack, Animation } from \"@devexpress/dx-react-chart\";\r\n\r\nconst legendStyles = () => ({\r\n  root: {\r\n    display: \"flex\",\r\n    margin: \"auto\",\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\nconst legendRootBase = ({ classes, ...restProps }) => (\r\n  <Legend.Root {...restProps} className={classes.root} />\r\n);\r\nconst Root = withStyles(legendStyles, { name: \"LegendRoot\" })(legendRootBase);\r\nconst legendLabelStyles = () => ({\r\n  label: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n});\r\nconst legendLabelBase = ({ classes, ...restProps }) => (\r\n  <Legend.Label className={classes.label} {...restProps} />\r\n);\r\nconst Label = withStyles(legendLabelStyles, { name: \"LegendLabel\" })(\r\n  legendLabelBase\r\n);\r\n\r\nexport default class Barchart extends React.PureComponent {\r\n  render() {\r\n    // const { data: chartData } = this.state;\r\n\r\n    return (\r\n      <Paper>\r\n        <Chart data={this.props.Columns}>\r\n          <ArgumentAxis />\r\n          <ValueAxis />\r\n\r\n          <BarSeries\r\n            name=\"Actual\"\r\n            valueField=\"actual\"\r\n            argumentField=\"country\"\r\n            color=\"#9abf47\"\r\n          />\r\n          <BarSeries\r\n            name=\"V6. Std\"\r\n            valueField=\"std\"\r\n            argumentField=\"country\"\r\n            color=\"#adadad\"\r\n          />\r\n\r\n          <Animation />\r\n          <Legend\r\n            position=\"bottom\"\r\n            rootComponent={Root}\r\n            labelComponent={Label}\r\n          />\r\n          <Title text=\"Performance\" />\r\n          <Stack />\r\n        </Chart>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport DirectionsWalkIcon from \"@material-ui/icons/DirectionsWalk\";\r\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Fragment } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Helper from \"../../components/logics/Helper\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Barchart from \"../../components/controls/Barchart\";\r\n\r\nconst useStyles = makeStyles({\r\n  btn: {\r\n    marginRight: \"20px\",\r\n    marginLeft: \"20px\",\r\n    backgroundColor: \"white\",\r\n    color: \"#196dc4\",\r\n  },\r\n  textarea: {\r\n    display: \"block\",\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n    resize: \"both\",\r\n    minHight: \"40px\",\r\n    lineHeight: \"20px\",\r\n  },\r\n  root: { backgroundColor: \"#fff\" },\r\n});\r\n\r\nexport default function Summary(props) {\r\n  const [comment, setComment] = useState(\"\");\r\n  const classes = useStyles();\r\n  var num = 0;\r\n  var avgStd = 0;\r\n  var changedItems = props.claimingItems.filter(\r\n    (x) => x.Progress100 !== x.Main_Progress100\r\n  ).length;\r\n\r\n  const totalminute =\r\n    props.totalPhyCalimgMinutes / (props.jobLevel ? 1 : changedItems);\r\n  const chartData = [];\r\n  function space(n) {\r\n    var s = \"\";\r\n    for (var i = 0; i < n; i++) s += String.fromCharCode(0);\r\n    return s;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {window.scrollTo(0, 0)}\r\n\r\n      <Card className={classes.root}>\r\n        <Grid container spacing={3} style={{ margin: \"30px\" }}>\r\n          <Grid item lg={1} sm={2} xs={4}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                props.handleBack(\r\n                  props.isFullJob ? 2 : props.isAdminJob ? 1 : 3\r\n                );\r\n              }}\r\n              startIcon={<ArrowBack />}\r\n            ></Button>\r\n          </Grid>\r\n          <Grid item lg={10} sm={10} xs={8}>\r\n            <span style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>\r\n              <b>Claim</b>\r\n            </span>\r\n          </Grid>\r\n        </Grid>\r\n        <hr />\r\n        <CardActions style={{ justifyContent: \"flex-end\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            className={classes.btn}\r\n            startIcon={<SaveIcon />}\r\n            onClick={() => props.handleSubmit(comment, props.isAdminJob)}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            className={classes.btn}\r\n            style={{ color: \"white\", backgroundColor: \"#196dc4\" }}\r\n            startIcon={<MeetingRoomIcon />}\r\n            onClick={() => props.handleSubmit(comment, props.isAdminJob, true)}\r\n          >\r\n            Save & Logout\r\n          </Button>\r\n        </CardActions>\r\n        <CardActions>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={9} sm={12} xs={12}>\r\n              <DirectionsWalkIcon />\r\n              <span style={{ fontSize: \"1rem\" }}>\r\n                {\" \"}\r\n                <b>Job: </b> {props.jobName}\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n        </CardActions>\r\n        <CardContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={6} sm={12} xs={12}>\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <AccessibilityNewIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                        Worker\r\n                      </Typography>\r\n                    }\r\n                    secondary={\r\n                      <Typography style={{ fontSize: \"1rem\" }}>\r\n                        {props.claimingName}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n                {!props.isFullJob && (\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <BuildIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                          Work Type\r\n                        </Typography>\r\n                      }\r\n                      secondary={\r\n                        <Typography style={{ fontSize: \"1rem\" }}>\r\n                          {props.worktypeName}\r\n                        </Typography>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                )}\r\n\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n                {/* {props.isFullJob && (\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <DoneAllIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                          Claiming Full Job\r\n                          {\r\n                            <div>\r\n                              <span>(</span>\r\n                              {Helper.timeConvert(props.totalPhyCalimgMinutes)}\r\n                              <span>)</span>\r\n                            </div>\r\n                          }\r\n                        </Typography>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                )} */}\r\n                {!props.isAdminJob && props.jobLevel && (\r\n                  // const avgPrg=props.claimingItems.map((e) => (e.\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <DoneAllIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                          Claiming\r\n                        </Typography>\r\n                      }\r\n                      secondary={\r\n                        <Fragment>\r\n                          <Typography style={{ fontSize: \"1rem\" }}>\r\n                            {props.mainPercent}% to:\r\n                            {props.groupPercent}% {\" took: \"}\r\n                            {Helper.timeConvert(totalminute)}\r\n                            {\" - Std: \"}\r\n                            {Helper.timeConvert(\r\n                              (props.claimingItems.reduce(\r\n                                (a, v) => (a = a + v.StdTime),\r\n                                0\r\n                              ) *\r\n                                (props.groupPercent - props.mainPercent)) /\r\n                                6000\r\n                            )}\r\n                          </Typography>\r\n                        </Fragment>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                )}\r\n                {!props.isAdminJob && !props.jobLevel && (\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <DoneAllIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"h6\" style={{ fontSize: \"1rem\" }}>\r\n                          Claiming\r\n                        </Typography>\r\n                      }\r\n                      secondary={props.claimingItems\r\n                        .filter((x) => x.Progress100 !== x.Main_Progress100)\r\n                        .map((e) => (\r\n                          <Fragment>\r\n                            <Typography key={e.id} style={{ fontSize: \"1rem\" }}>\r\n                              {e.Name}: ({e.Main_Progress100}% to:\r\n                              {e.Progress100}% {\") took: \"}\r\n                              {Helper.timeConvert(totalminute)}\r\n                              {\" - Std: \"}\r\n                              {Helper.timeConvert(\r\n                                (e.StdTime *\r\n                                  (e.Progress100 - e.Main_Progress100)) /\r\n                                  6000\r\n                              )}\r\n                            </Typography>\r\n\r\n                            <span style={{ fontSize: \"0.0rem\" }}>\r\n                              {\r\n                                (num =\r\n                                  chartData.filter((x) => x.name == e.Name)\r\n                                    .length + 1)\r\n                              }\r\n                              {!props.jobLevel &&\r\n                                chartData.push({\r\n                                  id: e.OId,\r\n                                  name: e.Name,\r\n                                  country:\r\n                                    num > 1 ? e.Name + space(num) : e.Name,\r\n                                  actual: totalminute,\r\n                                  std:\r\n                                    (e.StdTime *\r\n                                      (e.Progress100 - e.Main_Progress100)) /\r\n                                    6000,\r\n                                })}\r\n                            </span>\r\n                          </Fragment>\r\n                        ))}\r\n                    />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n              {props.jobLevel && (\r\n                <span style={{ fontSize: \"0.0rem\" }}>\r\n                  {chartData.push({\r\n                    country: props.worktypeName,\r\n                    actual: totalminute,\r\n                    std:\r\n                      (props.claimingItems.reduce(\r\n                        (a, v) => (a = a + v.StdTime),\r\n                        0\r\n                      ) *\r\n                        (props.groupPercent - props.mainPercent)) /\r\n                      6000,\r\n                  })}\r\n                </span>\r\n              )}\r\n              {props.settings.PSEnableIndividual && (\r\n                <Barchart Columns={chartData} Title=\"Performance\" />\r\n              )}\r\n              {/* <Hidden only={[\"xs\"]}>\r\n                 <Barchart Columns={data} Title=\"Performance\" /> \r\n              </Hidden> */}\r\n            </Grid>\r\n            <Grid item lg={5} sm={12} xs={12}>\r\n              <TextareaAutosize\r\n                aria-label=\"minimum height\"\r\n                style={{ fontSize: \"20px\" }}\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n                className={classes.textarea}\r\n                rowsMin={20}\r\n                placeholder=\"Comment\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions style={{ justifyContent: \"flex-end\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            className={classes.btn}\r\n            startIcon={<SaveIcon />}\r\n            onClick={() => props.handleSubmit(comment, props.isAdminJob)}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            className={classes.btn}\r\n            style={{ color: \"white\", backgroundColor: \"#196dc4\" }}\r\n            startIcon={<MeetingRoomIcon />}\r\n            onClick={() => props.handleSubmit(comment, props.isAdminJob, true)}\r\n          >\r\n            Save & Logout\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\n\r\nimport gridSearchStyles from \"../../components/controls/Styles\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport FullScreenDialog from \"../../components/controls/FullScreenDialog\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport CallMadeOutlinedIcon from \"@mui/icons-material/CallMadeOutlined\";\r\nimport SubdirectoryArrowLeftOutlinedIcon from \"@mui/icons-material/SubdirectoryArrowLeftOutlined\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport CircularProgressWithLabel from \"../../components/controls/CircularProgressWithLabel\";\r\nimport ClaimLogic from \"../../components/logics/ClaimLogic\";\r\nimport Loading from \"../loading\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport HomeWorkIcon from \"@mui/icons-material/HomeWork\";\r\n\r\nexport default function DividedJobs(props) {\r\n  return (\r\n    <Accordion defaultExpanded={true}>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\"\r\n      >\r\n        <Typography variant=\"h4\" component=\"div\">\r\n          {props.label}\r\n          {props.menuIsOpen ? \"\" : \"(\" + props.claimingName + \")\"}{\" \"}\r\n        </Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails></AccordionDetails>\r\n      <Grid container spacing={1}>\r\n        <Grid ml={0} item lg={12} sm={12} xs={12} md={12}>\r\n          <hr />\r\n        </Grid>\r\n        {props.loading && <Loading />}\r\n        {!props.loading &&\r\n          props.jobs &&\r\n          props.jobs\r\n            .sort(function (a, b) {\r\n              return a.JobStageOrder - b.JobStageOrder;\r\n            })\r\n            .filter(\r\n              (x) =>\r\n                (props.activeButton == \"post\" &&\r\n                  x.JobStageName == \"postproduction\") ||\r\n                (props.activeButton == \"pre\" &&\r\n                  x.JobStageName == \"preproduction\") ||\r\n                (props.activeButton == \"prod\" &&\r\n                  x.JobStageName == \"production\") ||\r\n                (props.activeButton == \"site\" && x.JobStageName == \"SiteWork\")\r\n            )\r\n            .filter(\r\n              (x) =>\r\n                (props.activeButton != \"site\" && x.WorkTypes.length > 0) ||\r\n                props.activeButton == \"site\"\r\n            )\r\n            .filter((x) => x.WorkTypes.some((w) => w.Progress < 100))\r\n\r\n            .map((e) => (\r\n              <Grid\r\n                item\r\n                lg={props.jobs.length > 48 ? 1 : 2}\r\n                sm={6}\r\n                xs={12}\r\n                key={e.OId}\r\n                className={props.classes.bolding}\r\n              >\r\n                <Box\r\n                  borderRadius=\"5%\"\r\n                  p={1}\r\n                  boxShadow={4}\r\n                  color=\"white\"\r\n                  className={props.classes.boxBolding}\r\n                  style={{ paddingLeft: \"30px\", paddingRight: \"30px\" }}\r\n                  bgcolor={\r\n                    e.JobStageName == \"production\"\r\n                      ? \"#9abf47\"\r\n                      : e.JobStageName == \"preproduction\"\r\n                      ? \"#b3b31b\"\r\n                      : e.JobStageName == \"postproduction\"\r\n                      ? \"#b4bebf\"\r\n                      : \"white\"\r\n                  }\r\n                  spacing={3}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    fontSize: \"0.8rem\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                  onClick={() => {\r\n                    props.handleJobClick(e.OId);\r\n                  }}\r\n                >\r\n                  <Grid container style={{ color: \"black\" }}>\r\n                    <Hidden only={[\"sm\", \"md\", \"xl\", \"lg\"]}>\r\n                      <Grid item lg={4} xs={4} sm={4} md={4}>\r\n                        {e.Note !== \"\" && e.Note.length > 0 && (\r\n                          <IconButton\r\n                            color=\"inherit\"\r\n                            onClick={(w) => {\r\n                              // alert(e.Note);\r\n                              props.setNote(e.Note);\r\n                              props.setOpenDialog(true);\r\n                              w.stopPropagation();\r\n                            }}\r\n                          >\r\n                            <CommentIcon />\r\n                          </IconButton>\r\n                        )}\r\n                      </Grid>\r\n                      <Grid item lg={4} xs={4} sm={4} md={4}>\r\n                        <span style={{ fontSize: \"large\" }}>{e.Code}</span>\r\n                      </Grid>\r\n\r\n                      <Grid item lg={4} xs={4} sm={4} md={4}>\r\n                        <CircularProgressWithLabel value={e.Progress} />\r\n                      </Grid>\r\n                    </Hidden>\r\n                    <Hidden only={[\"xs\"]}>\r\n                      <Grid\r\n                        item\r\n                        lg={6}\r\n                        xs={6}\r\n                        sm={6}\r\n                        md={6}\r\n                        style={{ backgroundColor: \"#718d35\" }}\r\n                      >\r\n                        {e.Note !== \"\" && e.Note.length > 0 && (\r\n                          <IconButton\r\n                            color=\"inherit\"\r\n                            onClick={(w) => {\r\n                              // alert(e.Note);\r\n                              props.setNote(e.Note);\r\n                              props.setOpenDialog(true);\r\n                              w.stopPropagation();\r\n                            }}\r\n                          >\r\n                            <CommentIcon />\r\n                          </IconButton>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid\r\n                        item\r\n                        lg={6}\r\n                        xs={6}\r\n                        sm={6}\r\n                        md={6}\r\n                        style={{ backgroundColor: \"#718d35\" }}\r\n                      >\r\n                        <CircularProgressWithLabel value={e.Progress} />\r\n                      </Grid>\r\n                      <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                        <hr />\r\n                      </Grid>\r\n                      <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                        <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                          <span style={{ fontSize: \"large\" }}>{e.Code}</span>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Hidden>\r\n\r\n                    <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                      <hr />\r\n                    </Grid>\r\n                    <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                      <div style={{ fontSize: \"small\" }}> {e.Title}</div>\r\n                    </Grid>\r\n                    {/* <Grid item lg={6} xs={6} sm={6} md={6}>\r\n              <CircularProgressWithLabel value={e.Progress} />\r\n            </Grid> */}\r\n                  </Grid>\r\n                </Box>\r\n              </Grid>\r\n            ))}\r\n      </Grid>\r\n    </Accordion>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect, forwardRef } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\n\r\nimport gridSearchStyles from \"../../components/controls/Styles\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport FullScreenDialog from \"../../components/controls/FullScreenDialog\";\r\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport CallMadeOutlinedIcon from \"@mui/icons-material/CallMadeOutlined\";\r\nimport SubdirectoryArrowLeftOutlinedIcon from \"@mui/icons-material/SubdirectoryArrowLeftOutlined\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport CircularProgressWithLabel from \"../../components/controls/CircularProgressWithLabel\";\r\nimport DividedJobs from \"./DividedJobs\";\r\nimport ClaimLogic from \"../../components/logics/ClaimLogic\";\r\nimport Barchart from \"../../components/controls/Barchart\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport HomeWorkIcon from \"@mui/icons-material/HomeWork\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function Jobs(props) {\r\n  Date.prototype.addDays = function (days) {\r\n    var date = new Date(this.valueOf());\r\n    date.setDate(date.getDate() + days);\r\n    return date;\r\n  };\r\n  const classes = gridSearchStyles();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [note, setNote] = useState([]);\r\n  const [activeButton, setactiveButton] = useState(\r\n    props.IsSitWorkGroup ? \"site\" : \"prod\"\r\n  );\r\n\r\n  const [jobs, setJobs] = useState(props.jobs);\r\n  const [isLoading, setisLoading] = useState(true);\r\n  const [preJobs, setPreJobs] = useState([]);\r\n  const [postJobs, setPostJobs] = useState([]);\r\n  const [siteJobs, setSiteJobs] = useState([]);\r\n  const [loadedJobs, setLoadedJobs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchVal, setsearchVal] = useState(\"\");\r\n  const [perfstat, setPerfstat] = useState(false);\r\n  const [perfstatReady, setPerfstatReady] = useState(true);\r\n  const [dateFrom, setDateFrom] = useState(new Date().addDays(-7));\r\n  const [dateTo, setDateTo] = useState(new Date());\r\n  const [chartData, setChartData] = useState([]);\r\n  const [primaryJobs, setPrimaryJobs] = useState([]);\r\n  const [secondaryJobs, setSecondaryJobs] = useState([]);\r\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n    <OutlinedInput\r\n      sx={{ ml: 1, flex: 1 }}\r\n      onClick={onClick}\r\n      ref={ref}\r\n      value={value}\r\n    />\r\n  ));\r\n  useEffect(() => {\r\n    divideJobs(props.jobs);\r\n  }, []);\r\n  async function getPerfStatAPI(fromBtn) {\r\n    if (fromBtn && perfstat) {\r\n      setPerfstat(false);\r\n      return;\r\n    }\r\n    try {\r\n      var result = await ClaimLogic.GetPerfStatByAPI(\r\n        props.claimingOId,\r\n        dateFrom.toLocaleDateString(\"en-US\"),\r\n        dateTo.toLocaleDateString(\"en-US\"),\r\n        props.apiRoute\r\n      );\r\n      var data = JSON.parse(result.data);\r\n      var result = [];\r\n      result.push({\r\n        country: data.PointName,\r\n        name: data.PointName,\r\n        actual: data.Actual,\r\n        std: data.Std,\r\n      });\r\n      setChartData(result);\r\n\r\n      setPerfstat(true);\r\n      setPerfstatReady(true);\r\n    } catch (ex) {\r\n      if (ex.response)\r\n        alert(`Error in calling Get performance stat. API- ${ex.response}`);\r\n      else alert(`Error in calling Get performance stat. API- ${ex.message}`);\r\n    }\r\n  }\r\n  function divideJobs(jobs) {\r\n    var pj = [];\r\n    var sj = [];\r\n    setPrimaryJobs([]);\r\n    setSecondaryJobs([]);\r\n    setJobs([]);\r\n    if (props.divideJobs) {\r\n      for (let i = 0; i < jobs.length; i++) {\r\n        const j = jobs[i];\r\n\r\n        var wtIds = j.WorkTypes.filter((x) => x.Progress < 100).map(\r\n          (w) => w.OId\r\n        );\r\n        const intersct = wtIds.filter((value) =>\r\n          props.primaryWorktypeIds.includes(value)\r\n        );\r\n        if (intersct.length > 0) {\r\n          pj.push(j);\r\n        } else sj.push(j);\r\n      }\r\n      setPrimaryJobs(pj);\r\n      setSecondaryJobs(sj);\r\n    } else {\r\n      setJobs(jobs);\r\n    }\r\n  }\r\n\r\n  function searchJobs(event) {\r\n    var txt = event.target.value;\r\n    setsearchVal(txt);\r\n\r\n    if (props.divideJobs) {\r\n      setPrimaryJobs(\r\n        event.target.value.length > 0\r\n          ? primaryJobs.filter(\r\n              (t) =>\r\n                t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n                t.Code.includes(txt)\r\n            )\r\n          : primaryJobs\r\n      );\r\n\r\n      setSecondaryJobs(\r\n        event.target.value.length > 0\r\n          ? secondaryJobs.filter(\r\n              (t) =>\r\n                t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n                t.Code.includes(txt)\r\n            )\r\n          : secondaryJobs\r\n      );\r\n    } else {\r\n      var filterJobs =\r\n        event.target.value.length > 0\r\n          ? jobs.filter(\r\n              (t) =>\r\n                t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n                t.Code.includes(txt)\r\n            )\r\n          : jobs;\r\n      divideJobs(filterJobs);\r\n    }\r\n  }\r\n  function chunkSubstr(str, size) {\r\n    const numChunks = Math.ceil(str.length / size);\r\n    const chunks = new Array(numChunks);\r\n\r\n    for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\r\n      chunks[i] = str.substr(o, size);\r\n    }\r\n\r\n    return chunks;\r\n  }\r\n  function clearSearch() {\r\n    setsearchVal(\"\");\r\n    divideJobs([]);\r\n    divideJobs(props.jobs);\r\n  }\r\n\r\n  function handleJobsButtonClicked(section) {\r\n    var jobType =\r\n      section === \"post\"\r\n        ? 4\r\n        : section === \"pre\"\r\n        ? 2\r\n        : section === \"prod\"\r\n        ? 3\r\n        : section === \"site\"\r\n        ? 4\r\n        : 3;\r\n\r\n    divideJobs([]);\r\n    setsearchVal(\"\");\r\n    setLoading(true);\r\n    ClaimLogic.getJobsOfWorkerFromApi(\r\n      props.apiRoute,\r\n      props.claimingOId,\r\n      jobType,\r\n      section === \"site\"\r\n    )\r\n      .then((r) => {\r\n        const values = JSON.parse(r.data);\r\n        setSiteJobs(values.Item1);\r\n        divideJobs(values.Item1);\r\n        loadedJobs.push(section);\r\n        setLoadedJobs(loadedJobs);\r\n        props.handleJobLoaded(values.Item1);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Error in retrieve Jobs list\");\r\n      });\r\n    setactiveButton(section);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card style={{ backgroundColor: \"#ebedf1\" }}>\r\n        <CardContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item ml={0} item lg={1} sm={2} xs={2}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                style={{ textAlign: \"right\" }}\r\n                onClick={() => {\r\n                  props.handleBack(0);\r\n                }}\r\n                startIcon={<ArrowBack />}\r\n              ></Button>\r\n            </Grid>\r\n            <Grid item lg={2} sm={9} xs={9}>\r\n              <span style={{ fontSize: \"18px\", marginTop: \"30px\" }}>\r\n                <b>Job&nbsp;Selection</b>\r\n              </span>\r\n            </Grid>\r\n            <Grid item lg={5} md={12} sm={12} xs={12}>\r\n              <IconButton sx={{ p: \"10px\" }} aria-label=\"menu\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n              <InputBase\r\n                sx={{ ml: 1, flex: 1 }}\r\n                placeholder=\"Search\"\r\n                variant=\"outlined\"\r\n                value={searchVal}\r\n                onChange={searchJobs}\r\n              />\r\n              <IconButton\r\n                color=\"primary\"\r\n                sx={{ p: \"10px\" }}\r\n                aria-label=\"directions\"\r\n                onClick={() => clearSearch()}\r\n              >\r\n                <CancelIcon />\r\n              </IconButton>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              ml={0}\r\n              item\r\n              lg={2}\r\n              sm={6}\r\n              md={6}\r\n              xs={6}\r\n              style={{ textAlign: \"right\" }}\r\n            >\r\n              {props.settings.PSEnableIndividual && (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={() => getPerfStatAPI(true)}\r\n                >\r\n                  Performance\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              ml={0}\r\n              item\r\n              lg={2}\r\n              md={6}\r\n              sm={6}\r\n              xs={6}\r\n              style={{ textAlign: \"right\" }}\r\n            >\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={() => props.handleLogOut(props.claimingOId)}\r\n                startIcon={<MeetingRoomIcon />}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {!perfstat && (\r\n            <Fragment>\r\n              <Accordion defaultExpanded={true}>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography variant=\"h4\" component=\"div\">\r\n                    Jobs{\" \"}\r\n                    {props.menuIsOpen ? \"\" : \"(\" + props.claimingName + \")\"}{\" \"}\r\n                    <hr />\r\n                  </Typography>\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails>\r\n                  <Grid ml={1} item lg={2} sm={1} xs={1}></Grid>\r\n                  <Grid\r\n                    ml={0}\r\n                    item\r\n                    lg={2}\r\n                    sm={3}\r\n                    xs={3}\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    {!props.settings.HidePreProductionJobs && (\r\n                      <Button\r\n                        variant={\r\n                          activeButton == \"pre\" ? \"contained\" : \"outlined\"\r\n                        }\r\n                        style={{\r\n                          color: activeButton == \"pre\" ? \"white\" : \"black\",\r\n                          backgroundColor:\r\n                            activeButton == \"pre\" ? \"#196dc4\" : \"white\",\r\n                        }}\r\n                        size=\"small\"\r\n                        onClick={() => handleJobsButtonClicked(\"pre\")}\r\n                        startIcon={<CallMadeOutlinedIcon />}\r\n                        fullWidth\r\n                      >\r\n                        Pre&nbsp;Prod.\r\n                      </Button>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid\r\n                    ml={0}\r\n                    item\r\n                    lg={2}\r\n                    sm={3}\r\n                    xs={3}\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    <Button\r\n                      variant={\r\n                        activeButton == \"prod\" ? \"contained\" : \"outlined\"\r\n                      }\r\n                      style={{\r\n                        color: activeButton == \"prod\" ? \"white\" : \"black\",\r\n                        backgroundColor:\r\n                          activeButton == \"prod\" ? \"#196dc4\" : \"white\",\r\n                      }}\r\n                      size=\"small\"\r\n                      onClick={() => handleJobsButtonClicked(\"prod\")}\r\n                      startIcon={<SettingsIcon />}\r\n                      fullWidth\r\n                    >\r\n                      <span>\r\n                        &nbsp;&nbsp;&nbsp;Prod.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                      </span>\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid\r\n                    ml={0}\r\n                    item\r\n                    lg={2}\r\n                    sm={3}\r\n                    xs={3}\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    {!props.settings.HidePostProductionJobs && (\r\n                      <Button\r\n                        variant={\r\n                          activeButton == \"post\" ? \"contained\" : \"outlined\"\r\n                        }\r\n                        style={{\r\n                          color: activeButton == \"post\" ? \"white\" : \"black\",\r\n                          backgroundColor:\r\n                            activeButton == \"post\" ? \"#196dc4\" : \"white\",\r\n                        }}\r\n                        startIcon={<SubdirectoryArrowLeftOutlinedIcon />}\r\n                        size=\"small\"\r\n                        onClick={() => handleJobsButtonClicked(\"post\")}\r\n                        fullWidth\r\n                      >\r\n                        Post&nbsp;Prod.\r\n                      </Button>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid\r\n                    ml={0}\r\n                    item\r\n                    lg={2}\r\n                    sm={3}\r\n                    xs={3}\r\n                    style={{ textAlign: \"right\" }}\r\n                  >\r\n                    <Button\r\n                      variant={\r\n                        activeButton == \"site\" ? \"contained\" : \"outlined\"\r\n                      }\r\n                      style={{\r\n                        color: activeButton == \"site\" ? \"white\" : \"black\",\r\n                        backgroundColor:\r\n                          activeButton == \"site\" ? \"#196dc4\" : \"white\",\r\n                      }}\r\n                      startIcon={<HomeWorkIcon />}\r\n                      size=\"small\"\r\n                      onClick={() => handleJobsButtonClicked(\"site\")}\r\n                      fullWidth\r\n                    >\r\n                      Site&nbsp;Work.\r\n                    </Button>\r\n                  </Grid>\r\n                </AccordionDetails>\r\n                {props.settings.DividJobs && (\r\n                  <div>\r\n                    <DividedJobs\r\n                      label=\"Primary Jobs\"\r\n                      menuIsOpen={props.menuIsOpen}\r\n                      claimingName={props.claimingName}\r\n                      loading={loading}\r\n                      jobs={primaryJobs}\r\n                      handleJobClick={props.handleJobClick}\r\n                      setNote={setNote}\r\n                      setOpenDialog={setOpenDialog}\r\n                      classes={classes}\r\n                      activeButton={activeButton}\r\n                    />\r\n                    <DividedJobs\r\n                      label=\"Secondary Jobs\"\r\n                      menuIsOpen={props.menuIsOpen}\r\n                      claimingName={props.claimingName}\r\n                      loading={loading}\r\n                      jobs={secondaryJobs}\r\n                      handleJobClick={props.handleJobClick}\r\n                      setNote={setNote}\r\n                      setOpenDialog={setOpenDialog}\r\n                      classes={classes}\r\n                      activeButton={activeButton}\r\n                    />\r\n                  </div>\r\n                )}\r\n                {!props.divideJobs && (\r\n                  <DividedJobs\r\n                    label=\"Jobs\"\r\n                    menuIsOpen={props.menuIsOpen}\r\n                    claimingName={props.claimingName}\r\n                    loading={loading}\r\n                    jobs={jobs}\r\n                    handleJobClick={props.handleJobClick}\r\n                    setNote={setNote}\r\n                    setOpenDialog={setOpenDialog}\r\n                    classes={classes}\r\n                    activeButton={activeButton}\r\n                  />\r\n                )}\r\n              </Accordion>\r\n\r\n              <Accordion defaultExpanded={true}>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography variant=\"h4\" component=\"div\">\r\n                    Admin Jobs{\" \"}\r\n                    {props.menuIsOpen ? \"\" : \"(\" + props.claimingName + \")\"}{\" \"}\r\n                    <hr />\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails></AccordionDetails>\r\n                <Grid container spacing={1}>\r\n                  {props.jobs &&\r\n                    props.adminJobs.map((e) => (\r\n                      <Grid\r\n                        item\r\n                        lg={2}\r\n                        sm={6}\r\n                        xs={12}\r\n                        key={e.OId}\r\n                        className={classes.bolding}\r\n                      >\r\n                        <Box\r\n                          borderRadius=\"5%\"\r\n                          p={4}\r\n                          boxShadow={4}\r\n                          color=\"black\"\r\n                          spacing={3}\r\n                          style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            fontSize: \"0.9rem\",\r\n                            textAlign: \"center\",\r\n                            backgroundColor: \"#efefef\",\r\n                          }}\r\n                          onClick={() => {\r\n                            props.handleJobClick(e.OId, true);\r\n                          }}\r\n                        >\r\n                          <div>{e.Name}</div>\r\n                        </Box>\r\n                      </Grid>\r\n                    ))}\r\n                </Grid>\r\n              </Accordion>\r\n            </Fragment>\r\n          )}\r\n          {perfstat && (\r\n            <div>\r\n              <Grid\r\n                container\r\n                style={{\r\n                  marginBottom: \"20px\",\r\n                  marginTop: \"40px\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                <Grid item lg={12} sm={12} xs={12}>\r\n                  <hr />\r\n                </Grid>\r\n                <Grid item lg={8} sm={4} xs={12} style={{ marginTop: \"30px\" }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => getPerfStatAPI(false)}\r\n                  >\r\n                    Show\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item lg={2} sm={4} xs={6}>\r\n                  <div>\r\n                    <label>From</label>\r\n                    <DatePicker\r\n                      style={{ zIndex: \"10000\" }}\r\n                      selected={dateFrom}\r\n                      onChange={(e) => setDateFrom(e)}\r\n                      customInput={<ExampleCustomInput />}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid item lg={2} sm={4} xs={6}>\r\n                  <div>\r\n                    <label className=\"datePickerLabel\">To</label>\r\n                    <DatePicker\r\n                      customInput={<ExampleCustomInput />}\r\n                      selected={dateTo}\r\n                      onChange={(e) => setDateTo(e)}\r\n                      style={{ zIndex: \"10000\" }}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Barchart Columns={chartData} Title=\"Performance\" />\r\n            </div>\r\n          )}\r\n          <FullScreenDialog\r\n            header=\"Job Notes\"\r\n            uls={note}\r\n            open={openDialog}\r\n            handleClose={() => setOpenDialog(false)}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../../App.css\";\r\nimport { Button, Grid, Hidden } from \"@material-ui/core\";\r\nexport default function Start(props) {\r\n  return (\r\n    <div>\r\n      <Hidden only={[\"xs\", \"sm\"]}>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <Grid item xs={3}>\r\n            <div>\r\n              <h1\r\n                style={{\r\n                  color: \"grey\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  paddingLeft: \"35%\",\r\n                }}\r\n              >\r\n                Claim&nbsp;Job\r\n              </h1>\r\n              <Button\r\n                id=\"btnStart\"\r\n                name=\"btnStart\"\r\n                className=\"click\"\r\n                style={{\r\n                  backgroundImage: `url(\\\"${props.mainRoute}start.png\\\")`,\r\n                  backgroundColor: \"#fff\",\r\n                  backgroundPosition: \"center\",\r\n                  // hover: {\r\n                  //  ,\r\n                  //   transform: \"scale(0.6)\",\r\n                  //   transitionDuration: \"0.5s\",\r\n                  // },\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  paddingTop: \"-30px\",\r\n\r\n                  width: \"430px\",\r\n                  height: \"240px\",\r\n\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  borderRadius: \"38px\",\r\n                  fontSize: \"40px\",\r\n                }}\r\n                onClick={props.start}\r\n              ></Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n      <Hidden only={[\"xl\", \"lg\", \"md\"]}>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <Grid item xs={3}>\r\n            <div>\r\n              <h1\r\n                style={{\r\n                  color: \"grey\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  paddingLeft: \"35%\",\r\n                }}\r\n              >\r\n                Claim&nbsp;Job\r\n              </h1>\r\n              <Button\r\n                id=\"btnStart\"\r\n                name=\"btnStart\"\r\n                className=\"click\"\r\n                style={{\r\n                  backgroundImage: `url(\\\"${props.mainRoute}start.png\\\")`,\r\n                  backgroundColor: \"#fff\",\r\n                  backgroundPosition: \"center\",\r\n                  // hover: {\r\n                  //  ,\r\n                  //   transform: \"scale(0.6)\",\r\n                  //   transitionDuration: \"0.5s\",\r\n                  // },\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  paddingTop: \"-30px\",\r\n\r\n                  width: \"300px\",\r\n                  height: \"240px\",\r\n\r\n                  display: \"flex\",\r\n                  justifyContent: \"left\",\r\n                  alignItems: \"left\",\r\n                  borderRadius: \"38px\",\r\n                  fontSize: \"40px\",\r\n                }}\r\n                onClick={props.start}\r\n              ></Button>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config\";\r\nimport Helper from \"./Helper\";\r\n\r\nclass LoginLogic extends React.Component {\r\n  getListOfWorkersFromApi = async (workerId, route) => {\r\n    return await Helper.apiPost(\r\n      `${route}Workers/GetListOfWorkers?workerId=` + workerId,\r\n      {},\r\n      \"Error in calling ESP (Get Workers List)\"\r\n    );\r\n  };\r\n\r\n  searchNames = (event, mainWorkersList) => {\r\n    var txt = event.target.value;\r\n    return event.target.value.length > 0\r\n      ? mainWorkersList.filter((t) =>\r\n          t.Name.toLowerCase().includes(txt.toLowerCase())\r\n        )\r\n      : mainWorkersList;\r\n  };\r\n\r\n  saveLoginInAPI = async (id, comment, route) => {\r\n    var response = {};\r\n    var value = { OId: id, Code: comment };\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    return await Helper.apiPost(`${route}Workers/PostLoginWorker`, value, \"\");\r\n  };\r\n\r\n  saveLogoutAPI = async (id, comment, route) => {\r\n    var response = {};\r\n    var value = { OId: id, Code: comment };\r\n\r\n    try {\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n\r\n      return await Helper.apiPost(`${route}Workers/PostLogoutWorker`, value);\r\n    } catch (err) {\r\n      if (err.response)\r\n        alert(`Error in calling ESP (Logout) API- ${err.response.data}`);\r\n      else alert(`Error in calling ESP (Logout) API- ${err}`);\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n\r\n  checkWorkerLateLogin(worker, trackLateLogin, lateLoginTrack) {\r\n    if (trackLateLogin) {\r\n      var currentTime = new Date();\r\n\r\n      var tempTime = new Date(worker.StartTime);\r\n      var startTime = new Date(tempTime);\r\n      startTime.setMinutes(tempTime.getMinutes() + lateLoginTrack);\r\n      return startTime < currentTime;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  checkWorkerEarlyLeave(worker, trackEarlyLeave, earlyLeaveAllowance) {\r\n    if (trackEarlyLeave) {\r\n      var currentTime = new Date();\r\n\r\n      var tempTime = new Date(worker.EndTime);\r\n      var endTime = new Date(tempTime);\r\n      endTime.setMinutes(tempTime.getMinutes() - earlyLeaveAllowance);\r\n      return endTime > currentTime;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getAsyncSettingsApi = async (url, value, errorName) => {\r\n    const authStr = \"bearer \" + this.getLocalToken();\r\n    try {\r\n      axios.defaults.headers.post[\"Authorization\"] = authStr;\r\n      axios.defaults.headers.post[\"Content-type\"] = \"application/json\";\r\n      const response = await axios.post(\r\n        `${this.props.apiRoute}AdminSettings/GetInfo`,\r\n        null\r\n      );\r\n\r\n      return response;\r\n    } catch (err) {\r\n      alert(`Error in calling ESP (${errorName}) API- ${err}`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <din></din>;\r\n  }\r\n}\r\n//module.exports={_:LoginLogics};\r\nconst Loginlogics = new LoginLogic();\r\nexport default Loginlogics;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function FormDialog(props) {\r\n  const [comment, setComment] = React.useState(\"\");\r\n  const [allow, setAllow] = React.useState(true);\r\n\r\n  const handleommentChange = (e) => {\r\n    setComment(e.target.value);\r\n    setAllow(e.target.value.length < 5);\r\n\r\n    setComment(e.target.value);\r\n  };\r\n  const handleSave = () => {\r\n    if (props.doSaving) {\r\n      props.onCommentSave(comment, !props.logout);\r\n    }\r\n    setAllow(true);\r\n  };\r\n  const handleKeyDown = (event) => {\r\n    if (event.target.value.length > 5 && event.key === \"Enter\") {\r\n      handleSave();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={handleSave}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">{props.header}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{props.text}</DialogContentText>\r\n          {!props.alert && (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label={props.placeholer}\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={handleommentChange}\r\n              onKeyDown={handleKeyDown}\r\n            />\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleSave}\r\n            color=\"primary\"\r\n            disabled={props.alert ? false : allow}\r\n          >\r\n            {props.alert ? \"Ok\" : \"Save\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport Login from \"./Login\";\r\nimport WorkTypes from \"./WorkTypes\";\r\nimport JobItems from \"./JobItems\";\r\nimport Summary from \"./Summary\";\r\nimport Jobs from \"./Jobs\";\r\nimport Start from \"./Start\";\r\nimport Loginlogics from \"../../components/logics/Login\";\r\nimport ClaimLogic from \"../../components/logics/ClaimLogic\";\r\nimport Loading from \"../loading.js\";\r\nimport FormDialog from \"../../components/controls/FormDialog\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass CalimContainer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      workersList: [],\r\n      settings: null,\r\n      mainWorkersList: [],\r\n      workTypes: [],\r\n      mainWorkTypes: [],\r\n      jobs: [],\r\n      mainJobs: [],\r\n      adminJobs: [],\r\n      mainAdminJobs: [],\r\n      claimingOId: 0,\r\n      claimingUser: \"\",\r\n      claiminWorker: {},\r\n      page: -1,\r\n      loading: false,\r\n      worktypeId: 0,\r\n      workTypeName: \"\",\r\n      jobId: 0,\r\n      isAdminJob: false,\r\n      adminWorkType: null,\r\n      jobItems: [],\r\n      mainJobItems: [],\r\n      primaryJobs: [],\r\n      secondaryJobs: [],\r\n      changedClaimingItems: [],\r\n      canClaimWholeJob: false,\r\n      claimingFullJob: false,\r\n      dialogOpen: false,\r\n      dialogHeader: \"\",\r\n      dialogText: \"\",\r\n      dialogSave: null,\r\n      totalPhyCalimgMinutes: 0,\r\n      LabelText: [],\r\n      isFullJob: false,\r\n      logoutClicked: false,\r\n      totalProgress: 0,\r\n      finishedItems: [],\r\n      logoutChecked: false,\r\n      groupPercent: 0,\r\n      IsSitWorkGroup: false,\r\n      doSaving: true,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // this.setState(\r\n    //   {\r\n    //     ...this.state,\r\n    //     loading: true,\r\n    //   },\r\n    //   () => {\r\n    //     this.loadWorkersList();\r\n    //   }\r\n    // );\r\n    if (this.props.fromPB) {\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          loading: true,\r\n        },\r\n        () => {\r\n          this.loadWorkersList();\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        page: -1,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  /* #region Claim From PB */\r\n  getPBJobItems = async (jid, wid) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true,\r\n    });\r\n\r\n    var labelText = this.state.LabelText;\r\n    var r = await ClaimLogic.getJobItemsFromApi(\r\n      jid,\r\n      wid,\r\n      this.state.claimingOId,\r\n      this.props.apiRoute\r\n    );\r\n    var data = JSON.parse(r.data);\r\n\r\n    labelText.push(this.props.fromPB ? this.props.jobCode : data.WorkType.Name);\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        jobId: jid,\r\n        jobLevel: data.WorkType.JobLevel,\r\n        workTypeName: data.WorkType.Name,\r\n        jobItems: data.jobItems,\r\n        mainJobItems: data.jobItems,\r\n        finishedItems: data.finishedItems,\r\n        canClaimWholeJob: data.canClaimWholeJob,\r\n        totalPhyCalimgMinutes: data.totalPhyCalimgMinutes,\r\n        totalProgress: data.totalProgress,\r\n        page: 3,\r\n        loading: false,\r\n        worktypeId: wid,\r\n        LabelText: labelText,\r\n        JobTitle: data.JobTitle,\r\n      },\r\n      () => {\r\n        this.props.changeStep(5, labelText, this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n  /* #region Claim From PB */\r\n\r\n  /* #region  Login Methods */\r\n\r\n  goBackToStart = (pageId) => {\r\n    if (this.state.page === pageId)\r\n      this.setState({\r\n        ...this.state,\r\n        page: -1,\r\n      });\r\n  };\r\n  start = async () => {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        loading: true,\r\n      },\r\n      () => {\r\n        this.loadWorkersList();\r\n      }\r\n    );\r\n  };\r\n  loadWorkersList = async () => {\r\n    try {\r\n      var r = await Loginlogics.getListOfWorkersFromApi(\r\n        this.props.workerId,\r\n        this.props.apiRoute\r\n      );\r\n      const response = JSON.parse(r.data);\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          workersList: response,\r\n          mainWorkersList: response,\r\n          loading: false,\r\n          settings: this.props.settings,\r\n          LabelText: [],\r\n          page: 0,\r\n        },\r\n        () => {\r\n          this.props.changeStep(2, [], this.state.isAdminJob);\r\n          if (this.props.workerId !== 0) {\r\n            var worker = response.find((x) => x.OId == this.props.workerId);\r\n            if (worker && worker.IsLoggedIn) {\r\n              this.loggedInWorkerClick(worker);\r\n            }\r\n          }\r\n        }\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(\"Error in fetching Workers list \");\r\n    }\r\n  };\r\n\r\n  onCommentSave = async (text, login = true) => {\r\n    if (text)\r\n      if (login)\r\n        await this.saveLoginInAPI(\r\n          this.state.claimingOId,\r\n          text,\r\n          this.props.apiRoute\r\n        );\r\n      else\r\n        await this.saveLogoutAPI(\r\n          this.state.claimingOId,\r\n          text,\r\n          this.props.apiRoute\r\n        );\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        dialogOpen: false,\r\n      },\r\n      () => {\r\n        if (this.props.logout) <Redirect to=\"/ProductionBoard\" />;\r\n        else <Redirect to=\"/\" />;\r\n      }\r\n    );\r\n  };\r\n\r\n  loggedInWorkerClick = (worker) => {\r\n    const page = 1;\r\n    const labelText = [];\r\n    labelText.push(worker.Name);\r\n    var primaryWorktypeIds = worker.Skills.filter((x) => x.Primary).map(\r\n      (i) => i.WorkTypeId\r\n    );\r\n    var secondaryWorktypeIds = worker.Skills.filter((x) => x.Secondary).map(\r\n      (i) => i.WorkTypeId\r\n    );\r\n\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        LabelText: labelText,\r\n        claimingUser: worker.Name,\r\n        claimingOId: worker.OId,\r\n        claiminWorker: worker,\r\n        primaryWorktypeIds,\r\n        secondaryWorktypeIds,\r\n        IsSitWorkGroup: worker.Skills.find((x) => x.IsSitework && x.Primary),\r\n      },\r\n      () => {\r\n        if (this.props.fromPB) {\r\n          this.getPBJobItems(this.props.jobId, this.props.workTypeId);\r\n        } else {\r\n          this.props.changeStep(3, labelText, this.state.isAdminJob);\r\n          this.goToJobsPage(page, worker.OId);\r\n        }\r\n      }\r\n    );\r\n  };\r\n  handleLogin = (sid, isOnLeave, logout) => {\r\n    if (logout || this.props.logout) {\r\n      this.handleLogOut(sid);\r\n\r\n      return;\r\n    }\r\n    if (isOnLeave) {\r\n      this.setState({\r\n        ...this.state,\r\n        dialogOpen: true,\r\n        dialogHeader: \"Cannot Login\",\r\n        dialogText:\r\n          \"You are currenly on leave.Please, log in during your working hours\",\r\n        dialogSave: this.onCommentSave,\r\n        alert: true,\r\n      });\r\n      return false;\r\n    }\r\n    const id = parseInt(sid);\r\n    const workersList = this.state.workersList;\r\n    const worker = workersList.filter((x) => x.OId === id)[0];\r\n    this.props.setClaimingId(id);\r\n\r\n    if (worker.IsLoggedIn) {\r\n      this.loggedInWorkerClick(worker);\r\n    } else {\r\n      let comment = \"\";\r\n      if (\r\n        Loginlogics.checkWorkerLateLogin(\r\n          worker,\r\n          this.state.settings.TrackLateLogin,\r\n          this.state.settings.LateAllowance\r\n        )\r\n      ) {\r\n        this.setState({\r\n          ...this.state,\r\n          claimingOId: id,\r\n          claimingUser: worker.Name,\r\n          dialogOpen: true,\r\n          logoutClicked: false,\r\n          dialogHeader: \"Late Login\",\r\n          dialogText: \"Please, specify the reason to late log in.\",\r\n          dialogSave: this.onCommentSave,\r\n          alert: false,\r\n          LabelText: [worker.Name],\r\n        });\r\n      }\r\n      if (worker.LastDayNotLoggedOut) {\r\n        this.setState({\r\n          ...this.state,\r\n          claimingOId: id,\r\n          claimingUser: worker.Name,\r\n\r\n          logoutClicked: false,\r\n          dialogHeader: \"Missing logout\",\r\n          dialogText:\r\n            \" You did not logout yesterday please advise your manager\",\r\n\r\n          doSaving: true,\r\n          alert: true,\r\n          LabelText: [worker.Name],\r\n\r\n          dialogOpen: true,\r\n          dialogSave: this.onCommentSave,\r\n        });\r\n        this.saveLoginInAPI(id, comment, this.props.apiRoute);\r\n      } else {\r\n        this.saveLoginInAPI(id, comment, this.props.apiRoute);\r\n      }\r\n    }\r\n  };\r\n  saveLoginInAPI = async (id, comment) => {\r\n    const workersList = this.state.workersList;\r\n    const worker = workersList.filter((x) => x.OId === id)[0];\r\n    var labelText = [];\r\n    var r = await Loginlogics.saveLoginInAPI(id, comment, this.props.apiRoute);\r\n\r\n    if (!JSON.parse(r.data).Successful) {\r\n      alert(r.Message);\r\n      return;\r\n    }\r\n\r\n    worker.IsLoggedIn = true;\r\n    var inx = workersList.findIndex((x) => x.OId === id);\r\n\r\n    if (inx !== -1) {\r\n      workersList[inx] = worker;\r\n    }\r\n\r\n    labelText.push(worker.Name);\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        claimingOId: id,\r\n        claimingUser: worker.Name,\r\n        workersList,\r\n        LabelText: labelText,\r\n      },\r\n      () => {\r\n        if (this.props.fromPB) {\r\n          this.getPBJobItems(this.props.jobId, this.props.workTypeId);\r\n        } else {\r\n          this.props.changeStep(3, labelText, this.state.isAdminJob);\r\n        }\r\n      }\r\n    );\r\n  };\r\n  handleLogOut = async (id, comment) => {\r\n    const workersList = this.state.workersList;\r\n    const worker = workersList.filter((x) => x.OId === id)[0];\r\n    if (\r\n      Loginlogics.checkWorkerEarlyLeave(\r\n        worker,\r\n        this.state.settings.TrackEarlyLeave,\r\n        this.state.settings.EarlyLeaveAllowance\r\n      )\r\n    ) {\r\n      this.setState({\r\n        ...this.state,\r\n        claimingOId: id,\r\n        claimingUser: worker.Name,\r\n        dialogOpen: true,\r\n        logoutClicked: true,\r\n        dialogHeader: \"Early Leave\",\r\n        dialogText: \"Please, specify the reason to early leaving.\",\r\n        dialogSave: this.onCommentSave,\r\n        alert: false,\r\n        LabelText: [worker.Name],\r\n      });\r\n    } else {\r\n      var response = await this.saveLogoutAPI(id, comment, this.props.apiRoute);\r\n      if (this.props.logout)\r\n        <Redirect to={`${this.props.apiRoute}ProductionBoard`} />;\r\n      else {\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            page: -1,\r\n          },\r\n          () => {\r\n            <Redirect to={`${this.props.apiRoute}claim`} />;\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleJobLoaded = (newJobs) => {\r\n    var stateJobs = this.state.jobs;\r\n    var mainStateJobs = this.state.mainJobs;\r\n    stateJobs.push(...newJobs);\r\n    //   mainStateJobs.push(...newJobs);\r\n\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        jobs: stateJobs,\r\n        mainJobs: mainStateJobs,\r\n      },\r\n      () => {\r\n        return true;\r\n      }\r\n    );\r\n  };\r\n  saveLogoutAPI = async (id, comment) => {\r\n    var r = await Loginlogics.saveLogoutAPI(id, comment, this.props.apiRoute);\r\n\r\n    var obj = JSON.parse(r.data);\r\n    if (!obj.Successful) {\r\n      alert(obj.Message);\r\n      return false;\r\n    }\r\n\r\n    const workersList = this.setWorkerLOgout(id);\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        page: 0,\r\n        workersList,\r\n        dialogOpen: false,\r\n      },\r\n      () => {\r\n        this.props.changeStep(2, [], this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n  setWorkerLOgout = (id) => {\r\n    const workersList = this.state.workersList;\r\n    const worker = workersList.filter((x) => x.OId === id)[0];\r\n    worker.IsLoggedIn = false;\r\n    var inx = workersList.findIndex((x) => x.OId === id);\r\n    if (inx !== -1) {\r\n      workersList[inx] = worker;\r\n    }\r\n    return workersList;\r\n  };\r\n  searchNames = (event) => {\r\n    this.setState({\r\n      ...this.state,\r\n      workersList: Loginlogics.searchNames(event, this.state.mainWorkersList),\r\n    });\r\n  };\r\n  /* #endregion */\r\n\r\n  /* #region  WorkType */\r\n\r\n  clearSearchWorkTypes = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      workTypes: this.state.mainWorkTypes,\r\n    });\r\n  };\r\n  handleWorkTypeClick = async (worktypeId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true,\r\n    });\r\n    const workType = this.state.mainWorkTypes.find((x) => x.OId == worktypeId);\r\n    var labelText = this.state.LabelText;\r\n    var r = await ClaimLogic.getJobItemsFromApi(\r\n      this.state.jobId,\r\n      worktypeId,\r\n      this.state.claimingOId,\r\n      this.props.apiRoute\r\n    );\r\n    var data = JSON.parse(r.data);\r\n    labelText.push(workType.Name);\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        jobLevel: workType.JobLevel,\r\n        jobItems: data.jobItems,\r\n        mainJobItems: data.jobItems,\r\n        finishedItems: data.finishedItems,\r\n        canClaimWholeJob: data.canClaimWholeJob,\r\n        totalPhyCalimgMinutes: data.totalPhyCalimgMinutes,\r\n        totalProgress: data.totalProgress,\r\n        page: 3,\r\n        loading: false,\r\n        worktypeId: worktypeId,\r\n        LabelText: labelText,\r\n        workTypeName: workType.Name,\r\n      },\r\n      () => {\r\n        this.props.changeStep(5, labelText, this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n\r\n  /* #endregion */\r\n\r\n  /*#region Job*/\r\n\r\n  searchJobs = (event) => {\r\n    var txt = event.target.value;\r\n    var jobs =\r\n      event.target.value.length > 0\r\n        ? this.state.mainJobs.filter(\r\n            (t) =>\r\n              t.Title.toLowerCase().includes(txt.toLowerCase()) ||\r\n              t.Code.includes(txt)\r\n          )\r\n        : this.state.mainJobs;\r\n\r\n    var adminJobs =\r\n      event.target.value.length > 0\r\n        ? this.state.mainAdminJobs.filter((t) =>\r\n            t.Name.toLowerCase().includes(txt.toLowerCase())\r\n          )\r\n        : this.state.mainAdminJobs;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      jobs,\r\n      adminJobs,\r\n    });\r\n  };\r\n\r\n  handleFullJob = () => {\r\n    var labelText = this.state.LabelText;\r\n    labelText.push(\"Full Job\");\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        page: 4,\r\n        isFullJob: true,\r\n        LabelText: labelText,\r\n      },\r\n      () => {\r\n        this.props.changeStep(6, labelText, this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n\r\n  goToJobsPage = async (page, claimingOId) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true,\r\n    });\r\n\r\n    var r = this.state.IsSitWorkGroup\r\n      ? await ClaimLogic.getJobsOfWorkerFromApi(\r\n          this.props.apiRoute,\r\n          claimingOId,\r\n          3,\r\n          true\r\n        )\r\n      : await ClaimLogic.getJobsOfWorkerFromApi(\r\n          this.props.apiRoute,\r\n          claimingOId,\r\n          3\r\n        );\r\n    const values = JSON.parse(r.data);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      jobs: values.Item1,\r\n      mainJobs: values.Item1,\r\n      adminJobs: values.Item2,\r\n      mainAdminJobs: values.Item2,\r\n      loading: false,\r\n      claimingOId,\r\n      page,\r\n    });\r\n  };\r\n  handleBack = (pageId) => {\r\n    var labelText = this.state.LabelText;\r\n    switch (pageId) {\r\n      case 0:\r\n        labelText = [];\r\n        break;\r\n      case 1:\r\n        labelText = labelText.slice(0, 1);\r\n        break;\r\n      case 2:\r\n        labelText = labelText.slice(0, 2);\r\n        break;\r\n    }\r\n    //this.props.history.push(\"/productionBoard\");\r\n    if (pageId == 2 && this.props.fromPB) {\r\n      pageId = 0;\r\n      labelText = [];\r\n    }\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        page: pageId,\r\n        LabelText: labelText,\r\n        jobs: this.state.mainJobs,\r\n        jobItems: this.state.mainJobItems,\r\n        adminJobs: this.state.mainAdminJobs,\r\n        workersList: this.state.mainWorkersList,\r\n        workTypes: this.state.mainWorkTypes,\r\n      },\r\n      () => {\r\n        this.props.changeStep(\r\n          pageId + 2,\r\n          this.state.LabelText,\r\n          this.state.isAdminJob\r\n        );\r\n      }\r\n    );\r\n  };\r\n  handleJobClick = (jobId, isAdmin = false) => {\r\n    if (isAdmin) {\r\n      const selectedAdminJob = this.state.adminJobs.find(\r\n        (x) => x.OId === jobId\r\n      );\r\n      var labelText = this.state.LabelText;\r\n\r\n      labelText.push(selectedAdminJob.Name);\r\n      labelText[2] = \"\";\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          adminWorkType: selectedAdminJob,\r\n          page: 4,\r\n          isAdminJob: isAdmin,\r\n          LabelText: labelText,\r\n        },\r\n        () => {\r\n          this.props.changeStep(6, labelText, this.state.isAdminJob);\r\n        }\r\n      );\r\n    } else {\r\n      const jobs = this.state.jobs;\r\n      const selectedJob = jobs.find((x) => x.OId === jobId);\r\n      var labelText = this.state.LabelText;\r\n      labelText.push(selectedJob.Code);\r\n\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          jobId,\r\n          // workTypes: selectedJob.WorkTypes.filter((x) => x.HasJobItems),\r\n          // mainWorkTypes: selectedJob.WorkTypes.filter((x) => x.HasJobItems),\r\n          workTypes: selectedJob.WorkTypes,\r\n          mainWorkTypes: selectedJob.WorkTypes,\r\n\r\n          selectedJobCode: selectedJob.Code,\r\n          page: 2,\r\n          isAdminJob: false,\r\n          LabelText: labelText,\r\n          JobTitle: selectedJob.Code,\r\n        },\r\n        () => {\r\n          this.props.changeStep(4, labelText, this.state.isAdminJob);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  /* #endregion */\r\n\r\n  /*#region jobItem*/\r\n\r\n  handleSaveClaim = (\r\n    changedClaimingItems,\r\n    groupPercent = 0,\r\n    jobLevel = false\r\n  ) => {\r\n    // if (fullJob) {\r\n    //   this.setState({\r\n    //     ...this.state,\r\n    //     claimingFullJob: true,\r\n    //     page: 4,\r\n    //   });\r\n    // } else {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        changedClaimingItems,\r\n        groupPercent,\r\n        page: 4,\r\n      },\r\n      () => {\r\n        this.props.changeStep(5, this.state.LabelText, this.state.isAdminJob);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSubmitClaim = async (comment, isAdmin = false, logout = false) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true,\r\n    });\r\n\r\n    if (!isAdmin) {\r\n      if (this.state.isFullJob) {\r\n        var e = await ClaimLogic.submitFullJobClaimInAPI(\r\n          this.state.claimingOId,\r\n          this.state.jobId,\r\n          comment,\r\n          this.props.apiRoute\r\n        );\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            loading: false,\r\n            page: this.props.role == \"a\" || this.props.public ? -1 : 1,\r\n            LabelText: [],\r\n          },\r\n          () => {\r\n            if (this.props.role == \"a\" || this.props.public)\r\n              this.props.changeStep(1, [], this.state.isAdminJob);\r\n            else this.props.changeStep(2, [], this.state.isAdminJob);\r\n          }\r\n        );\r\n      } else {\r\n        var jobItems =\r\n          this.state.groupPercent > 0\r\n            ? this.state.jobItems\r\n            : this.state.jobItems.filter(\r\n                (x) => x.Progress100 !== x.Main_Progress100\r\n              );\r\n        var e = await ClaimLogic.submitClaimInAPI(\r\n          this.state.claimingOId,\r\n          this.state.jobId,\r\n          jobItems,\r\n          this.state.groupPercent,\r\n          comment,\r\n          logout,\r\n          this.props.apiRoute\r\n        );\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            loading: false,\r\n            page: -1,\r\n            LabelText: [],\r\n            workersList: logout\r\n              ? this.setWorkerLOgout(this.state.claimingOId)\r\n              : this.state.workersList,\r\n          },\r\n          () => {\r\n            if (this.props.fromPB)\r\n              this.props.history.push(`${this.props.mainRoute}productionBoard`);\r\n            else {\r\n              if (this.props.role == \"a\" || this.props.public)\r\n                this.props.changeStep(1, [], this.state.isAdminJob);\r\n              else this.props.changeStep(2, [], this.state.isAdminJob);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      var e = await ClaimLogic.submitAdminJobClaimInAPI(\r\n        this.state.claimingOId,\r\n        this.state.adminWorkType.OId,\r\n        comment,\r\n        logout,\r\n        this.props.apiRoute\r\n      );\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          loading: false,\r\n          page: -1,\r\n          LabelText: [],\r\n          workersList: logout\r\n            ? this.setWorkerLOgout(this.state.claimingOId)\r\n            : this.state.workersList,\r\n        },\r\n        () => {\r\n          if (this.props.role == \"a\" || this.props.public)\r\n            this.props.changeStep(1, [], this.state.isAdminJob);\r\n          else this.props.changeStep(2, [], this.state.isAdminJob);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  handleFullSubmitClaim = (comment, isAdmin = false) => {};\r\n  /* #endregion */\r\n\r\n  render() {\r\n    const renderConditionaly = () => {\r\n      if (this.state.loading) {\r\n        return <Loading mainRoute={this.props.mainRoute} />;\r\n      }\r\n      switch (this.state.page) {\r\n        case -1: {\r\n          return (\r\n            <Start mainRoute={this.props.mainRoute} start={this.start}></Start>\r\n          );\r\n        }\r\n        case 0: {\r\n          return (\r\n            <Login\r\n              items={this.state.workersList}\r\n              searchNames={this.searchNames}\r\n              handleLogin={this.handleLogin}\r\n              settings={this.state.settings}\r\n              logoutChecked={this.state.logoutChecked}\r\n              loggingOut={this.props.logout}\r\n              fromPB={this.props.fromPB}\r\n              apiRoute={this.props.apiRoute}\r\n              mainRoute={this.props.mainRoute}\r\n              goBackToStart={this.goBackToStart}\r\n            />\r\n          );\r\n        }\r\n        case 1: {\r\n          return (\r\n            <Jobs\r\n              claimingOId={this.state.claimingOId}\r\n              claimingName={this.state.claimingUser}\r\n              searchJobs={this.searchJobs}\r\n              jobs={this.state.mainJobs}\r\n              adminJobs={this.state.adminJobs}\r\n              primaryJobs={this.state.primaryJobs}\r\n              secondaryJobs={this.state.secondaryJobs}\r\n              prejobs={this.state.prejobs}\r\n              postjobs={this.state.postjobs}\r\n              settings={this.state.settings}\r\n              handleJobClick={this.handleJobClick}\r\n              handleBack={this.handleBack}\r\n              handleLogOut={this.handleLogOut}\r\n              handleJobLoaded={this.handleJobLoaded}\r\n              menuIsOpen={this.props.menuSize == 240}\r\n              IsSitWorkGroup={this.state.IsSitWorkGroup}\r\n              apiRoute={this.props.apiRoute}\r\n              divideJobs={this.state.settings.DividJobs}\r\n              primaryWorktypeIds={this.state.primaryWorktypeIds}\r\n            />\r\n          );\r\n        }\r\n        case 2: {\r\n          return (\r\n            <WorkTypes\r\n              claimingOId={this.state.claimingOId}\r\n              settings={this.props.settings}\r\n              workTypes={this.state.workTypes}\r\n              handleBack={this.handleBack}\r\n              handleWorkTypeClick={this.handleWorkTypeClick}\r\n              handleFullJob={this.handleFullJob}\r\n              jobCode={this.state.selectedJobCode}\r\n              claimingName={this.state.claimingUser}\r\n              menuIsOpen={this.props.menuSize == 240}\r\n              primaryWorktypeIds={this.state.primaryWorktypeIds}\r\n              secondaryWorktypeIds={this.state.secondaryWorktypeIds}\r\n              apiRoute={this.props.apiRoute}\r\n            />\r\n          );\r\n        }\r\n\r\n        case 3: {\r\n          return (\r\n            <JobItems\r\n              claimingOId={this.state.claimingOId}\r\n              searchJobs={this.searchJobs}\r\n              items={this.state.mainJobItems}\r\n              finishedItems={this.state.finishedItems}\r\n              totalProgress={this.state.totalProgress}\r\n              handleBack={this.handleBack}\r\n              handleSave={this.handleSaveClaim}\r\n              settings={this.props.settings}\r\n              canClaimWholeJob={this.state.canClaimWholeJob}\r\n              jobLevel={this.state.jobLevel}\r\n              claimingName={this.state.claimingUser}\r\n              menuIsOpen={this.props.menuSize == 240}\r\n              jobName={\r\n                this.state.adminWorkType\r\n                  ? this.state.adminWorkType.Name\r\n                  : this.state.JobTitle\r\n              }\r\n              apiRoute={this.props.apiRoute}\r\n            />\r\n          );\r\n        }\r\n        case 4: {\r\n          return (\r\n            <Summary\r\n              claimingOId={this.state.claimingOId}\r\n              totalPhyCalimgMinutes={this.state.totalPhyCalimgMinutes}\r\n              claimingName={\r\n                this.state.mainWorkersList.find(\r\n                  (x) => x.OId === this.state.claimingOId\r\n                ).Name\r\n              }\r\n              worktypeName={\r\n                this.state.isFullJob\r\n                  ? \"Full Job\"\r\n                  : this.state.adminWorkType\r\n                  ? \"Admin Work\"\r\n                  : this.state.workTypeName\r\n              }\r\n              jobName={\r\n                this.state.adminWorkType\r\n                  ? this.state.adminWorkType.Name\r\n                  : this.state.JobTitle\r\n              }\r\n              claimingItems={this.state.changedClaimingItems}\r\n              isAdminJob={this.state.isAdminJob}\r\n              handleBack={this.handleBack}\r\n              isFullJob={this.state.isFullJob}\r\n              handleSubmit={this.handleSubmitClaim}\r\n              settings={this.props.settings}\r\n              groupPercent={this.state.groupPercent}\r\n              mainPercent={this.state.totalProgress}\r\n              jobLevel={\r\n                this.state.isAdminJob\r\n                  ? true\r\n                  : this.props.fromPB\r\n                  ? this.props.jobLevel\r\n                  : this.state.mainWorkTypes.find(\r\n                      (x) => x.OId == this.state.worktypeId\r\n                    ).JobLevel\r\n              }\r\n              apiRoute={this.props.apiRoute}\r\n            />\r\n          );\r\n        }\r\n        default:\r\n          return <div></div>;\r\n      }\r\n    };\r\n    return (\r\n      <Fragment>\r\n        <FormDialog\r\n          logout={this.state.logoutClicked}\r\n          header={this.state.dialogHeader}\r\n          text={this.state.dialogText}\r\n          placeholer=\"Please describe\"\r\n          open={this.state.dialogOpen}\r\n          onCommentSave={this.state.dialogSave}\r\n          alert={this.state.alert}\r\n          doSaving={this.state.doSaving}\r\n        />\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#ebedf1\",\r\n            paddingRight: \"10px\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          {renderConditionaly()}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default CalimContainer;\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://www.aplnz.co.nz/\">\r\n        APL\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const emailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const passwordChange = (e) => {\r\n    if (e.keyCode === 13) {\r\n      handleSignInClicked();\r\n    }\r\n    setPassword(e.target.value);\r\n  };\r\n  const handleSignInClicked = () => {\r\n    props.handleSignIn(email, password);\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/APL.png\"}\r\n          alt=\"APL\"\r\n          style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}\r\n        />\r\n        <Typography component=\"h4\" variant=\"h4\">\r\n          Sign in\r\n        </Typography>\r\n        <div className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Username\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={(e) => emailChange(e)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onKeyUp={(e) => passwordChange(e)}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> \\\\*/}\r\n          <Button\r\n            // type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            type=\"text\"\r\n            onClick={handleSignInClicked}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </div>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ESPSelect from \"../../components/controls/ESPSelect\";\r\nimport ESPTextField from \"../../components/controls/ESPTextField\";\r\nimport ESPCheckbox from \"../../components/controls/ESPCheckbox\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport {\r\n  Avatar,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TableCell,\r\n  TableContainer,\r\n  TableBody,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Helper from \"../../components/logics/Helper\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Fragment } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass UserManagement extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loginUsers: [],\r\n      model: {},\r\n      changes: [],\r\n      changePassword: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.usermanagementInitData();\r\n  }\r\n  usermanagementInitData = () => {\r\n    Helper.apiPost(`${this.props.apiRoute}Account/InitClaimUserManagement`)\r\n      .then((r) => {\r\n        var data = r.data;\r\n        this.setState({\r\n          loginUsers: data.Item1,\r\n\r\n          model: {\r\n            Email: \"\",\r\n            Password: \"\",\r\n            EspUsers: data.Item2,\r\n            IsAdmin: false,\r\n            IsPublic: false,\r\n            IsDisabled: false,\r\n            EspUserId: \"\",\r\n            LoginId: \"\",\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Error in getting user management Data\");\r\n      });\r\n  };\r\n  onSave = () => {\r\n    if (!this.state.changePassword) {\r\n      Helper.apiPost(`${this.props.apiRoute}Account/Register`, {\r\n        Email: this.state.model.Email,\r\n        Password: this.state.model.Password,\r\n        ConfirmPassword: this.state.model.Password,\r\n        IsAdmin: this.state.model.IsAdmin,\r\n        IsPublic: this.state.model.IsPublic,\r\n        UserId: this.state.model.EspUserId,\r\n      })\r\n        .then((r) => {\r\n          alert(\"Successfuly added\");\r\n          //window.location.reload(false);\r\n          <Redirect to=\"/\" />;\r\n        })\r\n        .catch((err) => {\r\n          if (err.response) alert(\"Error in adding user\" + err.response.data);\r\n          else alert(\"Error in adding user\" + err);\r\n          window.location.href = \".\";\r\n        });\r\n    } else {\r\n      Helper.apiPost(`${this.props.apiRoute}Account/SetPassword`, {\r\n        Id: this.state.model.LoginId,\r\n        NewPassword: this.state.model.Password,\r\n        ConfirmPassword: this.state.model.Password,\r\n      })\r\n        .then((r) => {\r\n          alert(\"Successfuly Save\");\r\n          const model = this.state.model;\r\n\r\n          model.Email = \"\";\r\n          model.Password = \"\";\r\n          model.IsAdmin = false;\r\n          model.IsPublic = false;\r\n          model.IsDisabled = false;\r\n          model.EspUserId = \"\";\r\n          model.LoginId = \"\";\r\n          model.EspUsers.map((e) => {\r\n            e.Selected = false;\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            model,\r\n            changePassword: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          if (err.response)\r\n            alert(\"Error in saving new password\" + err.response.data);\r\n          else alert(\"Error in saving new password\" + err);\r\n        });\r\n    }\r\n  };\r\n  onChangePassword = (id) => {\r\n    const user = this.state.loginUsers.find((x) => x.Id == id);\r\n    const EspUsers = this.state.model.EspUsers;\r\n    if (!user.IsPublic) {\r\n      const espUser = EspUsers.find((x) => x.Value == user.WorkerId);\r\n      const espInx = EspUsers.indexOf(espUser);\r\n      espUser.Selected = true;\r\n\r\n      EspUsers.splice(espInx, 1, espUser);\r\n    }\r\n    const model = {\r\n      Email: user.Email,\r\n      IsAdmin: user.IsAdmin,\r\n      IsPublic: user.IsPublic,\r\n      EspUserId: user.WorkerId,\r\n      LoginId: id,\r\n      EspUsers,\r\n    };\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        changePassword: true,\r\n        model,\r\n      },\r\n      () => {\r\n        console.log(user.Email + \" \" + user.Name);\r\n      }\r\n    );\r\n  };\r\n\r\n  onPropertyChange = (event) => {\r\n    var model = this.state.model;\r\n\r\n    let value = \"\";\r\n    if (event.target.type !== undefined && event.target.type === \"checkbox\")\r\n      value = event.target.checked;\r\n    else value = event.target.value;\r\n\r\n    model[event.target.name] = value;\r\n    this.setState({\r\n      ...this.state,\r\n      model,\r\n    });\r\n  };\r\n  onSelectChange = (event) => {\r\n    var model = this.state.model;\r\n    var newSelectedId = event.target.value;\r\n    let newValues = [];\r\n    model[event.target.name].map((item) => {\r\n      if (item.Value === newSelectedId)\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Selected: true,\r\n        });\r\n      else\r\n        newValues.push({\r\n          Value: item.Value,\r\n          Text: item.Text,\r\n          Selected: false,\r\n        });\r\n    });\r\n\r\n    model[event.target.name] = newValues;\r\n    model[\"EspUserId\"] = newSelectedId;\r\n    this.setState({\r\n      ...this.state,\r\n      model,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <CardHeader\r\n            title=\"User Management\"\r\n            subheader=\"\"\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" style={{ backgroundColor: \"blue\" }}>\r\n                {\" \"}\r\n                U{\" \"}\r\n              </Avatar>\r\n            }\r\n          />\r\n          <CardContent>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={4} xs={12}>\r\n                <ESPTextField\r\n                  name=\"Email\"\r\n                  label=\"Email\"\r\n                  helptext=\"\"\r\n                  type=\"email\"\r\n                  onPropertyChange={this.onPropertyChange}\r\n                  value={this.state.model.Email}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={12}>\r\n                <ESPTextField\r\n                  name=\"Password\"\r\n                  label=\"Password\"\r\n                  helptext=\"\"\r\n                  type=\"password\"\r\n                  onPropertyChange={this.onPropertyChange}\r\n                  value={this.state.model.Password}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={12}>\r\n                <ESPSelect\r\n                  name=\"EspUsers\"\r\n                  label=\"User Id in ESP\"\r\n                  helptext=\"\"\r\n                  items={this.state.model.EspUsers}\r\n                  onPropertyChange={this.onSelectChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={6}>\r\n                <ESPCheckbox\r\n                  name=\"IsAdmin\"\r\n                  label=\"Is admin user\"\r\n                  checked={this.state.model.IsAdmin}\r\n                  onPropertyChange={this.onPropertyChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={6}>\r\n                <ESPCheckbox\r\n                  name=\"IsPublic\"\r\n                  label=\"Is Public User\"\r\n                  checked={this.state.model.IsPublic}\r\n                  onPropertyChange={this.onPropertyChange}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} xs={12} mx=\"auto\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  // className={classes.saveBtn}\r\n                  size=\"large\"\r\n                  onClick={this.onSave}\r\n                  startIcon={<SaveIcon />}\r\n                  disabled={\r\n                    !(\r\n                      this.state.model.Email &&\r\n                      this.state.model.Password &&\r\n                      (this.state.model.EspUserId || this.state.model.IsPublic)\r\n                    )\r\n                  }\r\n                >\r\n                  {this.state.changePassword ? \"Save Password\" : \"Add User\"}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item lg={12}>\r\n                <hr />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Hidden only={[\"xs\"]}>\r\n                <Grid item lg={4} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>Email</h4>\r\n                </Grid>\r\n                <Grid item lg={4} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>ESP User</h4>\r\n                </Grid>\r\n                <Grid item lg={1} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>Admin</h4>\r\n                </Grid>\r\n                <Grid item lg={1} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>Public User</h4>\r\n                </Grid>\r\n                <Grid item lg={2} xs={12} style={{ backgroundColor: \"#eee\" }}>\r\n                  <h4>Change Password</h4>\r\n                </Grid>\r\n              </Hidden>\r\n\r\n              <Grid item lg={12} xs={12}>\r\n                <hr />\r\n              </Grid>\r\n              {this.state.loginUsers.map((row) => (\r\n                <Fragment>\r\n                  <Grid item lg={4} xs={12}>\r\n                    <Hidden only={[\"sm\", \"lg\", \"xl\", \"md\"]}>Email: </Hidden>\r\n                    {row.Email}\r\n                  </Grid>\r\n                  <Grid item lg={4} xs={12}>\r\n                    <Hidden only={[\"sm\", \"lg\", \"xl\", \"md\"]}>Name: </Hidden>\r\n                    {row.Name}\r\n                  </Grid>\r\n                  <Grid item lg={1} xs={12}>\r\n                    <Hidden only={[\"sm\", \"lg\", \"xl\", \"md\"]}>Admin:</Hidden>\r\n                    {row.IsAdmin ? <CheckIcon /> : <CloseIcon />}\r\n                  </Grid>\r\n                  <Grid item lg={1} xs={12}>\r\n                    <Hidden only={[\"sm\", \"lg\", \"xl\", \"md\"]}>Public:</Hidden>\r\n                    {row.IsPublic ? <CheckIcon /> : <CloseIcon />}\r\n                  </Grid>\r\n                  <Grid item lg={2} xs={12}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      // className={classes.saveBtn}\r\n                      size=\"medium\"\r\n                      onClick={() => this.onChangePassword(row.Id)}\r\n                      startIcon={<SaveIcon />}\r\n                    >\r\n                      Change Password\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid lg={12} xs={12}>\r\n                    <hr />\r\n                  </Grid>\r\n                </Fragment>\r\n              ))}\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default UserManagement;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport DrawerContainer from \"./components/DrawerContainer\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Performance from \"./pages/Performance\";\r\nimport Settings from \"./pages/AdminSettings/AdminSettingsContainer\";\r\nimport ProductionBoard from \"./pages/ProductionBoard/ProductionBoardContainer\";\r\nimport ClaimContainer from \"./pages/Claim/ClaimContainer\";\r\nimport Helper from \"./components/logics/Helper\";\r\nimport SignIn from \"./pages/SignIn\";\r\nimport UserManagement from \"./pages/UserManagement\";\r\nimport Loading from \"../src/pages/loading\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      step: 0,\r\n      page: -1,\r\n      fromPB: false,\r\n      logout: false,\r\n      settings: null,\r\n      texts: [],\r\n      isAdmin: false,\r\n      loggedIn: false,\r\n      isPublic: false,\r\n      loading: true,\r\n      claimingId: 0,\r\n      workerName: \"\",\r\n      joblevel: false,\r\n      jobCode: \"\",\r\n      claims: {\r\n        user_t: \"\",\r\n        a: false,\r\n        p: false,\r\n        w: 0,\r\n        pa: 0,\r\n      },\r\n      menuSize: 240,\r\n      mainRoute: \"\",\r\n      apiRoute: \"\",\r\n      localSettings: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"data.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState(\r\n          {\r\n            ...this.state,\r\n            localSettings: json,\r\n            mainRoute: json.route,\r\n            apiRoute: json.apiRoute,\r\n          },\r\n          () => {\r\n            if (new Cookies().get(\"_claim\")) this.getServerSettings();\r\n          }\r\n        );\r\n      });\r\n  }\r\n  setSettings = (settings) => {\r\n    this.setState({\r\n      ...this.state,\r\n      loggedIn: true,\r\n      settings: settings,\r\n    });\r\n  };\r\n  getServerSettings = () => {\r\n    try {\r\n      var url = `${this.state.apiRoute}AdminSettings/GetInfo`;\r\n      var claims = new Cookies().get(\"_claim\");\r\n      Helper.apiPost(url, claims, \"\")\r\n        .then((response) => {\r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              loggedIn: true,\r\n              settings: JSON.parse(response.data),\r\n              claims,\r\n            },\r\n            () => {\r\n              this.setState({\r\n                ...this.state,\r\n                loading: false,\r\n              });\r\n            }\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          if (err.response)\r\n            alert(\r\n              `Error in calling ESP (Admin Settings) API- ${err.response.data}`\r\n            );\r\n          else alert(`Error in calling ESP (Admin Settings) API- ${err}`);\r\n        });\r\n    } catch (err) {\r\n      alert(`Error in calling ESP (Admin Settings) API- ${err}`);\r\n      window.location.href = \".\";\r\n    }\r\n  };\r\n  setClaimingId = (id) => {\r\n    this.setState({\r\n      ...this.state,\r\n      claimingId: id,\r\n    });\r\n  };\r\n\r\n  changeStep = (j, texts, isAdmin = false) => {\r\n    this.setState({\r\n      ...this.state,\r\n      step: j,\r\n      texts,\r\n      isAdmin,\r\n    });\r\n  };\r\n  changeMenuSize = () => {\r\n    if (this.state.menuSize === 0)\r\n      this.setState({\r\n        ...this.state,\r\n        menuSize: 240,\r\n      });\r\n    else\r\n      this.setState({\r\n        ...this.state,\r\n        menuSize: 0,\r\n      });\r\n  };\r\n  handleSignIn = (email, password) => {\r\n    var response = Helper.setAsyncApiToken(\r\n      email,\r\n      password,\r\n      this.state.apiRoute\r\n    );\r\n    response\r\n      .then((r) => {\r\n        if (r && r.data && r.data.access_token) {\r\n          const model = {\r\n            user_t: r.data.access_token,\r\n            a: r.data.a,\r\n            p: r.data.p,\r\n            w: r.data.w,\r\n            pa: r.data.pa,\r\n          };\r\n          new Cookies().set(\"_claim\", JSON.stringify(model), { path: \"/\" });\r\n\r\n          this.getServerSettings();\r\n        }\r\n      })\r\n      .catch(function (response) {\r\n        if (response && response.response && response.response.status === 400)\r\n          alert(\"Username and password are not match\");\r\n        else alert(\"Error in get security code\" + response);\r\n        return null;\r\n      });\r\n  };\r\n  claimOnPB = (jid, wid, jl, jobCode) => {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        step: 1,\r\n        page: 0,\r\n        pbWorkTypeId: wid,\r\n        pbJobId: jid,\r\n        fromPB: true,\r\n        joblevel: jl,\r\n        jobCode,\r\n      },\r\n      () => {\r\n        this.props.history.push(`${this.state.mainRoute}claimpb`);\r\n      }\r\n    );\r\n  };\r\n  logoutFromPB = () => {\r\n    this.setState(\r\n      {\r\n        ...this.state,\r\n        step: 1,\r\n        page: -1,\r\n        fromPB: false,\r\n        logout: true,\r\n      },\r\n      () => {\r\n        this.props.history.push(`${this.state.mainRoute}claim`);\r\n      }\r\n    );\r\n  };\r\n  FadingRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n      <Route {...rest} render={(routeProps) => <Component {...routeProps} />} />\r\n    );\r\n  };\r\n  render() {\r\n    const role = this.state.claims.a ? \"a\" : \"u\";\r\n    const isPublic = this.state.claims.p;\r\n    const w = this.state.claims.w;\r\n    return (\r\n      <div style={{ backgroundColor: \"#ebedf1\" }}>\r\n        {this.state.loading && this.state.loggedIn && <Loading />}\r\n        {!this.state.loggedIn && <SignIn handleSignIn={this.handleSignIn} />}\r\n        {this.state.loggedIn && role === \"u\" && (\r\n          <div style={{ display: \"flex\" }}>\r\n            <DrawerContainer\r\n              step={this.state.step}\r\n              texts={this.state.texts}\r\n              isAdmin={this.state.isAdmin}\r\n              isSystemAdmin={false}\r\n              ShowProductionBoard={this.state.settings.PBShowProductionBoard}\r\n              menuSize={this.state.menuSize}\r\n              changeMenuSize={this.changeMenuSize}\r\n            />\r\n            <main\r\n              style={{\r\n                flexGrow: 1,\r\n                paddingLeft: \"30px\",\r\n                paddingRight: \"10px\",\r\n                paddingTop: \"80px\",\r\n              }}\r\n            >\r\n              {/* <FadingRoute path=`` component={Something} /> */}\r\n\r\n              {/* <Route\r\n                path={`${this.state.mainRoute}`}\r\n                render={(props) => (\r\n                  <ClaimContainer\r\n                    public={isPublic}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    settings={this.state.settings}\r\n                    changeStep={this.changeStep}\r\n                    workerId={w}\r\n                    fromPB={this.state.fromPB}\r\n                    logout={this.state.logout}\r\n                    jobId={this.state.pbJobId}\r\n                    workTypeId={this.state.pbWorkTypeId}\r\n                    page={this.state.page}\r\n                    setClaimingId={this.setClaimingId}\r\n                    menuSize={this.state.menuSize}\r\n                    jobLevel={this.state.joblevel}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              /> */}\r\n              <Route\r\n                path={`${this.state.mainRoute}claim`}\r\n                render={(props) => (\r\n                  <ClaimContainer\r\n                    public={isPublic}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    fromPB={false}\r\n                    logout={this.state.logout}\r\n                    jobId={this.state.pbJobId}\r\n                    workTypeId={this.state.pbWorkTypeId}\r\n                    changeStep={this.changeStep}\r\n                    workerId={w}\r\n                    menuSize={this.state.menuSize}\r\n                    page={this.state.page}\r\n                    jobLevel={this.state.joblevel}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}claimpb`}\r\n                render={(props) => (\r\n                  <ClaimContainer\r\n                    public={isPublic}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    fromPB={this.state.fromPB}\r\n                    logout={this.state.logout}\r\n                    jobId={this.state.pbJobId}\r\n                    workTypeId={this.state.pbWorkTypeId}\r\n                    jobLevel={this.state.joblevel}\r\n                    changeStep={this.changeStep}\r\n                    workerId={w}\r\n                    menuSize={this.state.menuSize}\r\n                    page={this.state.page}\r\n                    jobCode={this.state.jobCode}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}productionBoard`}\r\n                render={(props) => (\r\n                  <ProductionBoard\r\n                    settings={this.state.settings}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    claimingId={this.state.claimingId}\r\n                    claimOnPB={this.claimOnPB}\r\n                    logoutFromPB={this.logoutFromPB}\r\n                  />\r\n                )}\r\n              />\r\n            </main>\r\n          </div>\r\n        )}\r\n        {this.state.loggedIn && role === \"a\" && (\r\n          <div style={{ display: \"flex\" }}>\r\n            <DrawerContainer\r\n              step={this.state.step}\r\n              texts={this.state.texts}\r\n              isAdmin={this.state.isAdmin}\r\n              isSystemAdmin={true}\r\n              menuSize={this.state.menuSize}\r\n              changeMenuSize={this.changeMenuSize}\r\n            />\r\n            <main\r\n              style={{\r\n                flexGrow: 1,\r\n                paddingLeft: \"30px\",\r\n                paddingRight: \"0px\",\r\n                paddingTop: \"80px\",\r\n                marginLeft: this.state.menuSize === 0 ? \"-100px\" : \"0px\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  drawerPaper: { width: this.state.menuSize },\r\n                }}\r\n              />\r\n              {/* <Route path={`${this.state.mainRoute}`} component={Welcome} /> */}\r\n              <Route\r\n                path={`${this.state.mainRoute}claim`}\r\n                render={(props) => (\r\n                  <ClaimContainer\r\n                    public={false}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    changeStep={this.changeStep}\r\n                    isUser={false}\r\n                    fromPB={false}\r\n                    logout={this.state.logout}\r\n                    jobId={this.state.pbJobId}\r\n                    workTypeId={this.state.pbWorkTypeId}\r\n                    page={this.state.page}\r\n                    workerId=\"0\"\r\n                    menuSize={this.state.menuSize}\r\n                    jobLevel={this.state.joblevel}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}claimpb`}\r\n                render={(props) => (\r\n                  <ClaimContainer\r\n                    public={false}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    changeStep={this.changeStep}\r\n                    isUser={false}\r\n                    fromPB={this.state.fromPB}\r\n                    logout={this.state.logout}\r\n                    jobId={this.state.pbJobId}\r\n                    workTypeId={this.state.pbWorkTypeId}\r\n                    jobLevel={this.state.joblevel}\r\n                    page={this.state.page}\r\n                    workerId=\"0\"\r\n                    menuSize={this.state.menuSize}\r\n                    jobCode={this.state.jobCode}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}settings`}\r\n                render={(props) => (\r\n                  <Settings\r\n                    changeStep={this.changeStep}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                    getServerSettings\r\n                    onChangeSettings={this.setSettings}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}performanceState`}\r\n                component={Performance}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}users`}\r\n                render={(props) => (\r\n                  <UserManagement\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={`${this.state.mainRoute}productionBoard`}\r\n                render={(props) => (\r\n                  <ProductionBoard\r\n                    claimingId={this.state.claimingId}\r\n                    settings={this.state.settings}\r\n                    setClaimingId={this.setClaimingId}\r\n                    claimOnPB={this.claimOnPB}\r\n                    logoutFromPB={this.logoutFromPB}\r\n                    apiRoute={this.state.apiRoute}\r\n                    mainRoute={this.state.mainRoute}\r\n                  />\r\n                )}\r\n              />\r\n            </main>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter, withRouter } from \"react-router-dom\";\r\n\r\nconst AppWithRouter = withRouter(App);\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <AppWithRouter />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}